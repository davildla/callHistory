{"ast":null,"code":"/**\n * Function which returns a MediaStreamFactory.\n * @public\n */\nexport function defaultMediaStreamFactory() {\n  return constraints => {\n    // if no audio or video, return a media stream without tracks\n    if (!constraints.audio && !constraints.video) {\n      return Promise.resolve(new MediaStream());\n    } // getUserMedia() is a powerful feature which can only be used in secure contexts; in insecure contexts,\n    // navigator.mediaDevices is undefined, preventing access to getUserMedia(). A secure context is, in short,\n    // a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Privacy_and_security\n\n\n    if (navigator.mediaDevices === undefined) {\n      return Promise.reject(new Error(\"Media devices not available in insecure contexts.\"));\n    }\n\n    return navigator.mediaDevices.getUserMedia.call(navigator.mediaDevices, constraints);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}