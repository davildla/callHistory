{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @packageDocumentation\n * @internalapi\n */\n\nvar events_1 = require(\"events\");\n\nvar connection_1 = require(\"./twilio/connection\");\n\nexports.Connection = connection_1.default;\n\nvar device_1 = require(\"./twilio/device\");\n\nexports.Device = device_1.default;\n\nvar preflight_1 = require(\"./twilio/preflight/preflight\");\n\nexports.PreflightTest = preflight_1.PreflightTest;\n\nvar PStream = require('./twilio/pstream');\n\nexports.PStream = PStream;\nvar instance;\nObject.defineProperty(device_1.default, 'instance', {\n  get: function () {\n    return instance;\n  },\n  set: function (_instance) {\n    if (_instance === null) {\n      instance = null;\n    }\n  }\n});\n\ndevice_1.default.destroy = function destroySingleton() {\n  if (instance) {\n    instance.destroy();\n  }\n\n  bindSingleton();\n};\n/**\n * Create a new Device instance and bind its functions to the Device static. This maintains\n * backwards compatibility for the Device singleton behavior and will be removed in the next\n * breaking release.\n */\n\n\nfunction bindSingleton() {\n  instance = new device_1.default();\n  Object.getOwnPropertyNames(device_1.default.prototype).concat(Object.getOwnPropertyNames(events_1.EventEmitter.prototype)).filter(function (prop) {\n    return typeof device_1.default.prototype[prop] === 'function';\n  }).filter(function (prop) {\n    return prop !== 'destroy';\n  }).forEach(function (prop) {\n    device_1.default[prop] = device_1.default.prototype[prop].bind(instance);\n  });\n}\n\nbindSingleton();\nObject.getOwnPropertyNames(instance).filter(function (prop) {\n  return typeof device_1.default.prototype[prop] !== 'function';\n}).forEach(function (prop) {\n  Object.defineProperty(device_1.default, prop, {\n    get: function () {\n      if (instance) {\n        return instance[prop];\n      }\n    },\n    set: function (_prop) {\n      if (instance) {\n        instance[prop] = _prop;\n      }\n    }\n  });\n});","map":{"version":3,"mappings":";;;;;AAAA;;;;;AAIA;;AACA;;AA6DSA,qBA7DFC,oBA6DE;;AA5DT;;AA4DqBD,iBA5DdE,gBA4Dc;;AA3DrB;;AA2D6BF,wBA3DpBG,yBA2DoB;;AAzD7B,IAAMC,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AAyD4CL;AAvD5C,IAAIM,QAAJ;AACAC,MAAM,CAACC,cAAP,CAAsBN,gBAAtB,EAA8B,UAA9B,EAA0C;EACxCO,GAAG,EAAE;IAAM;EAAQ,CADqB;EAExCC,GAAG,EAAE,UAACC,SAAD,EAAU;IACb,IAAIA,SAAS,KAAK,IAAlB,EAAwB;MACtBL,QAAQ,GAAG,IAAX;IACD;EACF;AANuC,CAA1C;;AASCJ,iBAAeU,OAAf,GAAyB,SAASC,gBAAT,GAAyB;EACjD,IAAIP,QAAJ,EAAc;IACZA,QAAQ,CAACM,OAAT;EACD;;EACDE,aAAa;AACd,CALA;AAOD;;;;;;;AAKA,SAASA,aAAT,GAAsB;EACpBR,QAAQ,GAAG,IAAIJ,gBAAJ,EAAX;EAEAK,MAAM,CAACQ,mBAAP,CAA2Bb,iBAAOc,SAAlC,EACGC,MADH,CACUV,MAAM,CAACQ,mBAAP,CAA2BG,sBAAaF,SAAxC,CADV,EAEGG,MAFH,CAEU,UAACC,IAAD,EAAmB;IACzB,OAAO,OAAOlB,iBAAOc,SAAP,CAAiBI,IAAjB,CAAP,KAAkC,UAAzC;EACD,CAJH,EAKGD,MALH,CAKU,gBAAI;IAAI,WAAI,KAAK,SAAT;EAAkB,CALpC,EAMGE,OANH,CAMW,gBAAI;IACVnB,iBAAekB,IAAf,IAAwBlB,iBAAOc,SAAP,CAAyBI,IAAzB,EAA+BE,IAA/B,CAAoChB,QAApC,CAAxB;EACF,CARH;AASD;;AAEDQ,aAAa;AAEbP,MAAM,CAACQ,mBAAP,CAA2BT,QAA3B,EACGa,MADH,CACU,UAACC,IAAD,EAAmB;EAAK,cAAOlB,iBAAOc,SAAP,CAAiBI,IAAjB,CAAP,KAAkC,UAAlC;AAA4C,CAD9E,EAEGC,OAFH,CAEW,UAACD,IAAD,EAAmB;EAC1Bb,MAAM,CAACC,cAAP,CAAsBN,gBAAtB,EAA8BkB,IAA9B,EAAoC;IAClCX,GAAG,EAAE;MACH,IAAIH,QAAJ,EAAc;QACZ,OAAOA,QAAQ,CAACc,IAAD,CAAf;MACD;IACF,CALiC;IAMlCV,GAAG,EAAE,UAACa,KAAD,EAAM;MACT,IAAIjB,QAAJ,EAAc;QACXA,QAAgB,CAACc,IAAD,CAAhB,GAAyBG,KAAzB;MACF;IACF;EAViC,CAApC;AAYD,CAfH","names":["exports","connection_1","device_1","preflight_1","PStream","require","instance","Object","defineProperty","get","set","_instance","destroy","destroySingleton","bindSingleton","getOwnPropertyNames","prototype","concat","events_1","filter","prop","forEach","bind","_prop"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/twilio-client/lib/twilio.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @internalapi\n */\nimport { EventEmitter } from 'events';\nimport Connection from './twilio/connection';\nimport Device from './twilio/device';\nimport { PreflightTest } from './twilio/preflight/preflight' ;\n\nconst PStream = require('./twilio/pstream');\n\nlet instance: Device | null | undefined;\nObject.defineProperty(Device, 'instance', {\n  get: () => instance,\n  set: (_instance) => {\n    if (_instance === null) {\n      instance = null;\n    }\n  },\n});\n\n(Device as any).destroy = function destroySingleton() {\n  if (instance) {\n    instance.destroy();\n  }\n  bindSingleton();\n};\n\n/**\n * Create a new Device instance and bind its functions to the Device static. This maintains\n * backwards compatibility for the Device singleton behavior and will be removed in the next\n * breaking release.\n */\nfunction bindSingleton() {\n  instance = new Device();\n\n  Object.getOwnPropertyNames(Device.prototype)\n    .concat(Object.getOwnPropertyNames(EventEmitter.prototype))\n    .filter((prop: keyof Device) => {\n      return typeof Device.prototype[prop] === 'function';\n    })\n    .filter(prop => prop !== 'destroy')\n    .forEach(prop => {\n      (Device as any)[prop] = (Device.prototype as any)[prop].bind(instance);\n    });\n}\n\nbindSingleton();\n\nObject.getOwnPropertyNames(instance)\n  .filter((prop: keyof Device) => typeof Device.prototype[prop] !== 'function')\n  .forEach((prop: keyof Device) => {\n    Object.defineProperty(Device, prop, {\n      get: () => {\n        if (instance) {\n          return instance[prop];\n        }\n      },\n      set: (_prop) => {\n        if (instance) {\n          (instance as any)[prop] = _prop;\n        }\n      },\n    });\n  });\n\nexport { Connection, Device, PreflightTest, PStream };\n"]},"metadata":{},"sourceType":"script"}