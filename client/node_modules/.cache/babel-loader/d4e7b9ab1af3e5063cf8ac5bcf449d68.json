{"ast":null,"code":"'use strict';\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar C = require('./constants');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Log = require('./log').default;\n\nvar WSTransport = require('./wstransport').default;\n\nvar _require = require('./errors'),\n    GeneralErrors = _require.GeneralErrors,\n    SignalingErrors = _require.SignalingErrors;\n\nvar PSTREAM_VERSION = '1.6';\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\n\nvar PStream = function (_EventEmitter) {\n  _inherits(PStream, _EventEmitter);\n\n  function PStream(token, uris, options) {\n    var _ret2;\n\n    _classCallCheck(this, PStream);\n\n    var _this = _possibleConstructorReturn(this, (PStream.__proto__ || Object.getPrototypeOf(PStream)).call(this));\n\n    if (!(_this instanceof PStream)) {\n      var _ret;\n\n      return _ret = new PStream(token, uris, options), _possibleConstructorReturn(_this, _ret);\n    }\n\n    var defaults = {\n      TransportFactory: WSTransport\n    };\n    options = options || {};\n\n    for (var prop in defaults) {\n      if (prop in options) continue;\n      options[prop] = defaults[prop];\n    }\n\n    _this.options = options;\n    _this.token = token || '';\n    _this.status = 'disconnected';\n    _this.gateway = null;\n    _this.region = null;\n    _this._messageQueue = [];\n    _this._preferredUri = null;\n    _this._uris = uris;\n    _this._handleTransportClose = _this._handleTransportClose.bind(_this);\n    _this._handleTransportError = _this._handleTransportError.bind(_this);\n    _this._handleTransportMessage = _this._handleTransportMessage.bind(_this);\n    _this._handleTransportOpen = _this._handleTransportOpen.bind(_this);\n    _this._log = Log.getInstance(); // NOTE(mroberts): EventEmitter requires that we catch all errors.\n\n    _this.on('error', function () {});\n    /*\n     *events used by device\n     *'invite',\n     *'ready',\n     *'error',\n     *'offline',\n     *\n     *'cancel',\n     *'presence',\n     *'roster',\n     *'answer',\n     *'candidate',\n     *'hangup'\n     */\n\n\n    var self = _this;\n\n    _this.addListener('ready', function () {\n      self.status = 'ready';\n    });\n\n    _this.addListener('offline', function () {\n      self.status = 'offline';\n    });\n\n    _this.addListener('close', function () {\n      self._log.info('Received \"close\" from server. Destroying PStream...');\n\n      self._destroy();\n    });\n\n    _this.transport = new _this.options.TransportFactory(_this._uris, {\n      backoffMaxMs: _this.options.backoffMaxMs,\n      maxPreferredDurationMs: _this.options.maxPreferredDurationMs\n    });\n    Object.defineProperties(_this, {\n      uri: {\n        enumerable: true,\n        get: function get() {\n          return this.transport.uri;\n        }\n      }\n    });\n\n    _this.transport.on('close', _this._handleTransportClose);\n\n    _this.transport.on('error', _this._handleTransportError);\n\n    _this.transport.on('message', _this._handleTransportMessage);\n\n    _this.transport.on('open', _this._handleTransportOpen);\n\n    _this.transport.open();\n\n    return _ret2 = _this, _possibleConstructorReturn(_this, _ret2);\n  }\n\n  return PStream;\n}(EventEmitter);\n\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', {\n      error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      }\n    });\n    return;\n  } // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n\n\n  this.emit('error', typeof error.code !== 'undefined' ? {\n    error: error\n  } : error);\n};\n\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  var _JSON$parse = JSON.parse(msg.data),\n      type = _JSON$parse.type,\n      _JSON$parse$payload = _JSON$parse.payload,\n      payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function () {\n  var _this2 = this;\n\n  this.status = 'connected';\n  this.setToken(this.token);\n  this.emit('transportOpen');\n\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n\n  messages.forEach(function (message) {\n    return _this2._publish.apply(_this2, _toConsumableArray(message));\n  });\n};\n/**\n * @return {string}\n */\n\n\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\n\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\n\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? {\n      params: params\n    } : {}\n  };\n\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.reconnect = function (sdp, callsid, reconnect, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    reconnect: reconnect,\n    preflight: false,\n    twilio: params ? {\n      params: params\n    } : {}\n  };\n\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', {\n    sdp: sdp,\n    callsid: callsid\n  }, true);\n};\n\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', {\n    callsid: callsid,\n    dtmf: digits\n  }, true);\n};\n\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? {\n    callsid: callsid,\n    message: message\n  } : {\n    callsid: callsid\n  };\n\n  this._publish('hangup', payload, true);\n};\n\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', {\n    callsid: callsid\n  }, true);\n};\n\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', {\n    sdp: sdp,\n    callsid: callsid\n  }, false);\n};\n\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n\n  this._destroy();\n\n  return this;\n};\n\nPStream.prototype.updatePreferredURI = function (uri) {\n  this._preferredUri = uri;\n  this.transport.updatePreferredURI(uri);\n};\n\nPStream.prototype.updateURIs = function (uris) {\n  this._uris = uris;\n  this.transport.updateURIs(this._uris);\n};\n\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n\n  if (!isSent) {\n    this.emit('error', {\n      error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      }\n    });\n\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\n\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n  return info;\n}\n\nmodule.exports = PStream;","map":{"version":3,"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","C","require","EventEmitter","Log","default","WSTransport","_require","GeneralErrors","SignalingErrors","PSTREAM_VERSION","PStream","_EventEmitter","token","uris","options","_ret2","_this","getPrototypeOf","_ret","defaults","TransportFactory","prop","status","gateway","region","_messageQueue","_preferredUri","_uris","_handleTransportClose","bind","_handleTransportError","_handleTransportMessage","_handleTransportOpen","_log","getInstance","on","addListener","info","_destroy","transport","backoffMaxMs","maxPreferredDurationMs","defineProperties","uri","get","open","emit","error","code","message","twilioError","ConnectionDisconnected","msg","data","_JSON$parse","JSON","parse","type","_JSON$parse$payload","payload","undefined","ConnectionError","_this2","setToken","messages","splice","forEach","_publish","apply","toString","browserinfo","getBrowserInfo","register","mediaCapabilities","regPayload","media","invite","sdp","callsid","preflight","params","twilio","reconnect","answer","dtmf","digits","hangup","reject","reinvite","removeListener","close","destroy","updatePreferredURI","updateURIs","publish","shouldRetry","stringify","version","isSent","send","TransportError","push","nav","navigator","p","v","RELEASE_VERSION","browser","userAgent","platform","plugin","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/@twilio/voice-sdk/es5/twilio/pstream.js"],"sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar C = require('./constants');\nvar EventEmitter = require('events').EventEmitter;\nvar Log = require('./log').default;\n\nvar WSTransport = require('./wstransport').default;\n\nvar _require = require('./errors'),\n    GeneralErrors = _require.GeneralErrors,\n    SignalingErrors = _require.SignalingErrors;\n\nvar PSTREAM_VERSION = '1.6';\n\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\n\nvar PStream = function (_EventEmitter) {\n  _inherits(PStream, _EventEmitter);\n\n  function PStream(token, uris, options) {\n    var _ret2;\n\n    _classCallCheck(this, PStream);\n\n    var _this = _possibleConstructorReturn(this, (PStream.__proto__ || Object.getPrototypeOf(PStream)).call(this));\n\n    if (!(_this instanceof PStream)) {\n      var _ret;\n\n      return _ret = new PStream(token, uris, options), _possibleConstructorReturn(_this, _ret);\n    }\n    var defaults = {\n      TransportFactory: WSTransport\n    };\n    options = options || {};\n    for (var prop in defaults) {\n      if (prop in options) continue;\n      options[prop] = defaults[prop];\n    }\n    _this.options = options;\n    _this.token = token || '';\n    _this.status = 'disconnected';\n    _this.gateway = null;\n    _this.region = null;\n    _this._messageQueue = [];\n    _this._preferredUri = null;\n    _this._uris = uris;\n\n    _this._handleTransportClose = _this._handleTransportClose.bind(_this);\n    _this._handleTransportError = _this._handleTransportError.bind(_this);\n    _this._handleTransportMessage = _this._handleTransportMessage.bind(_this);\n    _this._handleTransportOpen = _this._handleTransportOpen.bind(_this);\n\n    _this._log = Log.getInstance();\n\n    // NOTE(mroberts): EventEmitter requires that we catch all errors.\n    _this.on('error', function () {});\n\n    /*\n     *events used by device\n     *'invite',\n     *'ready',\n     *'error',\n     *'offline',\n     *\n     *'cancel',\n     *'presence',\n     *'roster',\n     *'answer',\n     *'candidate',\n     *'hangup'\n     */\n\n    var self = _this;\n\n    _this.addListener('ready', function () {\n      self.status = 'ready';\n    });\n\n    _this.addListener('offline', function () {\n      self.status = 'offline';\n    });\n\n    _this.addListener('close', function () {\n      self._log.info('Received \"close\" from server. Destroying PStream...');\n      self._destroy();\n    });\n\n    _this.transport = new _this.options.TransportFactory(_this._uris, {\n      backoffMaxMs: _this.options.backoffMaxMs,\n      maxPreferredDurationMs: _this.options.maxPreferredDurationMs\n    });\n\n    Object.defineProperties(_this, {\n      uri: {\n        enumerable: true,\n        get: function get() {\n          return this.transport.uri;\n        }\n      }\n    });\n\n    _this.transport.on('close', _this._handleTransportClose);\n    _this.transport.on('error', _this._handleTransportError);\n    _this.transport.on('message', _this._handleTransportMessage);\n    _this.transport.on('open', _this._handleTransportOpen);\n    _this.transport.open();\n\n    return _ret2 = _this, _possibleConstructorReturn(_this, _ret2);\n  }\n\n  return PStream;\n}(EventEmitter);\n\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', { error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    return;\n  }\n  // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n  this.emit('error', typeof error.code !== 'undefined' ? { error: error } : error);\n};\n\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  var _JSON$parse = JSON.parse(msg.data),\n      type = _JSON$parse.type,\n      _JSON$parse$payload = _JSON$parse.payload,\n      payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function () {\n  var _this2 = this;\n\n  this.status = 'connected';\n  this.setToken(this.token);\n\n  this.emit('transportOpen');\n\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n  messages.forEach(function (message) {\n    return _this2._publish.apply(_this2, _toConsumableArray(message));\n  });\n};\n\n/**\n * @return {string}\n */\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\n\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? { params: params } : {}\n  };\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.reconnect = function (sdp, callsid, reconnect, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    reconnect: reconnect,\n    preflight: false,\n    twilio: params ? { params: params } : {}\n  };\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', { sdp: sdp, callsid: callsid }, true);\n};\n\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', { callsid: callsid, dtmf: digits }, true);\n};\n\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? { callsid: callsid, message: message } : { callsid: callsid };\n  this._publish('hangup', payload, true);\n};\n\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', { callsid: callsid }, true);\n};\n\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', { sdp: sdp, callsid: callsid }, false);\n};\n\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n  this._destroy();\n  return this;\n};\n\nPStream.prototype.updatePreferredURI = function (uri) {\n  this._preferredUri = uri;\n  this.transport.updatePreferredURI(uri);\n};\n\nPStream.prototype.updateURIs = function (uris) {\n  this._uris = uris;\n  this.transport.updateURIs(this._uris);\n};\n\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n\n  if (!isSent) {\n    this.emit('error', { error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      } });\n\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\n\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n\n  return info;\n}\n\nmodule.exports = PStream;"],"mappings":"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"},"metadata":{},"sourceType":"script"}