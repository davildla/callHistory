{"ast":null,"code":"import _objectWithoutProperties from \"/home/david/Desktop/workSpace/bots-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/components/FormComp/CheckboxGroup.js\";\nimport React from 'react';\nimport TextError from './TextError';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox, FormControlLabel, FormControl, FormLabel, FormHelperText } from '@mui/material';\n\nfunction CheckboxGroup(props) {\n  var _this = this;\n\n  var label = props.label,\n      name = props.name,\n      options = props.options,\n      rest = _objectWithoutProperties(props, [\"label\", \"name\", \"options\"]); // return (\n  //     <div className='form-control'>\n  //         <label>{label}</label>\n  //         <Field name={name} {...rest}>\n  //             {\n  //                 ({ field }) => {\n  //                     return options.map((option, index) => {\n  //                         return(\n  //                             <React.Fragment key={index}>\n  //                                 <input \n  //                                     type='checkbox' \n  //                                     id={option.value} \n  //                                     {...field} \n  //                                     value={option.value} \n  //                                     checked={ field.value.includes(option.value) }\n  //                                 />\n  //                                 <label htmlFor={option.value}>{option.key}</label>\n  //                             </React.Fragment>\n  //                         )\n  //                     })\n  //                 }\n  //             }\n  //         </Field>\n  //         <ErrorMessage name={name} component={TextError} />\n  //     </div>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    error: form.errors[name] && form.touched[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(FormGroup, Object.assign({\n    name: name\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), options.map(function (option, index) {\n    return /*#__PURE__*/React.createElement(Field, {\n      type: \"checkbox\",\n      name: name,\n      value: option.value,\n      key: index,\n      as: FormControlLabel,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: field.value.includes(option.value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }\n      }),\n      label: option.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }\n    });\n  })), form.errors[name] && form.touched[name] ? /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, form.errors[name]) : null);\n}\n\nexport default CheckboxGroup;","map":{"version":3,"names":["React","TextError","Field","ErrorMessage","FormGroup","Checkbox","FormControlLabel","FormControl","FormLabel","FormHelperText","CheckboxGroup","props","label","name","options","rest","form","errors","touched","map","option","index","value","field","includes","key"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/components/FormComp/CheckboxGroup.js"],"sourcesContent":["import React from 'react';\nimport TextError from './TextError';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox, FormControlLabel, FormControl, FormLabel, FormHelperText } from '@mui/material';\n\nfunction CheckboxGroup(props) {\n    const { label, name, options, ...rest } = props;\n    // return (\n    //     <div className='form-control'>\n    //         <label>{label}</label>\n    //         <Field name={name} {...rest}>\n    //             {\n    //                 ({ field }) => {\n    //                     return options.map((option, index) => {\n    //                         return(\n    //                             <React.Fragment key={index}>\n    //                                 <input \n    //                                     type='checkbox' \n    //                                     id={option.value} \n    //                                     {...field} \n    //                                     value={option.value} \n    //                                     checked={ field.value.includes(option.value) }\n    //                                 />\n    //                                 <label htmlFor={option.value}>{option.key}</label>\n    //                             </React.Fragment>\n    //                         )\n    //                     })\n    //                 }\n    //             }\n    //         </Field>\n    //         <ErrorMessage name={name} component={TextError} />\n    //     </div>\n    // );\n\n    return (\n        <FormControl error={form.errors[name] && form.touched[name]}>\n            <FormLabel htmlFor={name}>{label}</FormLabel>\n            <FormGroup name={name} {...rest}>\n                {\n                    options.map((option, index) => {\n\n                        return <Field\n                                    type=\"checkbox\"\n                                    name={name}\n                                    value={option.value}\n                                    key={index}\n                                    as={FormControlLabel}\n                                    control={\n                                        <Checkbox\n                                            checked={field.value.includes(option.value)}\n                                        />\n                                    }\n                                    label={option.key}\n                            \n                        />\n                    })\n                }\n            </FormGroup>\n            {\n                form.errors[name] && form.touched[name] ? (\n                    <FormHelperText error >{form.errors[name]}</FormHelperText>\n                ) : null\n            } \n        </FormControl>\n\n    );\n}\n\nexport default CheckboxGroup;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,gBAA9B,EAAgDC,WAAhD,EAA6DC,SAA7D,EAAwEC,cAAxE,QAA8F,eAA9F;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAAA,IAClBC,KADkB,GACgBD,KADhB,CAClBC,KADkB;EAAA,IACXC,IADW,GACgBF,KADhB,CACXE,IADW;EAAA,IACLC,OADK,GACgBH,KADhB,CACLG,OADK;EAAA,IACOC,IADP,4BACgBJ,KADhB,iCAE1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACI,oBAAC,WAAD;IAAa,KAAK,EAAEK,IAAI,CAACC,MAAL,CAAYJ,IAAZ,KAAqBG,IAAI,CAACE,OAAL,CAAaL,IAAb,CAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IAAW,OAAO,EAAEA,IAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA2BD,KAA3B,CADJ,eAEI,oBAAC,SAAD;IAAW,IAAI,EAAEC;EAAjB,GAA2BE,IAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAEQD,OAAO,CAACK,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;IAE3B,oBAAO,oBAAC,KAAD;MACK,IAAI,EAAC,UADV;MAEK,IAAI,EAAER,IAFX;MAGK,KAAK,EAAEO,MAAM,CAACE,KAHnB;MAIK,GAAG,EAAED,KAJV;MAKK,EAAE,EAAEf,gBALT;MAMK,OAAO,eACH,oBAAC,QAAD;QACI,OAAO,EAAEiB,KAAK,CAACD,KAAN,CAAYE,QAAZ,CAAqBJ,MAAM,CAACE,KAA5B,CADb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAPT;MAWK,KAAK,EAAEF,MAAM,CAACK,GAXnB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EAcH,CAhBD,CAFR,CAFJ,EAwBQT,IAAI,CAACC,MAAL,CAAYJ,IAAZ,KAAqBG,IAAI,CAACE,OAAL,CAAaL,IAAb,CAArB,gBACI,oBAAC,cAAD;IAAgB,KAAK,MAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAwBG,IAAI,CAACC,MAAL,CAAYJ,IAAZ,CAAxB,CADJ,GAEI,IA1BZ,CADJ;AAgCH;;AAED,eAAeH,aAAf"},"metadata":{},"sourceType":"module"}