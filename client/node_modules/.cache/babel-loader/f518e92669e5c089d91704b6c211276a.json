{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar axios = require('axios');\n\nvar fs = require('fs');\n\nvar HttpsProxyAgent = require('https-proxy-agent');\n\nvar Q = require('q');\n\nvar qs = require('qs');\n\nvar url = require('url');\n\nvar https = require('https');\n\nvar Response = require('../http/response');\n\nvar Request = require('../http/request');\n\nconst DEFAULT_CONTENT_TYPE = 'application/x-www-form-urlencoded';\nconst DEFAULT_TIMEOUT = 30000;\n/**\n * Make http request\n * @param {object} opts - The options passed to https.Agent\n * @param {number} opts.timeout - https.Agent timeout option. Used as the socket timeout, AND as the default request timeout.\n * @param {boolean} opts.keepAlive - https.Agent keepAlive option\n * @param {number} opts.keepAliveMsecs - https.Agent keepAliveMsecs option\n * @param {number} opts.maxSockets - https.Agent maxSockets option\n * @param {number} opts.maxTotalSockets - https.Agent maxTotalSockets option\n * @param {number} opts.maxFreeSockets - https.Agent maxFreeSockets option\n * @param {string} opts.scheduling - https.Agent scheduling option\n */\n\nvar RequestClient = function (opts) {\n  opts = opts || {};\n  this.defaultTimeout = opts.timeout || DEFAULT_TIMEOUT; // construct an https agent\n\n  let agentOpts = {\n    timeout: this.defaultTimeout,\n    keepAlive: opts.keepAlive,\n    keepAliveMsecs: opts.keepAliveMsecs,\n    maxSockets: opts.maxSockets,\n    maxTotalSockets: opts.maxTotalSockets,\n    maxFreeSockets: opts.maxFreeSockets,\n    scheduling: opts.scheduling\n  };\n  let agent;\n\n  if (process.env.HTTP_PROXY) {\n    // Note: if process.env.HTTP_PROXY is set, we're not able to apply the given\n    // socket timeout. See: https://github.com/TooTallNate/node-https-proxy-agent/pull/96\n    agent = new HttpsProxyAgent(process.env.HTTP_PROXY);\n  } else {\n    agent = new https.Agent(agentOpts);\n  } // construct an axios instance\n\n\n  this.axios = axios.create();\n  this.axios.defaults.headers.post['Content-Type'] = DEFAULT_CONTENT_TYPE;\n  this.axios.defaults.httpsAgent = agent;\n};\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n * @param {string} [opts.logLevel] - Show debug logs\n */\n\n\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n\n  if (!headers.Connection && !headers.connection && opts.forever) {\n    headers.Connection = 'keep-alive';\n  } else if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n\n  var options = {\n    timeout: opts.timeout || this.defaultTimeout,\n    maxRedirects: opts.allowRedirects ? 10 : 0,\n    // Same number of allowed redirects as request module default\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    proxy: false,\n    validateStatus: status => status >= 100 && status < 600\n  };\n\n  if (process.env.TWILIO_CA_BUNDLE !== undefined) {\n    if (this.ca === undefined) {\n      this.ca = fs.readFileSync(process.env.TWILIO_CA_BUNDLE);\n    }\n\n    options.ca = this.ca;\n  }\n\n  if (!_.isNull(opts.data)) {\n    options.data = qs.stringify(opts.data, {\n      arrayFormat: 'repeat'\n    });\n  }\n\n  if (!_.isNull(opts.params)) {\n    options.params = opts.params;\n\n    options.paramsSerializer = params => {\n      return qs.stringify(params, {\n        arrayFormat: 'repeat'\n      });\n    };\n  }\n\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.params,\n    data: opts.data,\n    headers: options.headers,\n    ca: options.ca\n  };\n\n  if (opts.logLevel === 'debug') {\n    this.logRequest(options);\n  }\n\n  var _this = this;\n\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n  this.axios(options).then(response => {\n    if (opts.logLevel === 'debug') {\n      console.log(`response.statusCode: ${response.status}`);\n      console.log(`response.headers: ${JSON.stringify(response.headers)}`);\n    }\n\n    _this.lastResponse = new Response(response.status, response.data, response.headers);\n    deferred.resolve({\n      statusCode: response.status,\n      body: response.data,\n      headers: response.headers\n    });\n  }).catch(error => {\n    _this.lastResponse = undefined;\n    deferred.reject(error);\n  });\n  return deferred.promise;\n};\n\nRequestClient.prototype.filterLoggingHeaders = function (headers) {\n  return Object.keys(headers).filter(header => {\n    return !'authorization'.includes(header.toLowerCase());\n  });\n};\n\nRequestClient.prototype.logRequest = function (options) {\n  console.log('-- BEGIN Twilio API Request --');\n  console.log(`${options.method} ${options.url}`);\n\n  if (options.params) {\n    console.log('Querystring:');\n    console.log(options.params);\n  }\n\n  if (options.headers) {\n    console.log('Headers:');\n    const filteredHeaderKeys = this.filterLoggingHeaders(options.headers);\n    filteredHeaderKeys.forEach(header => console.log(`${header}: ${options.headers[header]}`));\n  }\n\n  console.log('-- END Twilio API Request --');\n};\n\nmodule.exports = RequestClient;","map":{"version":3,"names":["_","require","axios","fs","HttpsProxyAgent","Q","qs","url","https","Response","Request","DEFAULT_CONTENT_TYPE","DEFAULT_TIMEOUT","RequestClient","opts","defaultTimeout","timeout","agentOpts","keepAlive","keepAliveMsecs","maxSockets","maxTotalSockets","maxFreeSockets","scheduling","agent","process","env","HTTP_PROXY","Agent","create","defaults","headers","post","httpsAgent","prototype","request","method","Error","uri","deferred","defer","Connection","connection","forever","username","password","b64Auth","Buffer","from","toString","Authorization","options","maxRedirects","allowRedirects","proxy","validateStatus","status","TWILIO_CA_BUNDLE","undefined","ca","readFileSync","isNull","data","stringify","arrayFormat","params","paramsSerializer","optionsRequest","auth","logLevel","logRequest","_this","lastResponse","lastRequest","then","response","console","log","JSON","resolve","statusCode","body","catch","error","reject","promise","filterLoggingHeaders","Object","keys","filter","header","includes","toLowerCase","filteredHeaderKeys","forEach","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/twilio/lib/base/RequestClient.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar axios = require('axios');\nvar fs = require('fs');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar Q = require('q');\nvar qs = require('qs');\nvar url = require('url');\nvar https = require('https');\nvar Response = require('../http/response');\nvar Request = require('../http/request');\n\nconst DEFAULT_CONTENT_TYPE = 'application/x-www-form-urlencoded';\nconst DEFAULT_TIMEOUT = 30000;\n\n/**\n * Make http request\n * @param {object} opts - The options passed to https.Agent\n * @param {number} opts.timeout - https.Agent timeout option. Used as the socket timeout, AND as the default request timeout.\n * @param {boolean} opts.keepAlive - https.Agent keepAlive option\n * @param {number} opts.keepAliveMsecs - https.Agent keepAliveMsecs option\n * @param {number} opts.maxSockets - https.Agent maxSockets option\n * @param {number} opts.maxTotalSockets - https.Agent maxTotalSockets option\n * @param {number} opts.maxFreeSockets - https.Agent maxFreeSockets option\n * @param {string} opts.scheduling - https.Agent scheduling option\n */\nvar RequestClient = function (opts) {\n  opts = opts || {};\n  this.defaultTimeout = opts.timeout || DEFAULT_TIMEOUT;\n\n  // construct an https agent\n  let agentOpts = {\n    timeout: this.defaultTimeout,\n    keepAlive: opts.keepAlive,\n    keepAliveMsecs: opts.keepAliveMsecs,\n    maxSockets: opts.maxSockets,\n    maxTotalSockets: opts.maxTotalSockets,\n    maxFreeSockets: opts.maxFreeSockets,\n    scheduling: opts.scheduling,\n  };\n\n  let agent;\n  if (process.env.HTTP_PROXY) {\n    // Note: if process.env.HTTP_PROXY is set, we're not able to apply the given\n    // socket timeout. See: https://github.com/TooTallNate/node-https-proxy-agent/pull/96\n    agent = new HttpsProxyAgent(process.env.HTTP_PROXY);\n  } else {\n    agent = new https.Agent(agentOpts);\n  }\n\n  // construct an axios instance\n  this.axios = axios.create();\n  this.axios.defaults.headers.post['Content-Type'] = DEFAULT_CONTENT_TYPE;\n  this.axios.defaults.httpsAgent = agent;\n};\n\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n * @param {string} [opts.logLevel] - Show debug logs\n */\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n\n  if (!headers.Connection && !headers.connection && opts.forever) {\n    headers.Connection = 'keep-alive';\n  } else if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n\n  var options = {\n    timeout: opts.timeout || this.defaultTimeout,\n    maxRedirects: opts.allowRedirects ? 10 : 0, // Same number of allowed redirects as request module default\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    proxy: false,\n    validateStatus: status => status >= 100 && status < 600,\n  };\n\n  if (process.env.TWILIO_CA_BUNDLE !== undefined) {\n    if (this.ca === undefined) {\n      this.ca = fs.readFileSync(process.env.TWILIO_CA_BUNDLE);\n    }\n    options.ca = this.ca;\n  }\n\n  if (!_.isNull(opts.data)) {\n    options.data = qs.stringify(opts.data, { arrayFormat: 'repeat' });\n  }\n\n  if (!_.isNull(opts.params)) {\n    options.params = opts.params;\n    options.paramsSerializer = (params) => {\n      return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n  }\n\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.params,\n    data: opts.data,\n    headers: options.headers,\n    ca: options.ca\n  };\n\n  if (opts.logLevel === 'debug') {\n    this.logRequest(options)\n  }\n\n  var _this = this;\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n\n  this.axios(options).then((response) => {\n    if (opts.logLevel === 'debug') {\n      console.log(`response.statusCode: ${response.status}`)\n      console.log(`response.headers: ${JSON.stringify(response.headers)}`)\n    }\n    _this.lastResponse = new Response(response.status, response.data, response.headers);\n    deferred.resolve({\n      statusCode: response.status,\n      body: response.data,\n      headers: response.headers,\n    });\n  }).catch((error) => {\n    _this.lastResponse = undefined;\n    deferred.reject(error);\n  });\n\n  return deferred.promise;\n};\n\nRequestClient.prototype.filterLoggingHeaders = function (headers){\n  return Object.keys(headers).filter((header) => {\n    return !'authorization'.includes(header.toLowerCase());\n  });\n};\n\nRequestClient.prototype.logRequest = function (options){\n  console.log('-- BEGIN Twilio API Request --');\n  console.log(`${options.method} ${options.url}`);\n\n  if (options.params) {\n    console.log('Querystring:');\n    console.log(options.params);\n  }\n\n  if (options.headers) {\n    console.log('Headers:');\n    const filteredHeaderKeys = this.filterLoggingHeaders(options.headers);\n    filteredHeaderKeys.forEach((header) => console.log(`${header}: ${options.headers[header]}`));\n  }\n\n  console.log('-- END Twilio API Request --');\n};\n\nmodule.exports = RequestClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}