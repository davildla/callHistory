{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Device } from 'twilio-client';\nimport utils from '../utils/phoneUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Phone(props) {\n  _s();\n\n  const [identity, setIdentity] = useState('');\n  const [status, setStatus] = useState('');\n  const [ready, setReady] = useState(false);\n  const [device, setDevice] = useState(null);\n  const [callActive, setCallActice] = useState(false);\n  const [call, setCall] = useState();\n  useEffect(() => {\n    let isMounted = true;\n\n    const getData = async () => {\n      return await utils.generateToken('userName');\n    };\n\n    getData().then(data => {\n      if (isMounted) {\n        const twilioDevice = new Device(data.token);\n        twilioDevice.on('incoming', connection => {\n          // immediately accepts incoming connection\n          connection.accept();\n          console.log(2);\n          setStatus(connection.status());\n        });\n        twilioDevice.on('ready', device => {\n          setStatus(\"device ready\");\n          setReady(true);\n          setDevice(device);\n        });\n        twilioDevice.on('connect', connection => {\n          console.log(connection.status());\n\n          if (connection.status() === 'open') {\n            setCall(connection);\n          }\n\n          setStatus(connection.status());\n\n          if (\"phoneNumber\" in connection.message) {\n            setStatus(\"In call with \" + connection.message.phoneNumber);\n          }\n        });\n        twilioDevice.on('disconnect', connection => {\n          console.log('disconnect');\n          setStatus(connection.status());\n        });\n        twilioDevice.on(\"error\", error => {\n          console.log(\"Twilio.Device Error: \" + error.message);\n          setStatus(\"ERROR: \" + error.message);\n        });\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: identity,\n      placeholder: \"phone\",\n      onChange: e => setIdentity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: ready ? false : true,\n      type: \"button\",\n      value: \"call\",\n      onClick: async () => {\n        device.connect({\n          phoneNumber: '972534217014'\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !callActive,\n      children: \"hangup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !callActive,\n      children: \"mute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !callActive,\n      children: \"unmute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Phone, \"DzEmKeTdz4RnLiIDln1UnfxH/PY=\");\n\n_c = Phone;\nexport default Phone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"names":["React","useState","useEffect","Device","utils","Phone","props","identity","setIdentity","status","setStatus","ready","setReady","device","setDevice","callActive","setCallActice","call","setCall","isMounted","getData","generateToken","then","data","twilioDevice","token","on","connection","accept","console","log","message","phoneNumber","error","e","target","value","connect"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Device } from 'twilio-client'\nimport utils from '../utils/phoneUtils';\n\nfunction Phone(props) {\n    const [identity, setIdentity] = useState('');\n    const [status, setStatus] = useState('');\n    const [ready, setReady] = useState(false);\n    const [device, setDevice] = useState(null);\n    const [callActive, setCallActice] = useState(false);\n    const [call, setCall] = useState();\n\n    useEffect(()=>{\n        let isMounted = true;\n\n        const getData = async ()=>{\n            return await utils.generateToken('userName');\n        };\n\n        getData().then(\n            data => {\n                if (isMounted) {\n                    const twilioDevice = new Device(data.token); \n        \n                    twilioDevice.on('incoming', connection => {\n                        // immediately accepts incoming connection\n                        connection.accept();\n                        console.log(2);\n                        setStatus(connection.status());\n                    });\n                        \n                    twilioDevice.on('ready', device => {\n                        setStatus(\"device ready\");\n                        setReady(true);\n                        setDevice(device)\n                    });\n                    \n                    twilioDevice.on('connect', connection => {\n                        console.log(connection.status());\n                        if (connection.status() === 'open') {\n                            setCall(connection)\n                        }\n                        setStatus(connection.status())\n                        if (\"phoneNumber\" in connection.message) {\n                            setStatus(\"In call with \" + connection.message.phoneNumber);\n                        }\n                    });\n                    \n                    twilioDevice.on('disconnect', connection => {\n                        console.log('disconnect');\n                        setStatus(connection.status())\n                    });\n        \n                    twilioDevice.on(\"error\", (error) => {\n                        console.log(\"Twilio.Device Error: \" + error.message);\n                        setStatus(\"ERROR: \" + error.message);\n                    });\n                }\n            }\n        );\n\n        return () => { isMounted = false };\n    },[]);\n    \n\n    return (\n        <div>\n                    <input \n                        type=\"text\" \n                        value={identity}\n                        placeholder=\"phone\"\n                        onChange={(e) => setIdentity(e.target.value)}\n                    />\n                    <input \n                        disabled={ready ? false : true}\n                        type=\"button\" \n                        value=\"call\" \n                        onClick={async () => {\n                            device.connect({ phoneNumber : '972534217014' });\n                        }}\n                    />\n                    <br/>\n                    <button\n                        disabled={!callActive}\n                    >\n                        hangup\n                    </button>\n                    <button\n                        disabled={!callActive}\n                    >\n                        mute\n                    </button>\n                    <button\n                        disabled={!callActive}\n                    >\n                        unmute\n                    </button>\n            <p>{ status }</p>\n        </div>\n    );\n}\n\nexport default Phone;"],"mappings":"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"},"metadata":{},"sourceType":"module"}