{"ast":null,"code":"import fetch from '../../lib/fetch';\nimport utils from '../utils';\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst getRecordsCount = async systemId => {\n  const url = `${SERVER_URL}/api/records/get-records-count`;\n  let res = null;\n\n  try {\n    const resp = await fetch.fetchGet(url, {\n      systemId\n    });\n    res = resp.data;\n  } catch {}\n\n  return res;\n};\n\nconst uploadRecords = async (records, systemId, fileName) => {\n  let res = {\n    status: 'success',\n    msg: 'דאטא נטענה בהצלחה'\n  };\n  let formatedRecords = [];\n\n  for (let index = 0; index < records.length; index++) {\n    const record = records[index];\n    record.systemId = systemId;\n    record.phone = utils.validatePhoneNumber(record.phone);\n    if (record.phone && record.name !== '') formatedRecords.push(record); // proccessing\n\n    if (index !== 0 && index % 100 === 0) {\n      // send formated to server\n      let resp = await fetch.fetchPost(`${SERVER_URL}/api/records/add-records`, {\n        records: formatedRecords\n      });\n      if (resp.data !== 'ok') res = {\n        status: 'error',\n        msg: 'חלה שגיאה'\n      }; // reset formated array\n\n      formatedRecords = [];\n    }\n  } // send formated that left to server\n\n\n  let resp = await fetch.fetchPost(`${SERVER_URL}/api/records/add-records`, {\n    records: formatedRecords\n  });\n  if (resp.data !== 'ok') res = {\n    status: 'error',\n    msg: 'חלה שגיאה'\n  };\n  console.log(res);\n  return res;\n};\n\nconst funcs = {\n  getRecordsCount,\n  uploadRecords\n};\nexport default funcs;","map":{"version":3,"names":["fetch","utils","SERVER_URL","process","env","REACT_APP_SERVER_URL","getRecordsCount","systemId","url","res","resp","fetchGet","data","uploadRecords","records","fileName","status","msg","formatedRecords","index","length","record","phone","validatePhoneNumber","name","push","fetchPost","console","log","funcs"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/utils/manage/recordsUtils.js"],"sourcesContent":["import fetch from '../../lib/fetch';\nimport utils from '../utils';\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\n\nconst getRecordsCount = async (systemId) => {\n    const url = `${SERVER_URL}/api/records/get-records-count`;\n    let res = null;\n\n    try {\n        const resp = await fetch.fetchGet(url, {systemId});\n        res = resp.data;\n    } catch {}\n\n    return res;\n}\n\nconst uploadRecords = async (records, systemId, fileName) => {\n    let res = {status : 'success', msg : 'דאטא נטענה בהצלחה'};\n    let formatedRecords = [];\n\n    for (let index = 0; index < records.length; index++) {\n        const record = records[index];\n\n        record.systemId = systemId;\n\n        record.phone = utils.validatePhoneNumber(record.phone);\n\n        if (record.phone && record.name !== '') formatedRecords.push(record);\n\n        // proccessing\n        if (index !== 0 && index % 100 === 0) {\n            // send formated to server\n            let resp = await fetch.fetchPost(`${SERVER_URL}/api/records/add-records`, {records : formatedRecords});\n            if (resp.data !== 'ok') res = {status : 'error', msg : 'חלה שגיאה'}\n            // reset formated array\n            formatedRecords = []\n        }\n    }\n\n    // send formated that left to server\n    let resp = await fetch.fetchPost(`${SERVER_URL}/api/records/add-records`, {records : formatedRecords})\n    if (resp.data !== 'ok') res = {status : 'error', msg : 'חלה שגיאה'}\n\n    console.log(res);\n    return res;\n}\n\nconst funcs = {\n    getRecordsCount,\n    uploadRecords,\n}\n\nexport default funcs;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;;AAGA,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAAoB;EACxC,MAAMC,GAAG,GAAI,GAAEN,UAAW,gCAA1B;EACA,IAAIO,GAAG,GAAG,IAAV;;EAEA,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,QAAN,CAAeH,GAAf,EAAoB;MAACD;IAAD,CAApB,CAAnB;IACAE,GAAG,GAAGC,IAAI,CAACE,IAAX;EACH,CAHD,CAGE,MAAM,CAAE;;EAEV,OAAOH,GAAP;AACH,CAVD;;AAYA,MAAMI,aAAa,GAAG,OAAOC,OAAP,EAAgBP,QAAhB,EAA0BQ,QAA1B,KAAuC;EACzD,IAAIN,GAAG,GAAG;IAACO,MAAM,EAAG,SAAV;IAAqBC,GAAG,EAAG;EAA3B,CAAV;EACA,IAAIC,eAAe,GAAG,EAAtB;;EAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,OAAO,CAACM,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;IACjD,MAAME,MAAM,GAAGP,OAAO,CAACK,KAAD,CAAtB;IAEAE,MAAM,CAACd,QAAP,GAAkBA,QAAlB;IAEAc,MAAM,CAACC,KAAP,GAAerB,KAAK,CAACsB,mBAAN,CAA0BF,MAAM,CAACC,KAAjC,CAAf;IAEA,IAAID,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACG,IAAP,KAAgB,EAApC,EAAwCN,eAAe,CAACO,IAAhB,CAAqBJ,MAArB,EAPS,CASjD;;IACA,IAAIF,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,GAAR,KAAgB,CAAnC,EAAsC;MAClC;MACA,IAAIT,IAAI,GAAG,MAAMV,KAAK,CAAC0B,SAAN,CAAiB,GAAExB,UAAW,0BAA9B,EAAyD;QAACY,OAAO,EAAGI;MAAX,CAAzD,CAAjB;MACA,IAAIR,IAAI,CAACE,IAAL,KAAc,IAAlB,EAAwBH,GAAG,GAAG;QAACO,MAAM,EAAG,OAAV;QAAmBC,GAAG,EAAG;MAAzB,CAAN,CAHU,CAIlC;;MACAC,eAAe,GAAG,EAAlB;IACH;EACJ,CArBwD,CAuBzD;;;EACA,IAAIR,IAAI,GAAG,MAAMV,KAAK,CAAC0B,SAAN,CAAiB,GAAExB,UAAW,0BAA9B,EAAyD;IAACY,OAAO,EAAGI;EAAX,CAAzD,CAAjB;EACA,IAAIR,IAAI,CAACE,IAAL,KAAc,IAAlB,EAAwBH,GAAG,GAAG;IAACO,MAAM,EAAG,OAAV;IAAmBC,GAAG,EAAG;EAAzB,CAAN;EAExBU,OAAO,CAACC,GAAR,CAAYnB,GAAZ;EACA,OAAOA,GAAP;AACH,CA7BD;;AA+BA,MAAMoB,KAAK,GAAG;EACVvB,eADU;EAEVO;AAFU,CAAd;AAKA,eAAegB,KAAf"},"metadata":{},"sourceType":"module"}