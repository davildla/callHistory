{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/DialPad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Button, TextField, IconButton } from '@mui/material';\nimport { SessionState } from \"sip.js\";\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\nimport CallEndSharpIcon from '@mui/icons-material/CallEndSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialPad = _ref => {\n  _s();\n\n  let {\n    makeCall,\n    call\n  } = _ref;\n  const [number, setNumber] = useState('');\n  const [incomming, setIncomming] = useState(false);\n  const [callInProgress, setCallProgress] = useState(false);\n  console.log({\n    incomming\n  });\n\n  const endCall = () => {\n    switch (call === null || call === void 0 ? void 0 : call._state) {\n      case SessionState.Initial:\n        call.cancel();\n        break;\n\n      case SessionState.Establishing:\n        call.cancel();\n        break;\n\n      case SessionState.Established:\n        call.bye();\n        break;\n\n      case SessionState.Terminating:\n        break;\n\n      case SessionState.Terminated:\n        break;\n\n      default:\n        break;\n    }\n\n    setCallProgress(false);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleCallClick = () => {\n    console.log(`Calling number: ${number}`);\n    setCallProgress(true);\n    makeCall(number); // Add your logic for initiating a call here\n  };\n\n  const handleDeleteClick = () => {\n    setNumber(number.slice(0, -1));\n  };\n\n  const onDigitPress = digit => {\n    if ((call === null || call === void 0 ? void 0 : call._state) === SessionState.Established) {\n      call.info({\n        requestOptions: {\n          body: {\n            contentDisposition: \"render\",\n            contentType: \"application/dtmf-relay\",\n            content: `Signal=${digit}\\r\\nDuration=1000`\n          }\n        }\n      });\n    } // if call is active, we will send the digit as dtmf\n\n\n    setNumber(prev => `${prev}${digit}`);\n  };\n\n  const DigitBtn = _ref2 => {\n    let {\n      digit\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => onDigitPress(digit),\n      children: digit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  };\n\n  const digits = ['3', '2', '1', '6', '5', '4', '9', '8', '7', '#', '0', '*'];\n\n  if ((call === null || call === void 0 ? void 0 : call._state) === 'Initial') {\n    setIncomming(true);\n    let p = 'y'; //prompt('answer');\n\n    if (p === 'y') call.accept();else call.reject();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    style: {\n      maxWidth: '200px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u05D4\\u05D6\\u05DF \\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\",\n        value: number,\n        onChange: handleNumberChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), digits.map(digit => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(DigitBtn, {\n        digit: digit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 67\n      }, this)\n    }, digit, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"error\",\n            onClick: endCall,\n            style: {\n              visibility: callInProgress && call ? 'visible' : 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(CallEndSharpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"success\",\n            onClick: handleCallClick,\n            style: {\n              visibility: !callInProgress || !call ? 'visible' : 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(PhoneInTalkIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDeleteClick,\n            style: {\n              visibility: number === '' || call ? 'hidden' : 'visible'\n            },\n            children: /*#__PURE__*/_jsxDEV(BackspaceIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DialPad, \"7JfLoEQIbZjSMDjZDi24gL7UhVU=\");\n\n_c = DialPad;\nexport default DialPad;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialPad\");","map":{"version":3,"names":["React","useState","Grid","Button","TextField","IconButton","SessionState","BackspaceIcon","PhoneInTalkIcon","CallEndSharpIcon","DialPad","makeCall","call","number","setNumber","incomming","setIncomming","callInProgress","setCallProgress","console","log","endCall","_state","Initial","cancel","Establishing","Established","bye","Terminating","Terminated","handleNumberChange","event","target","value","handleCallClick","handleDeleteClick","slice","onDigitPress","digit","info","requestOptions","body","contentDisposition","contentType","content","prev","DigitBtn","digits","p","accept","reject","maxWidth","map","textAlign","visibility"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/DialPad.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Button, TextField, IconButton } from '@mui/material';\nimport { SessionState } from \"sip.js\";\n\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\nimport CallEndSharpIcon from '@mui/icons-material/CallEndSharp';\n\n\nconst DialPad = ({ makeCall, call }) => {\n    const [number, setNumber] = useState('');\n    const [incomming, setIncomming] = useState(false);\n    const [callInProgress, setCallProgress] = useState(false);\n\n    console.log({incomming});\n\n    const endCall = () => {\n        switch (call?._state) {\n            case SessionState.Initial:\n                call.cancel();\n                break;\n            case SessionState.Establishing:\n                call.cancel();\n                break;\n            case SessionState.Established:\n                call.bye();\n                break;\n            case SessionState.Terminating:\n                break;\n            case SessionState.Terminated:\n                break;\n\n            default:\n                break;\n        }\n        setCallProgress(false);\n    }\n\n    const handleNumberChange = (event) => {\n        setNumber(event.target.value);\n    };\n\n    const handleCallClick = () => {\n        console.log(`Calling number: ${number}`);\n        setCallProgress(true);\n        makeCall(number);\n        // Add your logic for initiating a call here\n    };\n\n    const handleDeleteClick = () => {\n        setNumber(number.slice(0, -1));\n    };\n\n    const onDigitPress = (digit) => {\n        if (call?._state === SessionState.Established) {\n            call.info({\n                requestOptions : {\n                    body: {\n                        contentDisposition: \"render\",\n                        contentType: \"application/dtmf-relay\",\n                        content: `Signal=${digit}\\r\\nDuration=1000`\n                    }\n                }\n            })\n        }\n        // if call is active, we will send the digit as dtmf\n        setNumber(prev => `${prev}${digit}`);\n    }\n\n    const DigitBtn = ({ digit }) => (\n        <Button variant=\"outlined\" onClick={() => onDigitPress(digit)}>\n            {digit}\n        </Button>\n    );\n\n    const digits = ['3', '2', '1', '6', '5', '4', '9', '8', '7', '#', '0', '*'];\n\n\n    if (call?._state === 'Initial') {\n        setIncomming(true);\n        let p = 'y' //prompt('answer');\n\n        if (p === 'y') call.accept();\n        else call.reject();\n    }\n\n    return (\n        <Grid container spacing={2} justify=\"center\" style={{ maxWidth: '200px' }}>\n            <Grid item xs={12}>\n                <TextField\n                    label=\"הזן מספר טלפון\"\n                    value={number}\n                    onChange={handleNumberChange}\n                    variant=\"standard\"\n                    fullWidth\n                />\n            </Grid>\n            {\n                digits.map(digit => <Grid item xs={4} key={digit}><DigitBtn digit={digit} /></Grid>)\n            }\n            <Grid item xs={12} style={{ textAlign: 'center' }}>\n                <Grid container>\n                    <Grid item xs={4}>\n                        <IconButton\n                            color=\"error\"\n                            onClick={endCall}\n                            style={{ visibility: callInProgress && call ? 'visible' : 'hidden' }}\n\n                        >\n                            <CallEndSharpIcon />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <IconButton\n                            color=\"success\"\n                            onClick={handleCallClick}\n                            style={{ visibility: !callInProgress || !call ? 'visible' : 'hidden' }}\n                        >\n                            <PhoneInTalkIcon />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <IconButton\n                            onClick={handleDeleteClick}\n                            style={{ visibility: number === '' || call ? 'hidden' : 'visible' }}\n                        >\n                            <BackspaceIcon />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default DialPad;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}