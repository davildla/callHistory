{"ast":null,"code":"'use strict';\n\nvar _require = require('../errors'),\n    InvalidArgumentError = _require.InvalidArgumentError,\n    MediaErrors = _require.MediaErrors,\n    NotSupportedError = _require.NotSupportedError,\n    SignalingErrors = _require.SignalingErrors;\n\nvar Log = require('../log').default;\n\nvar util = require('../util');\n\nvar RTCPC = require('./rtcpc');\n\nvar _require2 = require('./sdp'),\n    setIceAggressiveNomination = _require2.setIceAggressiveNomination;\n\nvar ICE_GATHERING_TIMEOUT = 15000;\nvar ICE_GATHERING_FAIL_NONE = 'none';\nvar ICE_GATHERING_FAIL_TIMEOUT = 'timeout';\nvar INITIAL_ICE_CONNECTION_STATE = 'new';\nvar VOLUME_INTERVAL_MS = 50;\n/**\n * @typedef {Object} PeerConnection\n * @param audioHelper\n * @param pstream\n * @param options\n * @return {PeerConnection}\n * @constructor\n */\n\nfunction PeerConnection(audioHelper, pstream, getUserMedia, options) {\n  if (!audioHelper || !pstream || !getUserMedia) {\n    throw new InvalidArgumentError('Audiohelper, pstream and getUserMedia are required arguments');\n  }\n\n  if (!(this instanceof PeerConnection)) {\n    return new PeerConnection(audioHelper, pstream, getUserMedia, options);\n  }\n\n  function noop() {}\n\n  this.onopen = noop;\n  this.onerror = noop;\n  this.onclose = noop;\n  this.ondisconnected = noop;\n  this.onfailed = noop;\n  this.onconnected = noop;\n  this.onreconnected = noop;\n  this.onsignalingstatechange = noop;\n  this.ondtlstransportstatechange = noop;\n  this.onicegatheringfailure = noop;\n  this.onicegatheringstatechange = noop;\n  this.oniceconnectionstatechange = noop;\n  this.onpcconnectionstatechange = noop;\n  this.onicecandidate = noop;\n  this.onselectedcandidatepairchange = noop;\n  this.onvolume = noop;\n  this.version = null;\n  this.pstream = pstream;\n  this.stream = null;\n  this.sinkIds = new Set(['default']);\n  this.outputs = new Map();\n  this.status = 'connecting';\n  this.callSid = null;\n  this.isMuted = false;\n  this.getUserMedia = getUserMedia;\n  var AudioContext = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  this._isSinkSupported = !!AudioContext && typeof HTMLAudioElement !== 'undefined' && HTMLAudioElement.prototype.setSinkId; // NOTE(mmalavalli): Since each Connection creates its own AudioContext,\n  // after 6 instances an exception is thrown. Refer https://www.w3.org/2011/audio/track/issues/3.\n  // In order to get around it, we are re-using the Device's AudioContext.\n\n  this._audioContext = AudioContext && audioHelper._audioContext;\n  this._hasIceCandidates = false;\n  this._hasIceGatheringFailures = false;\n  this._iceGatheringTimeoutId = null;\n  this._masterAudio = null;\n  this._masterAudioDeviceId = null;\n  this._mediaStreamSource = null;\n  this._dtmfSender = null;\n  this._dtmfSenderUnsupported = false;\n  this._callEvents = [];\n  this._nextTimeToPublish = Date.now();\n  this._onAnswerOrRinging = noop;\n  this._onHangup = noop;\n  this._remoteStream = null;\n  this._shouldManageStream = true;\n  this._iceState = INITIAL_ICE_CONNECTION_STATE;\n  this._isUnifiedPlan = options.isUnifiedPlan;\n  this.options = options = options || {};\n  this.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  this.util = options.util || util;\n  this.codecPreferences = options.codecPreferences;\n  this._log = Log.getInstance();\n  return this;\n}\n\nPeerConnection.prototype.uri = function () {\n  return this._uri;\n};\n/**\n * Open the underlying RTCPeerConnection with a MediaStream obtained by\n *   passed constraints. The resulting MediaStream is created internally\n *   and will therefore be managed and destroyed internally.\n * @param {MediaStreamConstraints} constraints\n */\n\n\nPeerConnection.prototype.openWithConstraints = function (constraints) {\n  return this.getUserMedia({\n    audio: constraints\n  }).then(this._setInputTracksFromStream.bind(this, false));\n};\n/**\n * Replace the existing input audio tracks with the audio tracks from the\n *   passed input audio stream. We re-use the existing stream because\n *   the AnalyzerNode is bound to the stream.\n * @param {MediaStream} stream\n */\n\n\nPeerConnection.prototype.setInputTracksFromStream = function (stream) {\n  var self = this;\n  return this._setInputTracksFromStream(true, stream).then(function () {\n    self._shouldManageStream = false;\n  });\n};\n\nPeerConnection.prototype._createAnalyser = function (audioContext, options) {\n  options = Object.assign({\n    fftSize: 32,\n    smoothingTimeConstant: 0.3\n  }, options);\n  var analyser = audioContext.createAnalyser();\n\n  for (var field in options) {\n    analyser[field] = options[field];\n  }\n\n  return analyser;\n};\n\nPeerConnection.prototype._setVolumeHandler = function (handler) {\n  this.onvolume = handler;\n};\n\nPeerConnection.prototype._startPollingVolume = function () {\n  if (!this._audioContext || !this.stream || !this._remoteStream) {\n    return;\n  }\n\n  var audioContext = this._audioContext;\n\n  var inputAnalyser = this._inputAnalyser = this._createAnalyser(audioContext);\n\n  var inputBufferLength = inputAnalyser.frequencyBinCount;\n  var inputDataArray = new Uint8Array(inputBufferLength);\n  this._inputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  var outputAnalyser = this._outputAnalyser = this._createAnalyser(audioContext);\n\n  var outputBufferLength = outputAnalyser.frequencyBinCount;\n  var outputDataArray = new Uint8Array(outputBufferLength);\n  this._outputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  this._updateInputStreamSource(this.stream);\n\n  this._updateOutputStreamSource(this._remoteStream);\n\n  var self = this;\n  setTimeout(function emitVolume() {\n    if (!self._audioContext) {\n      return;\n    } else if (self.status === 'closed') {\n      self._inputAnalyser.disconnect();\n\n      self._outputAnalyser.disconnect();\n\n      self._inputAnalyser2.disconnect();\n\n      self._outputAnalyser2.disconnect();\n\n      return;\n    }\n\n    self._inputAnalyser.getByteFrequencyData(inputDataArray);\n\n    var inputVolume = self.util.average(inputDataArray);\n\n    self._inputAnalyser2.getByteFrequencyData(inputDataArray);\n\n    var inputVolume2 = self.util.average(inputDataArray);\n\n    self._outputAnalyser.getByteFrequencyData(outputDataArray);\n\n    var outputVolume = self.util.average(outputDataArray);\n\n    self._outputAnalyser2.getByteFrequencyData(outputDataArray);\n\n    var outputVolume2 = self.util.average(outputDataArray);\n    self.onvolume(inputVolume / 255, outputVolume / 255, inputVolume2, outputVolume2);\n    setTimeout(emitVolume, VOLUME_INTERVAL_MS);\n  }, VOLUME_INTERVAL_MS);\n};\n\nPeerConnection.prototype._stopStream = function _stopStream(stream) {\n  // We shouldn't stop the tracks if they were not created inside\n  //   this PeerConnection.\n  if (!this._shouldManageStream) {\n    return;\n  }\n\n  if (typeof MediaStreamTrack.prototype.stop === 'function') {\n    var audioTracks = typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.stop();\n    });\n  } // NOTE(mroberts): This is just a fallback to any ancient browsers that may\n  // not implement MediaStreamTrack.stop.\n  else {\n    stream.stop();\n  }\n};\n/**\n * Update the stream source with the new input audio stream.\n * @param {MediaStream} stream\n * @private\n */\n\n\nPeerConnection.prototype._updateInputStreamSource = function (stream) {\n  if (this._inputStreamSource) {\n    this._inputStreamSource.disconnect();\n  }\n\n  this._inputStreamSource = this._audioContext.createMediaStreamSource(stream);\n\n  this._inputStreamSource.connect(this._inputAnalyser);\n\n  this._inputStreamSource.connect(this._inputAnalyser2);\n};\n/**\n * Update the stream source with the new ouput audio stream.\n * @param {MediaStream} stream\n * @private\n */\n\n\nPeerConnection.prototype._updateOutputStreamSource = function (stream) {\n  if (this._outputStreamSource) {\n    this._outputStreamSource.disconnect();\n  }\n\n  this._outputStreamSource = this._audioContext.createMediaStreamSource(stream);\n\n  this._outputStreamSource.connect(this._outputAnalyser);\n\n  this._outputStreamSource.connect(this._outputAnalyser2);\n};\n/**\n * Replace the tracks of the current stream with new tracks. We do this rather than replacing the\n *   whole stream because AnalyzerNodes are bound to a stream.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\n\n\nPeerConnection.prototype._setInputTracksFromStream = function (shouldClone, newStream) {\n  return this._isUnifiedPlan ? this._setInputTracksForUnifiedPlan(shouldClone, newStream) : this._setInputTracksForPlanB(shouldClone, newStream);\n};\n/**\n * Replace the tracks of the current stream with new tracks using the 'plan-b' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\n\n\nPeerConnection.prototype._setInputTracksForPlanB = function (shouldClone, newStream) {\n  var _this = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    this._stopStream(localStream);\n\n    removeStream(this.version.pc, localStream);\n    localStream.getAudioTracks().forEach(localStream.removeTrack, localStream);\n    newStream.getAudioTracks().forEach(localStream.addTrack, localStream);\n    addStream(this.version.pc, newStream);\n\n    this._updateInputStreamSource(this.stream);\n  } // Apply mute settings to new input track\n\n\n  this.mute(this.isMuted);\n\n  if (!this.version) {\n    return Promise.resolve(this.stream);\n  }\n\n  return new Promise(function (resolve, reject) {\n    _this.version.createOffer(_this.options.maxAverageBitrate, _this.codecPreferences, {\n      audio: true\n    }, function () {\n      _this.version.processAnswer(_this.codecPreferences, _this._answerSdp, function () {\n        resolve(_this.stream);\n      }, reject);\n    }, reject);\n  });\n};\n/**\n * Replace the tracks of the current stream with new tracks using the 'unified-plan' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\n\n\nPeerConnection.prototype._setInputTracksForUnifiedPlan = function (shouldClone, newStream) {\n  var _this2 = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n\n  var getStreamPromise = function getStreamPromise() {\n    // Apply mute settings to new input track\n    _this2.mute(_this2.isMuted);\n\n    return Promise.resolve(_this2.stream);\n  };\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    // If the call was started with gUM, and we are now replacing that track with an\n    // external stream's tracks, we should stop the old managed track.\n    if (this._shouldManageStream) {\n      this._stopStream(localStream);\n    }\n\n    if (!this._sender) {\n      this._sender = this.version.pc.getSenders()[0];\n    }\n\n    return this._sender.replaceTrack(newStream.getAudioTracks()[0]).then(function () {\n      _this2._updateInputStreamSource(newStream);\n\n      return getStreamPromise();\n    });\n  }\n\n  return getStreamPromise();\n};\n\nPeerConnection.prototype._onInputDevicesChanged = function () {\n  if (!this.stream) {\n    return;\n  } // If all of our active tracks are ended, then our active input was lost\n\n\n  var activeInputWasLost = this.stream.getAudioTracks().every(function (track) {\n    return track.readyState === 'ended';\n  }); // We only want to act if we manage the stream in PeerConnection (It was created\n  // here, rather than passed in.)\n\n  if (activeInputWasLost && this._shouldManageStream) {\n    this.openWithConstraints(true);\n  }\n};\n\nPeerConnection.prototype._onIceGatheringFailure = function (type) {\n  this._hasIceGatheringFailures = true;\n  this.onicegatheringfailure(type);\n};\n\nPeerConnection.prototype._onMediaConnectionStateChange = function (newState) {\n  var previousState = this._iceState;\n\n  if (previousState === newState || newState !== 'connected' && newState !== 'disconnected' && newState !== 'failed') {\n    return;\n  }\n\n  this._iceState = newState;\n  var message = void 0;\n\n  switch (newState) {\n    case 'connected':\n      if (previousState === 'disconnected' || previousState === 'failed') {\n        message = 'ICE liveliness check succeeded. Connection with Twilio restored';\n\n        this._log.info(message);\n\n        this.onreconnected(message);\n      } else {\n        message = 'Media connection established.';\n\n        this._log.info(message);\n\n        this.onconnected(message);\n      }\n\n      this._stopIceGatheringTimeout();\n\n      this._hasIceGatheringFailures = false;\n      break;\n\n    case 'disconnected':\n      message = 'ICE liveliness check failed. May be having trouble connecting to Twilio';\n\n      this._log.info(message);\n\n      this.ondisconnected(message);\n      break;\n\n    case 'failed':\n      message = 'Connection with Twilio was interrupted.';\n\n      this._log.info(message);\n\n      this.onfailed(message);\n      break;\n  }\n};\n\nPeerConnection.prototype._setSinkIds = function (sinkIds) {\n  if (!this._isSinkSupported) {\n    return Promise.reject(new NotSupportedError('Audio output selection is not supported by this browser'));\n  }\n\n  this.sinkIds = new Set(sinkIds.forEach ? sinkIds : [sinkIds]);\n  return this.version ? this._updateAudioOutputs() : Promise.resolve();\n};\n/**\n * Start timeout for ICE Gathering\n */\n\n\nPeerConnection.prototype._startIceGatheringTimeout = function startIceGatheringTimeout() {\n  var _this3 = this;\n\n  this._stopIceGatheringTimeout();\n\n  this._iceGatheringTimeoutId = setTimeout(function () {\n    _this3._onIceGatheringFailure(ICE_GATHERING_FAIL_TIMEOUT);\n  }, ICE_GATHERING_TIMEOUT);\n};\n/**\n * Stop timeout for ICE Gathering\n */\n\n\nPeerConnection.prototype._stopIceGatheringTimeout = function stopIceGatheringTimeout() {\n  clearInterval(this._iceGatheringTimeoutId);\n};\n\nPeerConnection.prototype._updateAudioOutputs = function updateAudioOutputs() {\n  var addedOutputIds = Array.from(this.sinkIds).filter(function (id) {\n    return !this.outputs.has(id);\n  }, this);\n  var removedOutputIds = Array.from(this.outputs.keys()).filter(function (id) {\n    return !this.sinkIds.has(id);\n  }, this);\n  var self = this;\n  var createOutputPromises = addedOutputIds.map(this._createAudioOutput, this);\n  return Promise.all(createOutputPromises).then(function () {\n    return Promise.all(removedOutputIds.map(self._removeAudioOutput, self));\n  });\n};\n\nPeerConnection.prototype._createAudio = function createAudio(arr) {\n  return new Audio(arr);\n};\n\nPeerConnection.prototype._createAudioOutput = function createAudioOutput(id) {\n  var dest = this._audioContext.createMediaStreamDestination();\n\n  this._mediaStreamSource.connect(dest);\n\n  var audio = this._createAudio();\n\n  setAudioSource(audio, dest.stream);\n  var self = this;\n  return audio.setSinkId(id).then(function () {\n    return audio.play();\n  }).then(function () {\n    self.outputs.set(id, {\n      audio: audio,\n      dest: dest\n    });\n  });\n};\n\nPeerConnection.prototype._removeAudioOutputs = function removeAudioOutputs() {\n  if (this._masterAudio && typeof this._masterAudioDeviceId !== 'undefined') {\n    this._disableOutput(this, this._masterAudioDeviceId);\n\n    this.outputs.delete(this._masterAudioDeviceId);\n    this._masterAudioDeviceId = null; // Release the audio resources before deleting the audio\n\n    if (!this._masterAudio.paused) {\n      this._masterAudio.pause();\n    }\n\n    if (typeof this._masterAudio.srcObject !== 'undefined') {\n      this._masterAudio.srcObject = null;\n    } else {\n      this._masterAudio.src = '';\n    }\n\n    this._masterAudio = null;\n  }\n\n  return Array.from(this.outputs.keys()).map(this._removeAudioOutput, this);\n};\n\nPeerConnection.prototype._disableOutput = function disableOutput(pc, id) {\n  var output = pc.outputs.get(id);\n\n  if (!output) {\n    return;\n  }\n\n  if (output.audio) {\n    output.audio.pause();\n    output.audio.src = '';\n  }\n\n  if (output.dest) {\n    output.dest.disconnect();\n  }\n};\n/**\n * Disable a non-master output, and update the master output to assume its state. This\n *   is called when the device ID assigned to the master output has been removed from\n *   active devices. We can not simply remove the master audio output, so we must\n *   instead reassign it.\n * @private\n * @param {PeerConnection} pc\n * @param {string} masterId - The current device ID assigned to the master audio element.\n */\n\n\nPeerConnection.prototype._reassignMasterOutput = function reassignMasterOutput(pc, masterId) {\n  var masterOutput = pc.outputs.get(masterId);\n  pc.outputs.delete(masterId);\n  var self = this;\n  var idToReplace = Array.from(pc.outputs.keys())[0] || 'default';\n  return masterOutput.audio.setSinkId(idToReplace).then(function () {\n    self._disableOutput(pc, idToReplace);\n\n    pc.outputs.set(idToReplace, masterOutput);\n    pc._masterAudioDeviceId = idToReplace;\n  }).catch(function rollback() {\n    pc.outputs.set(masterId, masterOutput);\n\n    self._log.info('Could not reassign master output. Attempted to roll back.');\n  });\n};\n\nPeerConnection.prototype._removeAudioOutput = function removeAudioOutput(id) {\n  if (this._masterAudioDeviceId === id) {\n    return this._reassignMasterOutput(this, id);\n  }\n\n  this._disableOutput(this, id);\n\n  this.outputs.delete(id);\n  return Promise.resolve();\n};\n/**\n * Use an AudioContext to potentially split our audio output stream to multiple\n *   audio devices. This is only available to browsers with AudioContext and\n *   HTMLAudioElement.setSinkId() available. We save the source stream in\n *   _masterAudio, and use it for one of the active audio devices. We keep\n *   track of its ID because we must replace it if we lose its initial device.\n */\n\n\nPeerConnection.prototype._onAddTrack = function onAddTrack(pc, stream) {\n  var audio = pc._masterAudio = this._createAudio();\n\n  setAudioSource(audio, stream);\n  audio.play(); // Assign the initial master audio element to a random active output device\n\n  var deviceId = Array.from(pc.outputs.keys())[0] || 'default';\n  pc._masterAudioDeviceId = deviceId;\n  pc.outputs.set(deviceId, {\n    audio: audio\n  });\n  pc._mediaStreamSource = pc._audioContext.createMediaStreamSource(stream);\n  pc.pcStream = stream;\n\n  pc._updateAudioOutputs();\n};\n/**\n * Use a single audio element to play the audio output stream. This does not\n *   support multiple output devices, and is a fallback for when AudioContext\n *   and/or HTMLAudioElement.setSinkId() is not available to the client.\n */\n\n\nPeerConnection.prototype._fallbackOnAddTrack = function fallbackOnAddTrack(pc, stream) {\n  var audio = document && document.createElement('audio');\n  audio.autoplay = true;\n\n  if (!setAudioSource(audio, stream)) {\n    pc._log.info('Error attaching stream to element.');\n  }\n\n  pc.outputs.set('default', {\n    audio: audio\n  });\n};\n\nPeerConnection.prototype._setEncodingParameters = function (enableDscp) {\n  if (!enableDscp || !this._sender || typeof this._sender.getParameters !== 'function' || typeof this._sender.setParameters !== 'function') {\n    return;\n  }\n\n  var params = this._sender.getParameters();\n\n  if (!params.priority && !(params.encodings && params.encodings.length)) {\n    return;\n  } // This is how MDN's RTPSenderParameters defines priority\n\n\n  params.priority = 'high'; // And this is how it's currently implemented in Chrome M72+\n\n  if (params.encodings && params.encodings.length) {\n    params.encodings.forEach(function (encoding) {\n      encoding.priority = 'high';\n      encoding.networkPriority = 'high';\n    });\n  }\n\n  this._sender.setParameters(params);\n};\n\nPeerConnection.prototype._setupPeerConnection = function (rtcConstraints, rtcConfiguration) {\n  var _this4 = this;\n\n  var self = this;\n  var version = new (this.options.rtcpcFactory || RTCPC)();\n  version.create(rtcConstraints, rtcConfiguration);\n  addStream(version.pc, this.stream);\n  var eventName = 'ontrack' in version.pc ? 'ontrack' : 'onaddstream';\n\n  version.pc[eventName] = function (event) {\n    var stream = self._remoteStream = event.stream || event.streams[0];\n\n    if (typeof version.pc.getSenders === 'function') {\n      _this4._sender = version.pc.getSenders()[0];\n    }\n\n    if (self._isSinkSupported) {\n      self._onAddTrack(self, stream);\n    } else {\n      self._fallbackOnAddTrack(self, stream);\n    }\n\n    self._startPollingVolume();\n  };\n\n  return version;\n};\n\nPeerConnection.prototype._maybeSetIceAggressiveNomination = function (sdp) {\n  return this.options.forceAggressiveIceNomination ? setIceAggressiveNomination(sdp) : sdp;\n};\n\nPeerConnection.prototype._setupChannel = function () {\n  var _this5 = this;\n\n  var pc = this.version.pc; // Chrome 25 supports onopen\n\n  this.version.pc.onopen = function () {\n    _this5.status = 'open';\n\n    _this5.onopen();\n  }; // Chrome 26 doesn't support onopen so must detect state change\n\n\n  this.version.pc.onstatechange = function () {\n    if (_this5.version.pc && _this5.version.pc.readyState === 'stable') {\n      _this5.status = 'open';\n\n      _this5.onopen();\n    }\n  }; // Chrome 27 changed onstatechange to onsignalingstatechange\n\n\n  this.version.pc.onsignalingstatechange = function () {\n    var state = pc.signalingState;\n\n    _this5._log.info('signalingState is \"' + state + '\"');\n\n    if (_this5.version.pc && _this5.version.pc.signalingState === 'stable') {\n      _this5.status = 'open';\n\n      _this5.onopen();\n    }\n\n    _this5.onsignalingstatechange(pc.signalingState);\n  }; // Chrome 72+\n\n\n  pc.onconnectionstatechange = function () {\n    _this5._log.info('pc.connectionState is \"' + pc.connectionState + '\"');\n\n    _this5.onpcconnectionstatechange(pc.connectionState);\n\n    _this5._onMediaConnectionStateChange(pc.connectionState);\n  };\n\n  pc.onicecandidate = function (event) {\n    var candidate = event.candidate;\n\n    if (candidate) {\n      _this5._hasIceCandidates = true;\n\n      _this5.onicecandidate(candidate);\n\n      _this5._setupRTCIceTransportListener();\n    }\n\n    _this5._log.info('ICE Candidate: ' + JSON.stringify(candidate));\n  };\n\n  pc.onicegatheringstatechange = function () {\n    var state = pc.iceGatheringState;\n\n    if (state === 'gathering') {\n      _this5._startIceGatheringTimeout();\n    } else if (state === 'complete') {\n      _this5._stopIceGatheringTimeout(); // Fail if no candidates found\n\n\n      if (!_this5._hasIceCandidates) {\n        _this5._onIceGatheringFailure(ICE_GATHERING_FAIL_NONE);\n      } // There was a failure mid-gathering phase. We want to start our timer and issue\n      // an ice restart if we don't get connected after our timeout\n\n\n      if (_this5._hasIceCandidates && _this5._hasIceGatheringFailures) {\n        _this5._startIceGatheringTimeout();\n      }\n    }\n\n    _this5._log.info('pc.iceGatheringState is \"' + pc.iceGatheringState + '\"');\n\n    _this5.onicegatheringstatechange(state);\n  };\n\n  pc.oniceconnectionstatechange = function () {\n    _this5._log.info('pc.iceConnectionState is \"' + pc.iceConnectionState + '\"');\n\n    _this5.oniceconnectionstatechange(pc.iceConnectionState);\n\n    _this5._onMediaConnectionStateChange(pc.iceConnectionState);\n  };\n};\n\nPeerConnection.prototype._initializeMediaStream = function (rtcConstraints, rtcConfiguration) {\n  // if mediastream already open then do nothing\n  if (this.status === 'open') {\n    return false;\n  }\n\n  if (this.pstream.status === 'disconnected') {\n    this.onerror({\n      info: {\n        code: 31000,\n        message: 'Cannot establish connection. Client is disconnected',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      }\n    });\n    this.close();\n    return false;\n  }\n\n  this.version = this._setupPeerConnection(rtcConstraints, rtcConfiguration);\n\n  this._setupChannel();\n\n  return true;\n};\n/**\n * Remove reconnection-related listeners\n * @private\n */\n\n\nPeerConnection.prototype._removeReconnectionListeners = function () {\n  if (this.pstream) {\n    this.pstream.removeListener('answer', this._onAnswerOrRinging);\n    this.pstream.removeListener('hangup', this._onHangup);\n  }\n};\n/**\n * Setup a listener for RTCDtlsTransport to capture state changes events\n * @private\n */\n\n\nPeerConnection.prototype._setupRTCDtlsTransportListener = function () {\n  var _this6 = this;\n\n  var dtlsTransport = this.getRTCDtlsTransport();\n\n  if (!dtlsTransport || dtlsTransport.onstatechange) {\n    return;\n  }\n\n  var handler = function handler() {\n    _this6._log.info('dtlsTransportState is \"' + dtlsTransport.state + '\"');\n\n    _this6.ondtlstransportstatechange(dtlsTransport.state);\n  }; // Publish initial state\n\n\n  handler();\n  dtlsTransport.onstatechange = handler;\n};\n/**\n * Setup a listener for RTCIceTransport to capture selected candidate pair changes\n * @private\n */\n\n\nPeerConnection.prototype._setupRTCIceTransportListener = function () {\n  var _this7 = this;\n\n  var iceTransport = this._getRTCIceTransport();\n\n  if (!iceTransport || iceTransport.onselectedcandidatepairchange) {\n    return;\n  }\n\n  iceTransport.onselectedcandidatepairchange = function () {\n    return _this7.onselectedcandidatepairchange(iceTransport.getSelectedCandidatePair());\n  };\n};\n/**\n * Restarts ICE for the current connection\n * ICE Restart failures are ignored. Retries are managed in Connection\n * @private\n */\n\n\nPeerConnection.prototype.iceRestart = function () {\n  var _this8 = this;\n\n  if (!this.options.enableIceRestart) {\n    return;\n  }\n\n  this._log.info('Attempting to restart ICE...');\n\n  this._hasIceCandidates = false;\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, {\n    iceRestart: true\n  }).then(function () {\n    _this8._removeReconnectionListeners();\n\n    _this8._onAnswerOrRinging = function (payload) {\n      _this8._removeReconnectionListeners();\n\n      if (!payload.sdp || _this8.version.pc.signalingState !== 'have-local-offer') {\n        var message = 'Invalid state or param during ICE Restart:' + ('hasSdp:' + !!payload.sdp + ', signalingState:' + _this8.version.pc.signalingState);\n\n        _this8._log.info(message);\n\n        return;\n      }\n\n      var sdp = _this8._maybeSetIceAggressiveNomination(payload.sdp);\n\n      _this8._answerSdp = sdp;\n\n      if (_this8.status !== 'closed') {\n        _this8.version.processAnswer(_this8.codecPreferences, sdp, null, function (err) {\n          var message = err && err.message ? err.message : err;\n\n          _this8._log.info('Failed to process answer during ICE Restart. Error: ' + message);\n        });\n      }\n    };\n\n    _this8._onHangup = function () {\n      _this8._log.info('Received hangup during ICE Restart');\n\n      _this8._removeReconnectionListeners();\n    };\n\n    _this8.pstream.on('answer', _this8._onAnswerOrRinging);\n\n    _this8.pstream.on('hangup', _this8._onHangup);\n\n    _this8.pstream.reinvite(_this8.version.getSDP(), _this8.callSid);\n  }).catch(function (err) {\n    var message = err && err.message ? err.message : err;\n\n    _this8._log.info('Failed to createOffer during ICE Restart. Error: ' + message); // CreateOffer failures doesn't transition ice state to failed\n    // We need trigger it so it can be picked up by retries\n\n\n    _this8.onfailed(message);\n  });\n};\n\nPeerConnection.prototype.makeOutgoingCall = function (token, params, callsid, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  var _this9 = this;\n\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n\n  var self = this;\n  this.callSid = callsid;\n\n  function onAnswerSuccess() {\n    if (self.options) {\n      self._setEncodingParameters(self.options.dscp);\n    }\n\n    onMediaStarted(self.version.pc);\n  }\n\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({\n      info: {\n        code: 31000,\n        message: 'Error processing answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      }\n    });\n  }\n\n  this._onAnswerOrRinging = function (payload) {\n    if (!payload.sdp) {\n      return;\n    }\n\n    var sdp = _this9._maybeSetIceAggressiveNomination(payload.sdp);\n\n    self._answerSdp = sdp;\n\n    if (self.status !== 'closed') {\n      self.version.processAnswer(_this9.codecPreferences, sdp, onAnswerSuccess, onAnswerError);\n    }\n\n    self.pstream.removeListener('answer', self._onAnswerOrRinging);\n    self.pstream.removeListener('ringing', self._onAnswerOrRinging);\n  };\n\n  this.pstream.on('answer', this._onAnswerOrRinging);\n  this.pstream.on('ringing', this._onAnswerOrRinging);\n\n  function onOfferSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.invite(self.version.getSDP(), self.callSid, self.options.preflight, params);\n\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n\n  function onOfferError(err) {\n    var errMsg = err.message || err;\n    self.onerror({\n      info: {\n        code: 31000,\n        message: 'Error creating the offer: ' + errMsg,\n        twilioError: new MediaErrors.ClientLocalDescFailed()\n      }\n    });\n  }\n\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, {\n    audio: true\n  }, onOfferSuccess, onOfferError);\n};\n\nPeerConnection.prototype.answerIncomingCall = function (callSid, sdp, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n\n  sdp = this._maybeSetIceAggressiveNomination(sdp);\n  this._answerSdp = sdp.replace(/^a=setup:actpass$/gm, 'a=setup:passive');\n  this.callSid = callSid;\n  var self = this;\n\n  function onAnswerSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.answer(self.version.getSDP(), callSid);\n\n      if (self.options) {\n        self._setEncodingParameters(self.options.dscp);\n      }\n\n      onMediaStarted(self.version.pc);\n\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({\n      info: {\n        code: 31000,\n        message: 'Error creating the answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      }\n    });\n  }\n\n  this.version.processSDP(this.options.maxAverageBitrate, this.codecPreferences, sdp, {\n    audio: true\n  }, onAnswerSuccess, onAnswerError);\n};\n\nPeerConnection.prototype.close = function () {\n  if (this.version && this.version.pc) {\n    if (this.version.pc.signalingState !== 'closed') {\n      this.version.pc.close();\n    }\n\n    this.version.pc = null;\n  }\n\n  if (this.stream) {\n    this.mute(false);\n\n    this._stopStream(this.stream);\n  }\n\n  this.stream = null;\n\n  this._removeReconnectionListeners();\n\n  this._stopIceGatheringTimeout();\n\n  Promise.all(this._removeAudioOutputs()).catch(function () {// We don't need to alert about failures here.\n  });\n\n  if (this._mediaStreamSource) {\n    this._mediaStreamSource.disconnect();\n  }\n\n  if (this._inputAnalyser) {\n    this._inputAnalyser.disconnect();\n  }\n\n  if (this._outputAnalyser) {\n    this._outputAnalyser.disconnect();\n  }\n\n  if (this._inputAnalyser2) {\n    this._inputAnalyser2.disconnect();\n  }\n\n  if (this._outputAnalyser2) {\n    this._outputAnalyser2.disconnect();\n  }\n\n  this.status = 'closed';\n  this.onclose();\n};\n\nPeerConnection.prototype.reject = function (callSid) {\n  this.callSid = callSid;\n};\n\nPeerConnection.prototype.ignore = function (callSid) {\n  this.callSid = callSid;\n};\n/**\n * Mute or unmute input audio. If the stream is not yet present, the setting\n *   is saved and applied to future streams/tracks.\n * @params {boolean} shouldMute - Whether the input audio should\n *   be muted or unmuted.\n */\n\n\nPeerConnection.prototype.mute = function (shouldMute) {\n  this.isMuted = shouldMute;\n\n  if (!this.stream) {\n    return;\n  }\n\n  if (this._sender && this._sender.track) {\n    this._sender.track.enabled = !shouldMute;\n  } else {\n    var audioTracks = typeof this.stream.getAudioTracks === 'function' ? this.stream.getAudioTracks() : this.stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.enabled = !shouldMute;\n    });\n  }\n};\n/**\n * Get or create an RTCDTMFSender for the first local audio MediaStreamTrack\n * we can get from the RTCPeerConnection. Return null if unsupported.\n * @instance\n * @returns ?RTCDTMFSender\n */\n\n\nPeerConnection.prototype.getOrCreateDTMFSender = function getOrCreateDTMFSender() {\n  if (this._dtmfSender || this._dtmfSenderUnsupported) {\n    return this._dtmfSender || null;\n  }\n\n  var self = this;\n  var pc = this.version.pc;\n\n  if (!pc) {\n    this._log.info('No RTCPeerConnection available to call createDTMFSender on');\n\n    return null;\n  }\n\n  if (typeof pc.getSenders === 'function' && (typeof RTCDTMFSender === 'function' || typeof RTCDtmfSender === 'function')) {\n    var chosenSender = pc.getSenders().find(function (sender) {\n      return sender.dtmf;\n    });\n\n    if (chosenSender) {\n      this._log.info('Using RTCRtpSender#dtmf');\n\n      this._dtmfSender = chosenSender.dtmf;\n      return this._dtmfSender;\n    }\n  }\n\n  if (typeof pc.createDTMFSender === 'function' && typeof pc.getLocalStreams === 'function') {\n    var track = pc.getLocalStreams().map(function (stream) {\n      var tracks = self._getAudioTracks(stream);\n\n      return tracks && tracks[0];\n    })[0];\n\n    if (!track) {\n      this._log.info('No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender');\n\n      return null;\n    }\n\n    this._log.info('Creating RTCDTMFSender');\n\n    this._dtmfSender = pc.createDTMFSender(track);\n    return this._dtmfSender;\n  }\n\n  this._log.info('RTCPeerConnection does not support RTCDTMFSender');\n\n  this._dtmfSenderUnsupported = true;\n  return null;\n};\n/**\n * Get the RTCDtlTransport object from the PeerConnection\n * @returns RTCDtlTransport\n */\n\n\nPeerConnection.prototype.getRTCDtlsTransport = function getRTCDtlsTransport() {\n  var sender = this.version && this.version.pc && typeof this.version.pc.getSenders === 'function' && this.version.pc.getSenders()[0];\n  return sender && sender.transport || null;\n};\n\nPeerConnection.prototype._canStopMediaStreamTrack = function () {\n  return typeof MediaStreamTrack.prototype.stop === 'function';\n};\n\nPeerConnection.prototype._getAudioTracks = function (stream) {\n  return typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n};\n/**\n * Get the RTCIceTransport object from the PeerConnection\n * @returns RTCIceTransport\n */\n\n\nPeerConnection.prototype._getRTCIceTransport = function _getRTCIceTransport() {\n  var dtlsTransport = this.getRTCDtlsTransport();\n  return dtlsTransport && dtlsTransport.iceTransport || null;\n}; // Is PeerConnection.protocol used outside of our SDK? We should remove this if not.\n\n\nPeerConnection.protocol = function () {\n  return RTCPC.test() ? new RTCPC() : null;\n}();\n\nfunction addStream(pc, stream) {\n  if (typeof pc.addTrack === 'function') {\n    stream.getAudioTracks().forEach(function (track) {\n      // The second parameters, stream, should not be necessary per the latest editor's\n      //   draft, but FF requires it. https://bugzilla.mozilla.org/show_bug.cgi?id=1231414\n      pc.addTrack(track, stream);\n    });\n  } else {\n    pc.addStream(stream);\n  }\n}\n\nfunction cloneStream(oldStream) {\n  var newStream = typeof MediaStream !== 'undefined' ? new MediaStream() // eslint-disable-next-line\n  : new webkitMediaStream();\n  oldStream.getAudioTracks().forEach(newStream.addTrack, newStream);\n  return newStream;\n}\n\nfunction removeStream(pc, stream) {\n  if (typeof pc.removeTrack === 'function') {\n    pc.getSenders().forEach(function (sender) {\n      pc.removeTrack(sender);\n    });\n  } else {\n    pc.removeStream(stream);\n  }\n}\n/**\n * Set the source of an HTMLAudioElement to the specified MediaStream\n * @param {HTMLAudioElement} audio\n * @param {MediaStream} stream\n * @returns {boolean} Whether the audio source was set successfully\n */\n\n\nfunction setAudioSource(audio, stream) {\n  if (typeof audio.srcObject !== 'undefined') {\n    audio.srcObject = stream;\n  } else if (typeof audio.mozSrcObject !== 'undefined') {\n    audio.mozSrcObject = stream;\n  } else if (typeof audio.src !== 'undefined') {\n    var _window = audio.options.window || window;\n\n    audio.src = (_window.URL || _window.webkitURL).createObjectURL(stream);\n  } else {\n    return false;\n  }\n\n  return true;\n}\n\nPeerConnection.enabled = RTCPC.test();\nmodule.exports = PeerConnection;","map":{"version":3,"names":["_require","require","InvalidArgumentError","MediaErrors","NotSupportedError","SignalingErrors","Log","default","util","RTCPC","_require2","setIceAggressiveNomination","ICE_GATHERING_TIMEOUT","ICE_GATHERING_FAIL_NONE","ICE_GATHERING_FAIL_TIMEOUT","INITIAL_ICE_CONNECTION_STATE","VOLUME_INTERVAL_MS","PeerConnection","audioHelper","pstream","getUserMedia","options","noop","onopen","onerror","onclose","ondisconnected","onfailed","onconnected","onreconnected","onsignalingstatechange","ondtlstransportstatechange","onicegatheringfailure","onicegatheringstatechange","oniceconnectionstatechange","onpcconnectionstatechange","onicecandidate","onselectedcandidatepairchange","onvolume","version","stream","sinkIds","Set","outputs","Map","status","callSid","isMuted","AudioContext","window","webkitAudioContext","_isSinkSupported","HTMLAudioElement","prototype","setSinkId","_audioContext","_hasIceCandidates","_hasIceGatheringFailures","_iceGatheringTimeoutId","_masterAudio","_masterAudioDeviceId","_mediaStreamSource","_dtmfSender","_dtmfSenderUnsupported","_callEvents","_nextTimeToPublish","Date","now","_onAnswerOrRinging","_onHangup","_remoteStream","_shouldManageStream","_iceState","_isUnifiedPlan","isUnifiedPlan","navigator","codecPreferences","_log","getInstance","uri","_uri","openWithConstraints","constraints","audio","then","_setInputTracksFromStream","bind","setInputTracksFromStream","self","_createAnalyser","audioContext","Object","assign","fftSize","smoothingTimeConstant","analyser","createAnalyser","field","_setVolumeHandler","handler","_startPollingVolume","inputAnalyser","_inputAnalyser","inputBufferLength","frequencyBinCount","inputDataArray","Uint8Array","_inputAnalyser2","minDecibels","maxDecibels","outputAnalyser","_outputAnalyser","outputBufferLength","outputDataArray","_outputAnalyser2","_updateInputStreamSource","_updateOutputStreamSource","setTimeout","emitVolume","disconnect","getByteFrequencyData","inputVolume","average","inputVolume2","outputVolume","outputVolume2","_stopStream","MediaStreamTrack","stop","audioTracks","getAudioTracks","forEach","track","_inputStreamSource","createMediaStreamSource","connect","_outputStreamSource","shouldClone","newStream","_setInputTracksForUnifiedPlan","_setInputTracksForPlanB","_this","Promise","reject","length","localStream","cloneStream","removeStream","pc","removeTrack","addTrack","addStream","mute","resolve","createOffer","maxAverageBitrate","processAnswer","_answerSdp","_this2","getStreamPromise","_sender","getSenders","replaceTrack","_onInputDevicesChanged","activeInputWasLost","every","readyState","_onIceGatheringFailure","type","_onMediaConnectionStateChange","newState","previousState","message","info","_stopIceGatheringTimeout","_setSinkIds","_updateAudioOutputs","_startIceGatheringTimeout","startIceGatheringTimeout","_this3","stopIceGatheringTimeout","clearInterval","updateAudioOutputs","addedOutputIds","Array","from","filter","id","has","removedOutputIds","keys","createOutputPromises","map","_createAudioOutput","all","_removeAudioOutput","_createAudio","createAudio","arr","Audio","createAudioOutput","dest","createMediaStreamDestination","setAudioSource","play","set","_removeAudioOutputs","removeAudioOutputs","_disableOutput","delete","paused","pause","srcObject","src","disableOutput","output","get","_reassignMasterOutput","reassignMasterOutput","masterId","masterOutput","idToReplace","catch","rollback","removeAudioOutput","_onAddTrack","onAddTrack","deviceId","pcStream","_fallbackOnAddTrack","fallbackOnAddTrack","document","createElement","autoplay","_setEncodingParameters","enableDscp","getParameters","setParameters","params","priority","encodings","encoding","networkPriority","_setupPeerConnection","rtcConstraints","rtcConfiguration","_this4","rtcpcFactory","create","eventName","event","streams","_maybeSetIceAggressiveNomination","sdp","forceAggressiveIceNomination","_setupChannel","_this5","onstatechange","state","signalingState","onconnectionstatechange","connectionState","candidate","_setupRTCIceTransportListener","JSON","stringify","iceGatheringState","iceConnectionState","_initializeMediaStream","code","twilioError","ConnectionDisconnected","close","_removeReconnectionListeners","removeListener","_setupRTCDtlsTransportListener","_this6","dtlsTransport","getRTCDtlsTransport","_this7","iceTransport","_getRTCIceTransport","getSelectedCandidatePair","iceRestart","_this8","enableIceRestart","payload","err","on","reinvite","getSDP","makeOutgoingCall","token","callsid","onMediaStarted","_this9","onAnswerSuccess","dscp","onAnswerError","errMsg","ClientRemoteDescFailed","onOfferSuccess","invite","preflight","onOfferError","ClientLocalDescFailed","answerIncomingCall","replace","answer","processSDP","ignore","shouldMute","enabled","getOrCreateDTMFSender","RTCDTMFSender","RTCDtmfSender","chosenSender","find","sender","dtmf","createDTMFSender","getLocalStreams","tracks","_getAudioTracks","transport","_canStopMediaStreamTrack","protocol","test","oldStream","MediaStream","webkitMediaStream","mozSrcObject","_window","URL","webkitURL","createObjectURL","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/twilio-client/es5/twilio/rtc/peerconnection.js"],"sourcesContent":["'use strict';\n\nvar _require = require('../errors'),\n    InvalidArgumentError = _require.InvalidArgumentError,\n    MediaErrors = _require.MediaErrors,\n    NotSupportedError = _require.NotSupportedError,\n    SignalingErrors = _require.SignalingErrors;\n\nvar Log = require('../log').default;\nvar util = require('../util');\nvar RTCPC = require('./rtcpc');\n\nvar _require2 = require('./sdp'),\n    setIceAggressiveNomination = _require2.setIceAggressiveNomination;\n\nvar ICE_GATHERING_TIMEOUT = 15000;\nvar ICE_GATHERING_FAIL_NONE = 'none';\nvar ICE_GATHERING_FAIL_TIMEOUT = 'timeout';\nvar INITIAL_ICE_CONNECTION_STATE = 'new';\nvar VOLUME_INTERVAL_MS = 50;\n\n/**\n * @typedef {Object} PeerConnection\n * @param audioHelper\n * @param pstream\n * @param options\n * @return {PeerConnection}\n * @constructor\n */\nfunction PeerConnection(audioHelper, pstream, getUserMedia, options) {\n  if (!audioHelper || !pstream || !getUserMedia) {\n    throw new InvalidArgumentError('Audiohelper, pstream and getUserMedia are required arguments');\n  }\n\n  if (!(this instanceof PeerConnection)) {\n    return new PeerConnection(audioHelper, pstream, getUserMedia, options);\n  }\n\n  function noop() {}\n  this.onopen = noop;\n  this.onerror = noop;\n  this.onclose = noop;\n  this.ondisconnected = noop;\n  this.onfailed = noop;\n  this.onconnected = noop;\n  this.onreconnected = noop;\n  this.onsignalingstatechange = noop;\n  this.ondtlstransportstatechange = noop;\n  this.onicegatheringfailure = noop;\n  this.onicegatheringstatechange = noop;\n  this.oniceconnectionstatechange = noop;\n  this.onpcconnectionstatechange = noop;\n  this.onicecandidate = noop;\n  this.onselectedcandidatepairchange = noop;\n  this.onvolume = noop;\n  this.version = null;\n  this.pstream = pstream;\n  this.stream = null;\n  this.sinkIds = new Set(['default']);\n  this.outputs = new Map();\n  this.status = 'connecting';\n  this.callSid = null;\n  this.isMuted = false;\n  this.getUserMedia = getUserMedia;\n\n  var AudioContext = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  this._isSinkSupported = !!AudioContext && typeof HTMLAudioElement !== 'undefined' && HTMLAudioElement.prototype.setSinkId;\n  // NOTE(mmalavalli): Since each Connection creates its own AudioContext,\n  // after 6 instances an exception is thrown. Refer https://www.w3.org/2011/audio/track/issues/3.\n  // In order to get around it, we are re-using the Device's AudioContext.\n  this._audioContext = AudioContext && audioHelper._audioContext;\n  this._hasIceCandidates = false;\n  this._hasIceGatheringFailures = false;\n  this._iceGatheringTimeoutId = null;\n  this._masterAudio = null;\n  this._masterAudioDeviceId = null;\n  this._mediaStreamSource = null;\n  this._dtmfSender = null;\n  this._dtmfSenderUnsupported = false;\n  this._callEvents = [];\n  this._nextTimeToPublish = Date.now();\n  this._onAnswerOrRinging = noop;\n  this._onHangup = noop;\n  this._remoteStream = null;\n  this._shouldManageStream = true;\n  this._iceState = INITIAL_ICE_CONNECTION_STATE;\n  this._isUnifiedPlan = options.isUnifiedPlan;\n\n  this.options = options = options || {};\n  this.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  this.util = options.util || util;\n  this.codecPreferences = options.codecPreferences;\n\n  this._log = Log.getInstance();\n\n  return this;\n}\n\nPeerConnection.prototype.uri = function () {\n  return this._uri;\n};\n\n/**\n * Open the underlying RTCPeerConnection with a MediaStream obtained by\n *   passed constraints. The resulting MediaStream is created internally\n *   and will therefore be managed and destroyed internally.\n * @param {MediaStreamConstraints} constraints\n */\nPeerConnection.prototype.openWithConstraints = function (constraints) {\n  return this.getUserMedia({ audio: constraints }).then(this._setInputTracksFromStream.bind(this, false));\n};\n\n/**\n * Replace the existing input audio tracks with the audio tracks from the\n *   passed input audio stream. We re-use the existing stream because\n *   the AnalyzerNode is bound to the stream.\n * @param {MediaStream} stream\n */\nPeerConnection.prototype.setInputTracksFromStream = function (stream) {\n  var self = this;\n  return this._setInputTracksFromStream(true, stream).then(function () {\n    self._shouldManageStream = false;\n  });\n};\n\nPeerConnection.prototype._createAnalyser = function (audioContext, options) {\n  options = Object.assign({\n    fftSize: 32,\n    smoothingTimeConstant: 0.3\n  }, options);\n\n  var analyser = audioContext.createAnalyser();\n  for (var field in options) {\n    analyser[field] = options[field];\n  }\n\n  return analyser;\n};\n\nPeerConnection.prototype._setVolumeHandler = function (handler) {\n  this.onvolume = handler;\n};\nPeerConnection.prototype._startPollingVolume = function () {\n  if (!this._audioContext || !this.stream || !this._remoteStream) {\n    return;\n  }\n\n  var audioContext = this._audioContext;\n\n  var inputAnalyser = this._inputAnalyser = this._createAnalyser(audioContext);\n  var inputBufferLength = inputAnalyser.frequencyBinCount;\n  var inputDataArray = new Uint8Array(inputBufferLength);\n  this._inputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  var outputAnalyser = this._outputAnalyser = this._createAnalyser(audioContext);\n  var outputBufferLength = outputAnalyser.frequencyBinCount;\n  var outputDataArray = new Uint8Array(outputBufferLength);\n  this._outputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  this._updateInputStreamSource(this.stream);\n  this._updateOutputStreamSource(this._remoteStream);\n\n  var self = this;\n  setTimeout(function emitVolume() {\n    if (!self._audioContext) {\n      return;\n    } else if (self.status === 'closed') {\n      self._inputAnalyser.disconnect();\n      self._outputAnalyser.disconnect();\n      self._inputAnalyser2.disconnect();\n      self._outputAnalyser2.disconnect();\n      return;\n    }\n\n    self._inputAnalyser.getByteFrequencyData(inputDataArray);\n    var inputVolume = self.util.average(inputDataArray);\n\n    self._inputAnalyser2.getByteFrequencyData(inputDataArray);\n    var inputVolume2 = self.util.average(inputDataArray);\n\n    self._outputAnalyser.getByteFrequencyData(outputDataArray);\n    var outputVolume = self.util.average(outputDataArray);\n\n    self._outputAnalyser2.getByteFrequencyData(outputDataArray);\n    var outputVolume2 = self.util.average(outputDataArray);\n    self.onvolume(inputVolume / 255, outputVolume / 255, inputVolume2, outputVolume2);\n\n    setTimeout(emitVolume, VOLUME_INTERVAL_MS);\n  }, VOLUME_INTERVAL_MS);\n};\n\nPeerConnection.prototype._stopStream = function _stopStream(stream) {\n  // We shouldn't stop the tracks if they were not created inside\n  //   this PeerConnection.\n  if (!this._shouldManageStream) {\n    return;\n  }\n\n  if (typeof MediaStreamTrack.prototype.stop === 'function') {\n    var audioTracks = typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.stop();\n    });\n  }\n  // NOTE(mroberts): This is just a fallback to any ancient browsers that may\n  // not implement MediaStreamTrack.stop.\n  else {\n      stream.stop();\n    }\n};\n\n/**\n * Update the stream source with the new input audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateInputStreamSource = function (stream) {\n  if (this._inputStreamSource) {\n    this._inputStreamSource.disconnect();\n  }\n\n  this._inputStreamSource = this._audioContext.createMediaStreamSource(stream);\n  this._inputStreamSource.connect(this._inputAnalyser);\n  this._inputStreamSource.connect(this._inputAnalyser2);\n};\n\n/**\n * Update the stream source with the new ouput audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateOutputStreamSource = function (stream) {\n  if (this._outputStreamSource) {\n    this._outputStreamSource.disconnect();\n  }\n\n  this._outputStreamSource = this._audioContext.createMediaStreamSource(stream);\n  this._outputStreamSource.connect(this._outputAnalyser);\n  this._outputStreamSource.connect(this._outputAnalyser2);\n};\n\n/**\n * Replace the tracks of the current stream with new tracks. We do this rather than replacing the\n *   whole stream because AnalyzerNodes are bound to a stream.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksFromStream = function (shouldClone, newStream) {\n  return this._isUnifiedPlan ? this._setInputTracksForUnifiedPlan(shouldClone, newStream) : this._setInputTracksForPlanB(shouldClone, newStream);\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'plan-b' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForPlanB = function (shouldClone, newStream) {\n  var _this = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    this._stopStream(localStream);\n\n    removeStream(this.version.pc, localStream);\n    localStream.getAudioTracks().forEach(localStream.removeTrack, localStream);\n    newStream.getAudioTracks().forEach(localStream.addTrack, localStream);\n    addStream(this.version.pc, newStream);\n\n    this._updateInputStreamSource(this.stream);\n  }\n\n  // Apply mute settings to new input track\n  this.mute(this.isMuted);\n\n  if (!this.version) {\n    return Promise.resolve(this.stream);\n  }\n\n  return new Promise(function (resolve, reject) {\n    _this.version.createOffer(_this.options.maxAverageBitrate, _this.codecPreferences, { audio: true }, function () {\n      _this.version.processAnswer(_this.codecPreferences, _this._answerSdp, function () {\n        resolve(_this.stream);\n      }, reject);\n    }, reject);\n  });\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'unified-plan' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForUnifiedPlan = function (shouldClone, newStream) {\n  var _this2 = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n  var getStreamPromise = function getStreamPromise() {\n    // Apply mute settings to new input track\n    _this2.mute(_this2.isMuted);\n    return Promise.resolve(_this2.stream);\n  };\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    // If the call was started with gUM, and we are now replacing that track with an\n    // external stream's tracks, we should stop the old managed track.\n    if (this._shouldManageStream) {\n      this._stopStream(localStream);\n    }\n\n    if (!this._sender) {\n      this._sender = this.version.pc.getSenders()[0];\n    }\n\n    return this._sender.replaceTrack(newStream.getAudioTracks()[0]).then(function () {\n      _this2._updateInputStreamSource(newStream);\n      return getStreamPromise();\n    });\n  }\n\n  return getStreamPromise();\n};\n\nPeerConnection.prototype._onInputDevicesChanged = function () {\n  if (!this.stream) {\n    return;\n  }\n\n  // If all of our active tracks are ended, then our active input was lost\n  var activeInputWasLost = this.stream.getAudioTracks().every(function (track) {\n    return track.readyState === 'ended';\n  });\n\n  // We only want to act if we manage the stream in PeerConnection (It was created\n  // here, rather than passed in.)\n  if (activeInputWasLost && this._shouldManageStream) {\n    this.openWithConstraints(true);\n  }\n};\n\nPeerConnection.prototype._onIceGatheringFailure = function (type) {\n  this._hasIceGatheringFailures = true;\n  this.onicegatheringfailure(type);\n};\n\nPeerConnection.prototype._onMediaConnectionStateChange = function (newState) {\n  var previousState = this._iceState;\n\n  if (previousState === newState || newState !== 'connected' && newState !== 'disconnected' && newState !== 'failed') {\n    return;\n  }\n  this._iceState = newState;\n\n  var message = void 0;\n  switch (newState) {\n    case 'connected':\n      if (previousState === 'disconnected' || previousState === 'failed') {\n        message = 'ICE liveliness check succeeded. Connection with Twilio restored';\n        this._log.info(message);\n        this.onreconnected(message);\n      } else {\n        message = 'Media connection established.';\n        this._log.info(message);\n        this.onconnected(message);\n      }\n      this._stopIceGatheringTimeout();\n      this._hasIceGatheringFailures = false;\n      break;\n    case 'disconnected':\n      message = 'ICE liveliness check failed. May be having trouble connecting to Twilio';\n      this._log.info(message);\n      this.ondisconnected(message);\n      break;\n    case 'failed':\n      message = 'Connection with Twilio was interrupted.';\n      this._log.info(message);\n      this.onfailed(message);\n      break;\n  }\n};\n\nPeerConnection.prototype._setSinkIds = function (sinkIds) {\n  if (!this._isSinkSupported) {\n    return Promise.reject(new NotSupportedError('Audio output selection is not supported by this browser'));\n  }\n\n  this.sinkIds = new Set(sinkIds.forEach ? sinkIds : [sinkIds]);\n  return this.version ? this._updateAudioOutputs() : Promise.resolve();\n};\n\n/**\n * Start timeout for ICE Gathering\n */\nPeerConnection.prototype._startIceGatheringTimeout = function startIceGatheringTimeout() {\n  var _this3 = this;\n\n  this._stopIceGatheringTimeout();\n  this._iceGatheringTimeoutId = setTimeout(function () {\n    _this3._onIceGatheringFailure(ICE_GATHERING_FAIL_TIMEOUT);\n  }, ICE_GATHERING_TIMEOUT);\n};\n\n/**\n * Stop timeout for ICE Gathering\n */\nPeerConnection.prototype._stopIceGatheringTimeout = function stopIceGatheringTimeout() {\n  clearInterval(this._iceGatheringTimeoutId);\n};\n\nPeerConnection.prototype._updateAudioOutputs = function updateAudioOutputs() {\n  var addedOutputIds = Array.from(this.sinkIds).filter(function (id) {\n    return !this.outputs.has(id);\n  }, this);\n\n  var removedOutputIds = Array.from(this.outputs.keys()).filter(function (id) {\n    return !this.sinkIds.has(id);\n  }, this);\n\n  var self = this;\n  var createOutputPromises = addedOutputIds.map(this._createAudioOutput, this);\n  return Promise.all(createOutputPromises).then(function () {\n    return Promise.all(removedOutputIds.map(self._removeAudioOutput, self));\n  });\n};\n\nPeerConnection.prototype._createAudio = function createAudio(arr) {\n  return new Audio(arr);\n};\n\nPeerConnection.prototype._createAudioOutput = function createAudioOutput(id) {\n  var dest = this._audioContext.createMediaStreamDestination();\n  this._mediaStreamSource.connect(dest);\n\n  var audio = this._createAudio();\n  setAudioSource(audio, dest.stream);\n\n  var self = this;\n  return audio.setSinkId(id).then(function () {\n    return audio.play();\n  }).then(function () {\n    self.outputs.set(id, {\n      audio: audio,\n      dest: dest\n    });\n  });\n};\n\nPeerConnection.prototype._removeAudioOutputs = function removeAudioOutputs() {\n  if (this._masterAudio && typeof this._masterAudioDeviceId !== 'undefined') {\n    this._disableOutput(this, this._masterAudioDeviceId);\n    this.outputs.delete(this._masterAudioDeviceId);\n    this._masterAudioDeviceId = null;\n\n    // Release the audio resources before deleting the audio\n    if (!this._masterAudio.paused) {\n      this._masterAudio.pause();\n    }\n    if (typeof this._masterAudio.srcObject !== 'undefined') {\n      this._masterAudio.srcObject = null;\n    } else {\n      this._masterAudio.src = '';\n    }\n    this._masterAudio = null;\n  }\n\n  return Array.from(this.outputs.keys()).map(this._removeAudioOutput, this);\n};\n\nPeerConnection.prototype._disableOutput = function disableOutput(pc, id) {\n  var output = pc.outputs.get(id);\n  if (!output) {\n    return;\n  }\n\n  if (output.audio) {\n    output.audio.pause();\n    output.audio.src = '';\n  }\n\n  if (output.dest) {\n    output.dest.disconnect();\n  }\n};\n\n/**\n * Disable a non-master output, and update the master output to assume its state. This\n *   is called when the device ID assigned to the master output has been removed from\n *   active devices. We can not simply remove the master audio output, so we must\n *   instead reassign it.\n * @private\n * @param {PeerConnection} pc\n * @param {string} masterId - The current device ID assigned to the master audio element.\n */\nPeerConnection.prototype._reassignMasterOutput = function reassignMasterOutput(pc, masterId) {\n  var masterOutput = pc.outputs.get(masterId);\n  pc.outputs.delete(masterId);\n\n  var self = this;\n  var idToReplace = Array.from(pc.outputs.keys())[0] || 'default';\n  return masterOutput.audio.setSinkId(idToReplace).then(function () {\n    self._disableOutput(pc, idToReplace);\n\n    pc.outputs.set(idToReplace, masterOutput);\n    pc._masterAudioDeviceId = idToReplace;\n  }).catch(function rollback() {\n    pc.outputs.set(masterId, masterOutput);\n    self._log.info('Could not reassign master output. Attempted to roll back.');\n  });\n};\n\nPeerConnection.prototype._removeAudioOutput = function removeAudioOutput(id) {\n  if (this._masterAudioDeviceId === id) {\n    return this._reassignMasterOutput(this, id);\n  }\n\n  this._disableOutput(this, id);\n  this.outputs.delete(id);\n\n  return Promise.resolve();\n};\n\n/**\n * Use an AudioContext to potentially split our audio output stream to multiple\n *   audio devices. This is only available to browsers with AudioContext and\n *   HTMLAudioElement.setSinkId() available. We save the source stream in\n *   _masterAudio, and use it for one of the active audio devices. We keep\n *   track of its ID because we must replace it if we lose its initial device.\n */\nPeerConnection.prototype._onAddTrack = function onAddTrack(pc, stream) {\n  var audio = pc._masterAudio = this._createAudio();\n  setAudioSource(audio, stream);\n  audio.play();\n\n  // Assign the initial master audio element to a random active output device\n  var deviceId = Array.from(pc.outputs.keys())[0] || 'default';\n  pc._masterAudioDeviceId = deviceId;\n  pc.outputs.set(deviceId, {\n    audio: audio\n  });\n\n  pc._mediaStreamSource = pc._audioContext.createMediaStreamSource(stream);\n\n  pc.pcStream = stream;\n  pc._updateAudioOutputs();\n};\n\n/**\n * Use a single audio element to play the audio output stream. This does not\n *   support multiple output devices, and is a fallback for when AudioContext\n *   and/or HTMLAudioElement.setSinkId() is not available to the client.\n */\nPeerConnection.prototype._fallbackOnAddTrack = function fallbackOnAddTrack(pc, stream) {\n  var audio = document && document.createElement('audio');\n  audio.autoplay = true;\n\n  if (!setAudioSource(audio, stream)) {\n    pc._log.info('Error attaching stream to element.');\n  }\n\n  pc.outputs.set('default', {\n    audio: audio\n  });\n};\n\nPeerConnection.prototype._setEncodingParameters = function (enableDscp) {\n  if (!enableDscp || !this._sender || typeof this._sender.getParameters !== 'function' || typeof this._sender.setParameters !== 'function') {\n    return;\n  }\n\n  var params = this._sender.getParameters();\n  if (!params.priority && !(params.encodings && params.encodings.length)) {\n    return;\n  }\n\n  // This is how MDN's RTPSenderParameters defines priority\n  params.priority = 'high';\n\n  // And this is how it's currently implemented in Chrome M72+\n  if (params.encodings && params.encodings.length) {\n    params.encodings.forEach(function (encoding) {\n      encoding.priority = 'high';\n      encoding.networkPriority = 'high';\n    });\n  }\n\n  this._sender.setParameters(params);\n};\n\nPeerConnection.prototype._setupPeerConnection = function (rtcConstraints, rtcConfiguration) {\n  var _this4 = this;\n\n  var self = this;\n  var version = new (this.options.rtcpcFactory || RTCPC)();\n  version.create(rtcConstraints, rtcConfiguration);\n  addStream(version.pc, this.stream);\n\n  var eventName = 'ontrack' in version.pc ? 'ontrack' : 'onaddstream';\n\n  version.pc[eventName] = function (event) {\n    var stream = self._remoteStream = event.stream || event.streams[0];\n\n    if (typeof version.pc.getSenders === 'function') {\n      _this4._sender = version.pc.getSenders()[0];\n    }\n\n    if (self._isSinkSupported) {\n      self._onAddTrack(self, stream);\n    } else {\n      self._fallbackOnAddTrack(self, stream);\n    }\n\n    self._startPollingVolume();\n  };\n  return version;\n};\n\nPeerConnection.prototype._maybeSetIceAggressiveNomination = function (sdp) {\n  return this.options.forceAggressiveIceNomination ? setIceAggressiveNomination(sdp) : sdp;\n};\n\nPeerConnection.prototype._setupChannel = function () {\n  var _this5 = this;\n\n  var pc = this.version.pc;\n\n  // Chrome 25 supports onopen\n  this.version.pc.onopen = function () {\n    _this5.status = 'open';\n    _this5.onopen();\n  };\n\n  // Chrome 26 doesn't support onopen so must detect state change\n  this.version.pc.onstatechange = function () {\n    if (_this5.version.pc && _this5.version.pc.readyState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n  };\n\n  // Chrome 27 changed onstatechange to onsignalingstatechange\n  this.version.pc.onsignalingstatechange = function () {\n    var state = pc.signalingState;\n    _this5._log.info('signalingState is \"' + state + '\"');\n\n    if (_this5.version.pc && _this5.version.pc.signalingState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n\n    _this5.onsignalingstatechange(pc.signalingState);\n  };\n\n  // Chrome 72+\n  pc.onconnectionstatechange = function () {\n    _this5._log.info('pc.connectionState is \"' + pc.connectionState + '\"');\n    _this5.onpcconnectionstatechange(pc.connectionState);\n    _this5._onMediaConnectionStateChange(pc.connectionState);\n  };\n\n  pc.onicecandidate = function (event) {\n    var candidate = event.candidate;\n\n    if (candidate) {\n      _this5._hasIceCandidates = true;\n      _this5.onicecandidate(candidate);\n      _this5._setupRTCIceTransportListener();\n    }\n\n    _this5._log.info('ICE Candidate: ' + JSON.stringify(candidate));\n  };\n\n  pc.onicegatheringstatechange = function () {\n    var state = pc.iceGatheringState;\n    if (state === 'gathering') {\n      _this5._startIceGatheringTimeout();\n    } else if (state === 'complete') {\n      _this5._stopIceGatheringTimeout();\n\n      // Fail if no candidates found\n      if (!_this5._hasIceCandidates) {\n        _this5._onIceGatheringFailure(ICE_GATHERING_FAIL_NONE);\n      }\n\n      // There was a failure mid-gathering phase. We want to start our timer and issue\n      // an ice restart if we don't get connected after our timeout\n      if (_this5._hasIceCandidates && _this5._hasIceGatheringFailures) {\n        _this5._startIceGatheringTimeout();\n      }\n    }\n\n    _this5._log.info('pc.iceGatheringState is \"' + pc.iceGatheringState + '\"');\n    _this5.onicegatheringstatechange(state);\n  };\n\n  pc.oniceconnectionstatechange = function () {\n    _this5._log.info('pc.iceConnectionState is \"' + pc.iceConnectionState + '\"');\n    _this5.oniceconnectionstatechange(pc.iceConnectionState);\n    _this5._onMediaConnectionStateChange(pc.iceConnectionState);\n  };\n};\nPeerConnection.prototype._initializeMediaStream = function (rtcConstraints, rtcConfiguration) {\n  // if mediastream already open then do nothing\n  if (this.status === 'open') {\n    return false;\n  }\n  if (this.pstream.status === 'disconnected') {\n    this.onerror({ info: {\n        code: 31000,\n        message: 'Cannot establish connection. Client is disconnected',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    this.close();\n    return false;\n  }\n  this.version = this._setupPeerConnection(rtcConstraints, rtcConfiguration);\n  this._setupChannel();\n  return true;\n};\n\n/**\n * Remove reconnection-related listeners\n * @private\n */\nPeerConnection.prototype._removeReconnectionListeners = function () {\n  if (this.pstream) {\n    this.pstream.removeListener('answer', this._onAnswerOrRinging);\n    this.pstream.removeListener('hangup', this._onHangup);\n  }\n};\n\n/**\n * Setup a listener for RTCDtlsTransport to capture state changes events\n * @private\n */\nPeerConnection.prototype._setupRTCDtlsTransportListener = function () {\n  var _this6 = this;\n\n  var dtlsTransport = this.getRTCDtlsTransport();\n\n  if (!dtlsTransport || dtlsTransport.onstatechange) {\n    return;\n  }\n\n  var handler = function handler() {\n    _this6._log.info('dtlsTransportState is \"' + dtlsTransport.state + '\"');\n    _this6.ondtlstransportstatechange(dtlsTransport.state);\n  };\n\n  // Publish initial state\n  handler();\n  dtlsTransport.onstatechange = handler;\n};\n\n/**\n * Setup a listener for RTCIceTransport to capture selected candidate pair changes\n * @private\n */\nPeerConnection.prototype._setupRTCIceTransportListener = function () {\n  var _this7 = this;\n\n  var iceTransport = this._getRTCIceTransport();\n\n  if (!iceTransport || iceTransport.onselectedcandidatepairchange) {\n    return;\n  }\n\n  iceTransport.onselectedcandidatepairchange = function () {\n    return _this7.onselectedcandidatepairchange(iceTransport.getSelectedCandidatePair());\n  };\n};\n\n/**\n * Restarts ICE for the current connection\n * ICE Restart failures are ignored. Retries are managed in Connection\n * @private\n */\nPeerConnection.prototype.iceRestart = function () {\n  var _this8 = this;\n\n  if (!this.options.enableIceRestart) {\n    return;\n  }\n  this._log.info('Attempting to restart ICE...');\n  this._hasIceCandidates = false;\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, { iceRestart: true }).then(function () {\n    _this8._removeReconnectionListeners();\n\n    _this8._onAnswerOrRinging = function (payload) {\n      _this8._removeReconnectionListeners();\n\n      if (!payload.sdp || _this8.version.pc.signalingState !== 'have-local-offer') {\n        var message = 'Invalid state or param during ICE Restart:' + ('hasSdp:' + !!payload.sdp + ', signalingState:' + _this8.version.pc.signalingState);\n        _this8._log.info(message);\n        return;\n      }\n\n      var sdp = _this8._maybeSetIceAggressiveNomination(payload.sdp);\n      _this8._answerSdp = sdp;\n      if (_this8.status !== 'closed') {\n        _this8.version.processAnswer(_this8.codecPreferences, sdp, null, function (err) {\n          var message = err && err.message ? err.message : err;\n          _this8._log.info('Failed to process answer during ICE Restart. Error: ' + message);\n        });\n      }\n    };\n\n    _this8._onHangup = function () {\n      _this8._log.info('Received hangup during ICE Restart');\n      _this8._removeReconnectionListeners();\n    };\n\n    _this8.pstream.on('answer', _this8._onAnswerOrRinging);\n    _this8.pstream.on('hangup', _this8._onHangup);\n    _this8.pstream.reinvite(_this8.version.getSDP(), _this8.callSid);\n  }).catch(function (err) {\n    var message = err && err.message ? err.message : err;\n    _this8._log.info('Failed to createOffer during ICE Restart. Error: ' + message);\n    // CreateOffer failures doesn't transition ice state to failed\n    // We need trigger it so it can be picked up by retries\n    _this8.onfailed(message);\n  });\n};\n\nPeerConnection.prototype.makeOutgoingCall = function (token, params, callsid, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  var _this9 = this;\n\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n\n  var self = this;\n  this.callSid = callsid;\n  function onAnswerSuccess() {\n    if (self.options) {\n      self._setEncodingParameters(self.options.dscp);\n    }\n    onMediaStarted(self.version.pc);\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error processing answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      } });\n  }\n  this._onAnswerOrRinging = function (payload) {\n    if (!payload.sdp) {\n      return;\n    }\n\n    var sdp = _this9._maybeSetIceAggressiveNomination(payload.sdp);\n    self._answerSdp = sdp;\n    if (self.status !== 'closed') {\n      self.version.processAnswer(_this9.codecPreferences, sdp, onAnswerSuccess, onAnswerError);\n    }\n    self.pstream.removeListener('answer', self._onAnswerOrRinging);\n    self.pstream.removeListener('ringing', self._onAnswerOrRinging);\n  };\n  this.pstream.on('answer', this._onAnswerOrRinging);\n  this.pstream.on('ringing', this._onAnswerOrRinging);\n\n  function onOfferSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.invite(self.version.getSDP(), self.callSid, self.options.preflight, params);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n\n  function onOfferError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error creating the offer: ' + errMsg,\n        twilioError: new MediaErrors.ClientLocalDescFailed()\n      } });\n  }\n\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, { audio: true }, onOfferSuccess, onOfferError);\n};\nPeerConnection.prototype.answerIncomingCall = function (callSid, sdp, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n  sdp = this._maybeSetIceAggressiveNomination(sdp);\n  this._answerSdp = sdp.replace(/^a=setup:actpass$/gm, 'a=setup:passive');\n  this.callSid = callSid;\n  var self = this;\n  function onAnswerSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.answer(self.version.getSDP(), callSid);\n      if (self.options) {\n        self._setEncodingParameters(self.options.dscp);\n      }\n      onMediaStarted(self.version.pc);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error creating the answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      } });\n  }\n  this.version.processSDP(this.options.maxAverageBitrate, this.codecPreferences, sdp, { audio: true }, onAnswerSuccess, onAnswerError);\n};\nPeerConnection.prototype.close = function () {\n  if (this.version && this.version.pc) {\n    if (this.version.pc.signalingState !== 'closed') {\n      this.version.pc.close();\n    }\n\n    this.version.pc = null;\n  }\n  if (this.stream) {\n    this.mute(false);\n    this._stopStream(this.stream);\n  }\n  this.stream = null;\n  this._removeReconnectionListeners();\n  this._stopIceGatheringTimeout();\n\n  Promise.all(this._removeAudioOutputs()).catch(function () {\n    // We don't need to alert about failures here.\n  });\n  if (this._mediaStreamSource) {\n    this._mediaStreamSource.disconnect();\n  }\n  if (this._inputAnalyser) {\n    this._inputAnalyser.disconnect();\n  }\n  if (this._outputAnalyser) {\n    this._outputAnalyser.disconnect();\n  }\n  if (this._inputAnalyser2) {\n    this._inputAnalyser2.disconnect();\n  }\n  if (this._outputAnalyser2) {\n    this._outputAnalyser2.disconnect();\n  }\n  this.status = 'closed';\n  this.onclose();\n};\nPeerConnection.prototype.reject = function (callSid) {\n  this.callSid = callSid;\n};\nPeerConnection.prototype.ignore = function (callSid) {\n  this.callSid = callSid;\n};\n/**\n * Mute or unmute input audio. If the stream is not yet present, the setting\n *   is saved and applied to future streams/tracks.\n * @params {boolean} shouldMute - Whether the input audio should\n *   be muted or unmuted.\n */\nPeerConnection.prototype.mute = function (shouldMute) {\n  this.isMuted = shouldMute;\n  if (!this.stream) {\n    return;\n  }\n\n  if (this._sender && this._sender.track) {\n    this._sender.track.enabled = !shouldMute;\n  } else {\n    var audioTracks = typeof this.stream.getAudioTracks === 'function' ? this.stream.getAudioTracks() : this.stream.audioTracks;\n\n    audioTracks.forEach(function (track) {\n      track.enabled = !shouldMute;\n    });\n  }\n};\n/**\n * Get or create an RTCDTMFSender for the first local audio MediaStreamTrack\n * we can get from the RTCPeerConnection. Return null if unsupported.\n * @instance\n * @returns ?RTCDTMFSender\n */\nPeerConnection.prototype.getOrCreateDTMFSender = function getOrCreateDTMFSender() {\n  if (this._dtmfSender || this._dtmfSenderUnsupported) {\n    return this._dtmfSender || null;\n  }\n\n  var self = this;\n  var pc = this.version.pc;\n  if (!pc) {\n    this._log.info('No RTCPeerConnection available to call createDTMFSender on');\n    return null;\n  }\n\n  if (typeof pc.getSenders === 'function' && (typeof RTCDTMFSender === 'function' || typeof RTCDtmfSender === 'function')) {\n    var chosenSender = pc.getSenders().find(function (sender) {\n      return sender.dtmf;\n    });\n    if (chosenSender) {\n      this._log.info('Using RTCRtpSender#dtmf');\n      this._dtmfSender = chosenSender.dtmf;\n      return this._dtmfSender;\n    }\n  }\n\n  if (typeof pc.createDTMFSender === 'function' && typeof pc.getLocalStreams === 'function') {\n    var track = pc.getLocalStreams().map(function (stream) {\n      var tracks = self._getAudioTracks(stream);\n      return tracks && tracks[0];\n    })[0];\n\n    if (!track) {\n      this._log.info('No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender');\n      return null;\n    }\n\n    this._log.info('Creating RTCDTMFSender');\n    this._dtmfSender = pc.createDTMFSender(track);\n    return this._dtmfSender;\n  }\n\n  this._log.info('RTCPeerConnection does not support RTCDTMFSender');\n  this._dtmfSenderUnsupported = true;\n  return null;\n};\n\n/**\n * Get the RTCDtlTransport object from the PeerConnection\n * @returns RTCDtlTransport\n */\nPeerConnection.prototype.getRTCDtlsTransport = function getRTCDtlsTransport() {\n  var sender = this.version && this.version.pc && typeof this.version.pc.getSenders === 'function' && this.version.pc.getSenders()[0];\n  return sender && sender.transport || null;\n};\n\nPeerConnection.prototype._canStopMediaStreamTrack = function () {\n  return typeof MediaStreamTrack.prototype.stop === 'function';\n};\n\nPeerConnection.prototype._getAudioTracks = function (stream) {\n  return typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n};\n\n/**\n * Get the RTCIceTransport object from the PeerConnection\n * @returns RTCIceTransport\n */\nPeerConnection.prototype._getRTCIceTransport = function _getRTCIceTransport() {\n  var dtlsTransport = this.getRTCDtlsTransport();\n  return dtlsTransport && dtlsTransport.iceTransport || null;\n};\n\n// Is PeerConnection.protocol used outside of our SDK? We should remove this if not.\nPeerConnection.protocol = function () {\n  return RTCPC.test() ? new RTCPC() : null;\n}();\n\nfunction addStream(pc, stream) {\n  if (typeof pc.addTrack === 'function') {\n    stream.getAudioTracks().forEach(function (track) {\n      // The second parameters, stream, should not be necessary per the latest editor's\n      //   draft, but FF requires it. https://bugzilla.mozilla.org/show_bug.cgi?id=1231414\n      pc.addTrack(track, stream);\n    });\n  } else {\n    pc.addStream(stream);\n  }\n}\n\nfunction cloneStream(oldStream) {\n  var newStream = typeof MediaStream !== 'undefined' ? new MediaStream()\n  // eslint-disable-next-line\n  : new webkitMediaStream();\n\n  oldStream.getAudioTracks().forEach(newStream.addTrack, newStream);\n  return newStream;\n}\n\nfunction removeStream(pc, stream) {\n  if (typeof pc.removeTrack === 'function') {\n    pc.getSenders().forEach(function (sender) {\n      pc.removeTrack(sender);\n    });\n  } else {\n    pc.removeStream(stream);\n  }\n}\n\n/**\n * Set the source of an HTMLAudioElement to the specified MediaStream\n * @param {HTMLAudioElement} audio\n * @param {MediaStream} stream\n * @returns {boolean} Whether the audio source was set successfully\n */\nfunction setAudioSource(audio, stream) {\n  if (typeof audio.srcObject !== 'undefined') {\n    audio.srcObject = stream;\n  } else if (typeof audio.mozSrcObject !== 'undefined') {\n    audio.mozSrcObject = stream;\n  } else if (typeof audio.src !== 'undefined') {\n    var _window = audio.options.window || window;\n    audio.src = (_window.URL || _window.webkitURL).createObjectURL(stream);\n  } else {\n    return false;\n  }\n\n  return true;\n}\n\nPeerConnection.enabled = RTCPC.test();\n\nmodule.exports = PeerConnection;"],"mappings":"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"},"metadata":{},"sourceType":"script"}