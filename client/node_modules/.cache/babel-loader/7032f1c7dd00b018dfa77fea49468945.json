{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Inviter, SessionState, UserAgent, Registerer } from \"sip.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Phone(props) {\n  _s();\n\n  const [val, setVal] = useState('');\n  const audioRef = useRef();\n  const remoteStream = new MediaStream();\n\n  const setupRemoteMedia = session => {\n    session.sessionDescriptionHandler.peerConnection.getReceivers().forEach(receiver => {\n      if (receiver.track) {\n        remoteStream.addTrack(receiver.track);\n      }\n    });\n    let player = audioRef.current;\n    player.srcObject = remoteStream;\n    player.play();\n  };\n\n  const cleanupMedia = () => {\n    let player = audioRef.current;\n    player.srcObject = null;\n    player.pause();\n  };\n\n  const onInvite = invitation => {\n    invitation.stateChange.addListener(state => {\n      console.log(`Session state changed to ${state}`);\n\n      switch (state) {\n        case SessionState.Initial:\n          setupRemoteMedia(invitation);\n          break;\n\n        case SessionState.Establishing:\n          break;\n\n        case SessionState.Established:\n          break;\n\n        case SessionState.Terminating: // fall through\n\n        case SessionState.Terminated:\n          cleanupMedia();\n          break;\n\n        default:\n          throw new Error(\"Unknown session state.\");\n      }\n    });\n    invitation.accept();\n  };\n\n  const transportOptions = {\n    server: \"wss://webrtc.1com.co.il/ws\"\n  };\n  const uri = UserAgent.makeURI(\"sip:200-dataocean@webrtc.1com.co.il\");\n  const userAgentOptions = {\n    authorizationPassword: 'RjH2TV2s9s8FHSpz',\n    authorizationUsername: '200-dataocean',\n    transportOptions,\n    delegate: {\n      onInvite\n    },\n    uri\n  };\n  const userAgent = new UserAgent(userAgentOptions);\n  const registerer = new Registerer(userAgent);\n  userAgent.start().then(() => {\n    registerer.register();\n  });\n\n  const makeCall = phone => {\n    userAgent.start().then(() => {\n      const target = UserAgent.makeURI(`sip:${phone}@webrtc.1com.co.il`);\n      const inviter = new Inviter(userAgent, target);\n      inviter.stateChange.addListener(state => {\n        console.log(`Session state changed to ${state}`);\n\n        switch (state) {\n          case SessionState.Initial:\n            break;\n\n          case SessionState.Establishing:\n            break;\n\n          case SessionState.Established:\n            setupRemoteMedia(inviter);\n            break;\n\n          case SessionState.Terminating: // fall through\n\n          case SessionState.Terminated:\n            cleanupMedia();\n            break;\n\n          default:\n            throw new Error(\"Unknown session state.\");\n        }\n      });\n      inviter.invite();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        ref: audioRef,\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"enter phone\",\n      value: val,\n      onChange: e => setVal(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => makeCall(val),\n      children: \"\\u05D7\\u05D9\\u05D9\\u05D2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u05E0\\u05EA\\u05E7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Phone, \"Qyw3uWstap4X+0wdoReDyvZOz70=\");\n\n_c = Phone;\nexport default Phone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"names":["React","useRef","useState","Inviter","SessionState","UserAgent","Registerer","Phone","props","val","setVal","audioRef","remoteStream","MediaStream","setupRemoteMedia","session","sessionDescriptionHandler","peerConnection","getReceivers","forEach","receiver","track","addTrack","player","current","srcObject","play","cleanupMedia","pause","onInvite","invitation","stateChange","addListener","state","console","log","Initial","Establishing","Established","Terminating","Terminated","Error","accept","transportOptions","server","uri","makeURI","userAgentOptions","authorizationPassword","authorizationUsername","delegate","userAgent","registerer","start","then","register","makeCall","phone","target","inviter","invite","display","e","value"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Inviter, SessionState, UserAgent, Registerer } from \"sip.js\";\n\nfunction Phone(props) {\n    const [val, setVal] = useState('');\n\n    const audioRef = useRef();\n\n    const remoteStream = new MediaStream();\n\n    const setupRemoteMedia = (session) => {\n        session.sessionDescriptionHandler.peerConnection.getReceivers().forEach((receiver) => {\n            if (receiver.track) {\n                remoteStream.addTrack(receiver.track);\n            }\n        });\n\n        let player = audioRef.current;\n        player.srcObject = remoteStream;\n        player.play();\n    }\n\n    const cleanupMedia = () => {\n        let player = audioRef.current;\n        player.srcObject = null;\n        player.pause();\n    }\n\n    const onInvite = (invitation) => {\n        invitation.stateChange.addListener((state) => {\n            console.log(`Session state changed to ${state}`);\n            switch (state) {\n                case SessionState.Initial:\n                    setupRemoteMedia(invitation);\n                    break;\n                case SessionState.Establishing:\n                    \n                    break;\n                case SessionState.Established:\n\n                    break;\n                case SessionState.Terminating:\n                // fall through\n                case SessionState.Terminated:\n                    cleanupMedia();\n                    break;\n                default:\n                    throw new Error(\"Unknown session state.\");\n            }\n        });\n        invitation.accept();\n    }\n\n    const transportOptions = {\n        server: \"wss://webrtc.1com.co.il/ws\"\n    };\n\n    const uri = UserAgent.makeURI(\"sip:200-dataocean@webrtc.1com.co.il\");\n\n    const userAgentOptions = {\n        authorizationPassword: 'RjH2TV2s9s8FHSpz',\n        authorizationUsername: '200-dataocean',\n        transportOptions,\n        delegate: {\n            onInvite\n        },\n        uri\n    };\n\n\n    const userAgent = new UserAgent(userAgentOptions);\n\n    const registerer = new Registerer(userAgent);\n\n    userAgent.start().then(() => {\n        registerer.register();\n    });\n\n    const makeCall = (phone) => {\n        userAgent.start().then(() => {\n            const target = UserAgent.makeURI(`sip:${phone}@webrtc.1com.co.il`);\n    \n            const inviter = new Inviter(userAgent, target);\n    \n            inviter.stateChange.addListener((state) => {\n                console.log(`Session state changed to ${state}`);\n                switch (state) {\n                    case SessionState.Initial:\n                        break;\n                    case SessionState.Establishing:\n                        break;\n                    case SessionState.Established:\n                        setupRemoteMedia(inviter);\n                        break;\n                    case SessionState.Terminating:\n                    // fall through\n                    case SessionState.Terminated:\n                        cleanupMedia();\n                        break;\n                    default:\n                        throw new Error(\"Unknown session state.\");\n                }\n            });\n    \n            inviter.invite();\n        });\n    }\n\n\n    return (\n        <div>\n\n            <div style={{ display: 'none' }}>\n                <audio controls ref={audioRef}>\n                    Your browser does not support the audio element.\n                </audio>\n            </div>\n\n            <input\n                placeholder='enter phone'\n                value={val}\n                onChange={e => setVal(e.target.value)}\n            />\n            <button onClick={ () => makeCall(val) }>\n                חייג\n            </button>\n\n            <br/>\n\n            <button >\n                נתק\n            </button>\n        </div>\n    );\n}\n\nexport default Phone;"],"mappings":"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"},"metadata":{},"sourceType":"module"}