{"ast":null,"code":"import _objectWithoutProperties from \"/home/david/Desktop/workSpace/bots-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/components/FormComp/RadioButtons.js\";\nimport React from 'react';\nimport TextError from './TextError';\nimport { Field, ErrorMessage } from 'formik';\nimport { RadioGroup, Radio, FormControlLabel, FormControl, FormLabel, FormHelperText } from '@mui/material';\n\nfunction RadioButtons(props) {\n  var _this = this;\n\n  var label = props.label,\n      name = props.name,\n      options = props.options,\n      rest = _objectWithoutProperties(props, [\"label\", \"name\", \"options\"]); // return (\n  //     <div className='form-control'>\n  //         <label>{label}</label>\n  //         <Field name={name} {...rest}>\n  //             {\n  //                 ({ field }) => {\n  //                     return options.map((option, index) => {\n  //                         return(\n  //                             <React.Fragment key={index}>\n  //                                 <input \n  //                                     type='radio' \n  //                                     id={option.value} \n  //                                     {...field} \n  //                                     value={option.value} \n  //                                     checked={ field.value === option.value }\n  //                                 />\n  //                                 <label htmlFor={option.value}>{option.key}</label>\n  //                             </React.Fragment>\n  //                         )\n  //                     })\n  //                 }\n  //             }\n  //         </Field>\n  //         <ErrorMessage name={name} component={TextError} />\n  //     </div>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var field = _ref.field,\n        form = _ref.form;\n    return /*#__PURE__*/React.createElement(FormControl, {\n      error: form.errors[name] && form.touched[name],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      htmlFor: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, label), /*#__PURE__*/React.createElement(RadioGroup, {\n      name: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, options.map(function (option) {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: option.value,\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 50\n          }\n        }),\n        label: option.key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }\n      });\n    })), form.errors[name] && form.touched[name] ? /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, form.errors[name]) : null);\n  });\n}\n\nexport default RadioButtons;","map":{"version":3,"names":["React","TextError","Field","ErrorMessage","RadioGroup","Radio","FormControlLabel","FormControl","FormLabel","FormHelperText","RadioButtons","props","label","name","options","rest","field","form","errors","touched","map","option","value","key"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/components/FormComp/RadioButtons.js"],"sourcesContent":["import React from 'react';\nimport TextError from './TextError';\nimport { Field, ErrorMessage } from 'formik';\nimport { RadioGroup, Radio, FormControlLabel, FormControl, FormLabel, FormHelperText } from '@mui/material';\n\nfunction RadioButtons(props) {\n    const { label, name, options, ...rest } = props;\n    // return (\n    //     <div className='form-control'>\n    //         <label>{label}</label>\n    //         <Field name={name} {...rest}>\n    //             {\n    //                 ({ field }) => {\n    //                     return options.map((option, index) => {\n    //                         return(\n    //                             <React.Fragment key={index}>\n    //                                 <input \n    //                                     type='radio' \n    //                                     id={option.value} \n    //                                     {...field} \n    //                                     value={option.value} \n    //                                     checked={ field.value === option.value }\n    //                                 />\n    //                                 <label htmlFor={option.value}>{option.key}</label>\n    //                             </React.Fragment>\n    //                         )\n    //                     })\n    //                 }\n    //             }\n    //         </Field>\n    //         <ErrorMessage name={name} component={TextError} />\n    //     </div>\n    // );\n\n\n    return (\n        <Field name={name}>\n            {\n                ({field, form}) => {\n                    return <FormControl error={form.errors[name] && form.touched[name]}>\n                        <FormLabel htmlFor={name}>{label}</FormLabel>\n                        {/* <TextField id={name} {...rest} {...field} error={form.errors[name] && form.touched[name]}/> */}\n                        <RadioGroup name={name}>\n                            {\n                                options.map((option) => {\n                                    return <FormControlLabel \n                                        value={option.value} \n                                        control={<Radio />} \n                                        label={option.key} \n                                    />\n                                })\n                            }\n                        </RadioGroup>\n                        {\n                            form.errors[name] && form.touched[name] ? (\n                                <FormHelperText error >{form.errors[name]}</FormHelperText>\n                            ) : null\n                        } \n                    </FormControl>\n                }\n            }\n        </Field>\n    );\n}\n\nexport default RadioButtons;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,gBAA5B,EAA8CC,WAA9C,EAA2DC,SAA3D,EAAsEC,cAAtE,QAA4F,eAA5F;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAAA,IACjBC,KADiB,GACiBD,KADjB,CACjBC,KADiB;EAAA,IACVC,IADU,GACiBF,KADjB,CACVE,IADU;EAAA,IACJC,OADI,GACiBH,KADjB,CACJG,OADI;EAAA,IACQC,IADR,4BACiBJ,KADjB,iCAEzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAGA,oBACI,oBAAC,KAAD;IAAO,IAAI,EAAEE,IAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEQ,gBAAmB;IAAA,IAAjBG,KAAiB,QAAjBA,KAAiB;IAAA,IAAVC,IAAU,QAAVA,IAAU;IACf,oBAAO,oBAAC,WAAD;MAAa,KAAK,EAAEA,IAAI,CAACC,MAAL,CAAYL,IAAZ,KAAqBI,IAAI,CAACE,OAAL,CAAaN,IAAb,CAAzC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACH,oBAAC,SAAD;MAAW,OAAO,EAAEA,IAApB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA2BD,KAA3B,CADG,eAGH,oBAAC,UAAD;MAAY,IAAI,EAAEC,IAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEQC,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAAY;MACpB,oBAAO,oBAAC,gBAAD;QACH,KAAK,EAAEA,MAAM,CAACC,KADX;QAEH,OAAO,eAAE,oBAAC,KAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFN;QAGH,KAAK,EAAED,MAAM,CAACE,GAHX;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAP;IAKH,CAND,CAFR,CAHG,EAeCN,IAAI,CAACC,MAAL,CAAYL,IAAZ,KAAqBI,IAAI,CAACE,OAAL,CAAaN,IAAb,CAArB,gBACI,oBAAC,cAAD;MAAgB,KAAK,MAArB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAwBI,IAAI,CAACC,MAAL,CAAYL,IAAZ,CAAxB,CADJ,GAEI,IAjBL,CAAP;EAoBH,CAvBT,CADJ;AA4BH;;AAED,eAAeH,YAAf"},"metadata":{},"sourceType":"module"}