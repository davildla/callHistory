{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Device } from 'twilio-client';\nimport utils from '../utils/phoneUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Phone(props) {\n  _s();\n\n  const [dest, setDest] = useState('');\n  const [status, setStatus] = useState('');\n  const [ready, setReady] = useState(false);\n  const [device, setDevice] = useState(null);\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      const twilioDevice = new Device();\n      setDevice(twilioDevice);\n      twilioDevice.on('incoming', connection => {\n        // immediately accepts incoming connection\n        connection.accept();\n        setStatus(connection.status());\n      });\n      twilioDevice.on('ready', device => {\n        setStatus(\"device ready\");\n        setReady(true);\n      });\n      twilioDevice.on('connect', connection => {\n        setStatus(connection.status());\n      });\n      twilioDevice.on('disconnect', connection => {\n        setStatus(connection.status());\n      });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [ready ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Press to Talk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your name to begin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: dest,\n        placeholder: \"972...\",\n        onChange: e => setDest(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"call\",\n        onClick: async () => {\n          let resp = await utils.generateToken('david');\n          device.setup(resp.token, {\n            debug: true\n          });\n          device.audio.incoming(false);\n          device.audio.outgoing(false);\n          device.audio.disconnect(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Phone, \"sC8DY5U/2ZFqU2r6OjoFj7irqrc=\");\n\n_c = Phone;\nexport default Phone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"names":["React","useState","useEffect","Device","utils","Phone","props","dest","setDest","status","setStatus","ready","setReady","device","setDevice","isMounted","twilioDevice","on","connection","accept","e","target","value","resp","generateToken","setup","token","debug","audio","incoming","outgoing","disconnect"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Device } from 'twilio-client'\nimport utils from '../utils/phoneUtils';\n\nfunction Phone(props) {\n    const [dest, setDest] = useState('');\n    const [status, setStatus] = useState('');\n    const [ready, setReady] = useState(false);\n    const [device, setDevice] = useState(null);\n\n    useEffect(()=>{\n        let isMounted = true;\n\n        if (isMounted) {\n            const twilioDevice = new Device(); \n            setDevice(twilioDevice);\n\n            twilioDevice.on('incoming', connection => {\n                // immediately accepts incoming connection\n                connection.accept();\n                \n                setStatus(connection.status());\n            });\n                \n            twilioDevice.on('ready', device => {\n                setStatus(\"device ready\");\n                setReady(true);\n            });\n            \n            twilioDevice.on('connect', connection => {\n                setStatus(connection.status())\n            });\n            \n            twilioDevice.on('disconnect', connection => {\n                setStatus(connection.status())\n            });\n        }\n\n        return () => { isMounted = false };\n    },[]);\n    \n\n    return (\n        <div>\n            { \n                ready\n                ? <button>\n                    Press to Talk\n                </button> \n                : <div>\n                    <p>Enter your name to begin.</p>\n                    <input \n                        type=\"text\" \n                        value={dest}\n                        placeholder=\"972...\"\n                        onChange={(e) => setDest(e.target.value)}\n                    />\n                    <input \n                        type=\"button\" \n                        value=\"call\" \n                        onClick={async () => {\n                            let resp = await utils.generateToken('david');\n                            device.setup(resp.token, { debug: true });\n                            device.audio.incoming(false);\n                            device.audio.outgoing(false);\n                            device.audio.disconnect(false);\n                        }}\n                    />\n                </div>\n            }\n            <p>{ status }</p>\n        </div>\n    );\n}\n\nexport default Phone;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;EAEAC,SAAS,CAAC,MAAI;IACV,IAAIa,SAAS,GAAG,IAAhB;;IAEA,IAAIA,SAAJ,EAAe;MACX,MAAMC,YAAY,GAAG,IAAIb,MAAJ,EAArB;MACAW,SAAS,CAACE,YAAD,CAAT;MAEAA,YAAY,CAACC,EAAb,CAAgB,UAAhB,EAA4BC,UAAU,IAAI;QACtC;QACAA,UAAU,CAACC,MAAX;QAEAT,SAAS,CAACQ,UAAU,CAACT,MAAX,EAAD,CAAT;MACH,CALD;MAOAO,YAAY,CAACC,EAAb,CAAgB,OAAhB,EAAyBJ,MAAM,IAAI;QAC/BH,SAAS,CAAC,cAAD,CAAT;QACAE,QAAQ,CAAC,IAAD,CAAR;MACH,CAHD;MAKAI,YAAY,CAACC,EAAb,CAAgB,SAAhB,EAA2BC,UAAU,IAAI;QACrCR,SAAS,CAACQ,UAAU,CAACT,MAAX,EAAD,CAAT;MACH,CAFD;MAIAO,YAAY,CAACC,EAAb,CAAgB,YAAhB,EAA8BC,UAAU,IAAI;QACxCR,SAAS,CAACQ,UAAU,CAACT,MAAX,EAAD,CAAT;MACH,CAFD;IAGH;;IAED,OAAO,MAAM;MAAEM,SAAS,GAAG,KAAZ;IAAmB,CAAlC;EACH,CA7BQ,EA6BP,EA7BO,CAAT;EAgCA,oBACI;IAAA,WAEQJ,KAAK,gBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,gBAIH;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACI,IAAI,EAAC,MADT;QAEI,KAAK,EAAEJ,IAFX;QAGI,WAAW,EAAC,QAHhB;QAII,QAAQ,EAAGa,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;MAJ5B;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE;QACI,IAAI,EAAC,QADT;QAEI,KAAK,EAAC,MAFV;QAGI,OAAO,EAAE,YAAY;UACjB,IAAIC,IAAI,GAAG,MAAMnB,KAAK,CAACoB,aAAN,CAAoB,OAApB,CAAjB;UACAX,MAAM,CAACY,KAAP,CAAaF,IAAI,CAACG,KAAlB,EAAyB;YAAEC,KAAK,EAAE;UAAT,CAAzB;UACAd,MAAM,CAACe,KAAP,CAAaC,QAAb,CAAsB,KAAtB;UACAhB,MAAM,CAACe,KAAP,CAAaE,QAAb,CAAsB,KAAtB;UACAjB,MAAM,CAACe,KAAP,CAAaG,UAAb,CAAwB,KAAxB;QACH;MATL;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QANV,eA2BI;MAAA,UAAKtB;IAAL;MAAA;MAAA;MAAA;IAAA,QA3BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA+BH;;GArEQJ,K;;KAAAA,K;AAuET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}