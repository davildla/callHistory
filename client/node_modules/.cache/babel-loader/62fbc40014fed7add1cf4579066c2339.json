{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/AddNewSystem/AddNewSystemForm.js\";\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport FormikControl from '../../components/FormComp/FormikControl';\n\nfunction AddNewSystemForm(props) {\n  var _this = this;\n\n  var selectSystemCallDirectionOptions = [{\n    key: 'בחר',\n    value: ''\n  }, {\n    key: 'שיחות יוצאות',\n    value: 'outbound'\n  }, {\n    key: 'שיחות נכנסות',\n    value: 'inbound'\n  }];\n  var initialValues = {\n    name: '',\n    gitPath: '',\n    direction: ''\n  };\n  var validationSchema = Yup.object({\n    name: Yup.string().required('שדה חובה'),\n    gitPath: Yup.string().matches(/.*\\.ccf$/, 'יש לצרף את הסיומת : \".git\"').required('שדה חובה'),\n    direction: Yup.string().required('שדה חובה')\n  });\n\n  var onSubmit = function onSubmit(values) {\n    return console.log('Form data', values);\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, function (formik) {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormikControl, {\n      control: \"input\",\n      label: \"\\u05E9\\u05DD \\u05DE\\u05E2\\u05E8\\u05DB\\u05EA\",\n      name: \"name\",\n      size: \"small\",\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormikControl, {\n      control: \"input\",\n      label: \"\\u05E9\\u05DD \\u05E8\\u05E4\\u05D5\\u05D6\\u05D8\\u05D5\\u05E8\\u05D9 \\u05D1\\u05D2\\u05D9\\u05D8\\u05D4\\u05D0\\u05D1\",\n      name: \"gitPath\",\n      size: \"small\",\n      fullWidth: true,\n      autoComplete: \"off\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormikControl, {\n      control: \"select\",\n      label: \"\\u05E1\\u05D5\\u05D2 \\u05DE\\u05E2\\u05E8\\u05DB\\u05EA \\u05E9\\u05D9\\u05D7\\u05D5\\u05EA\",\n      name: \"direction\",\n      options: selectSystemCallDirectionOptions,\n      size: \"small\",\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"\\u05E9\\u05DC\\u05D7\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Submit\"));\n  });\n}\n\nexport default AddNewSystemForm;","map":{"version":3,"names":["React","Yup","Formik","Form","FormikControl","AddNewSystemForm","props","selectSystemCallDirectionOptions","key","value","initialValues","name","gitPath","direction","validationSchema","object","string","required","matches","onSubmit","values","console","log","formik"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/AddNewSystem/AddNewSystemForm.js"],"sourcesContent":["import React from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport FormikControl from '../../components/FormComp/FormikControl';\n\n\nfunction AddNewSystemForm(props) {\n    const selectSystemCallDirectionOptions = [\n        {key : 'בחר', value : ''},\n        {key : 'שיחות יוצאות', value : 'outbound'},\n        {key : 'שיחות נכנסות', value : 'inbound'},\n    ]\n\n    const initialValues = { \n        name : '',\n        gitPath : '',\n        direction: '',\n    };\n\n    const validationSchema = Yup.object({\n        name : Yup.string().required('שדה חובה'),\n        gitPath : Yup.string().matches(/.*\\.ccf$/, 'יש לצרף את הסיומת : \".git\"').required('שדה חובה'),\n        direction : Yup.string().required('שדה חובה'),\n\n    });\n\n    const onSubmit = values => console.log('Form data', values);\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            {\n                formik => <Form>\n                    <FormikControl \n                        control='input' \n                        label='שם מערכת' \n                        name='name' \n                        size='small'\n                        fullWidth\n                        />\n                    <br/>\n                    <FormikControl \n                        control='input' \n                        label='שם רפוזטורי בגיטהאב' \n                        name='gitPath' \n                        size='small'\n                        fullWidth\n                        autoComplete='off'\n                    />\n                    <br/>\n                    <FormikControl \n                        control='select' \n                        label='סוג מערכת שיחות' \n                        name='direction' \n                        options={selectSystemCallDirectionOptions} \n                        size='small' \n                        fullWidth\n                    />\n\n                    <button type='שלח'>Submit</button>\n                </Form>\n            }\n        </Formik>\n    );\n}\n\nexport default AddNewSystemForm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,aAAP,MAA0B,yCAA1B;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC7B,IAAMC,gCAAgC,GAAG,CACrC;IAACC,GAAG,EAAG,KAAP;IAAcC,KAAK,EAAG;EAAtB,CADqC,EAErC;IAACD,GAAG,EAAG,cAAP;IAAuBC,KAAK,EAAG;EAA/B,CAFqC,EAGrC;IAACD,GAAG,EAAG,cAAP;IAAuBC,KAAK,EAAG;EAA/B,CAHqC,CAAzC;EAMA,IAAMC,aAAa,GAAG;IAClBC,IAAI,EAAG,EADW;IAElBC,OAAO,EAAG,EAFQ;IAGlBC,SAAS,EAAE;EAHO,CAAtB;EAMA,IAAMC,gBAAgB,GAAGb,GAAG,CAACc,MAAJ,CAAW;IAChCJ,IAAI,EAAGV,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADyB;IAEhCL,OAAO,EAAGX,GAAG,CAACe,MAAJ,GAAaE,OAAb,CAAqB,UAArB,EAAiC,4BAAjC,EAA+DD,QAA/D,CAAwE,UAAxE,CAFsB;IAGhCJ,SAAS,EAAGZ,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;EAHoB,CAAX,CAAzB;;EAOA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;IAAA,OAAIC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB,CAAJ;EAAA,CAAvB;;EAEA,oBACI,oBAAC,MAAD;IACI,aAAa,EAAEV,aADnB;IAEI,gBAAgB,EAAEI,gBAFtB;IAGI,QAAQ,EAAEK,QAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAMQ,UAAAI,MAAM;IAAA,oBAAI,oBAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACN,oBAAC,aAAD;MACI,OAAO,EAAC,OADZ;MAEI,KAAK,EAAC,6CAFV;MAGI,IAAI,EAAC,MAHT;MAII,IAAI,EAAC,OAJT;MAKI,SAAS,MALb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADM,eAQN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EARM,eASN,oBAAC,aAAD;MACI,OAAO,EAAC,OADZ;MAEI,KAAK,EAAC,0GAFV;MAGI,IAAI,EAAC,SAHT;MAII,IAAI,EAAC,OAJT;MAKI,SAAS,MALb;MAMI,YAAY,EAAC,KANjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EATM,eAiBN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAjBM,eAkBN,oBAAC,aAAD;MACI,OAAO,EAAC,QADZ;MAEI,KAAK,EAAC,kFAFV;MAGI,IAAI,EAAC,WAHT;MAII,OAAO,EAAEhB,gCAJb;MAKI,IAAI,EAAC,OALT;MAMI,SAAS,MANb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAlBM,eA2BN;MAAQ,IAAI,EAAC,oBAAb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YA3BM,CAAJ;EAAA,CANd,CADJ;AAuCH;;AAED,eAAeF,gBAAf"},"metadata":{},"sourceType":"module"}