{"ast":null,"code":"\"use strict\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar EventTarget = function () {\n  function EventTarget() {\n    _classCallCheck(this, EventTarget);\n\n    this._eventEmitter = new events_1.EventEmitter();\n  }\n\n  _createClass(EventTarget, [{\n    key: \"addEventListener\",\n    value: function addEventListener(name, handler) {\n      return this._eventEmitter.addListener(name, handler);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(name) {\n      var _eventEmitter;\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return (_eventEmitter = this._eventEmitter).emit.apply(_eventEmitter, [name].concat(args));\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(name, handler) {\n      return this._eventEmitter.removeListener(name, handler);\n    }\n  }]);\n\n  return EventTarget;\n}();\n\nexports.default = EventTarget; //# sourceMappingURL=EventTarget.js.map","map":null,"metadata":{},"sourceType":"script"}