{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar r0 = 94.768; // Constant used in computing \"rFactor\".\n\n/**\n * Calculate the mos score of a stats object\n * @param {number} rtt\n * @param {number} jitter\n * @param {number} fractionLost - The fraction of packets that have been lost.\n * Calculated by packetsLost / totalPackets\n * @return {number | null} mos - Calculated MOS, `1.0` through roughly `4.5`.\n * Returns `null` when any of the input parameters are not a `non-negative`\n * number.\n */\n\nfunction calculate(rtt, jitter, fractionLost) {\n  if (typeof rtt !== 'number' || typeof jitter !== 'number' || typeof fractionLost !== 'number' || !isNonNegativeNumber(rtt) || !isNonNegativeNumber(jitter) || !isNonNegativeNumber(fractionLost)) {\n    return null;\n  } // Compute the effective latency.\n\n\n  var effectiveLatency = rtt + jitter * 2 + 10; // Compute the initial \"rFactor\" from effective latency.\n\n  var rFactor = 0;\n\n  switch (true) {\n    case effectiveLatency < 160:\n      rFactor = r0 - effectiveLatency / 40;\n      break;\n\n    case effectiveLatency < 1000:\n      rFactor = r0 - (effectiveLatency - 120) / 10;\n      break;\n  } // Adjust \"rFactor\" with the fraction of packets lost.\n\n\n  switch (true) {\n    case fractionLost <= rFactor / 2.5:\n      rFactor = Math.max(rFactor - fractionLost * 2.5, 6.52);\n      break;\n\n    default:\n      rFactor = 0;\n      break;\n  } // Compute MOS from \"rFactor\".\n\n\n  var mos = 1 + 0.035 * rFactor + 0.000007 * rFactor * (rFactor - 60) * (100 - rFactor);\n  return mos;\n}\n\nexports.calculate = calculate;\n/**\n * Returns true if and only if the parameter passed is a number, is not `NaN`,\n * is finite, and is greater than or equal to `0`.\n * @param n\n */\n\nfunction isNonNegativeNumber(n) {\n  return typeof n === 'number' && !isNaN(n) && isFinite(n) && n >= 0;\n}\n\nexports.isNonNegativeNumber = isNonNegativeNumber;\nexports.default = {\n  calculate: calculate,\n  isNonNegativeNumber: isNonNegativeNumber\n}; //# sourceMappingURL=mos.js.map","map":null,"metadata":{},"sourceType":"script"}