{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar NotSupportedError = require('../errors').NotSupportedError;\n\nvar util = require('../util');\n\nfunction getUserMedia(constraints, options) {\n  options = options || {};\n  options.util = options.util || util;\n  options.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  return new Promise(function (resolve, reject) {\n    if (!options.navigator) {\n      throw new NotSupportedError('getUserMedia is not supported');\n    }\n\n    switch ('function') {\n      case _typeof(options.navigator.mediaDevices && options.navigator.mediaDevices.getUserMedia):\n        return resolve(options.navigator.mediaDevices.getUserMedia(constraints));\n\n      case _typeof(options.navigator.webkitGetUserMedia):\n        return options.navigator.webkitGetUserMedia(constraints, resolve, reject);\n\n      case _typeof(options.navigator.mozGetUserMedia):\n        return options.navigator.mozGetUserMedia(constraints, resolve, reject);\n\n      case _typeof(options.navigator.getUserMedia):\n        return options.navigator.getUserMedia(constraints, resolve, reject);\n\n      default:\n        throw new NotSupportedError('getUserMedia is not supported');\n    }\n  }).catch(function (e) {\n    throw options.util.isFirefox() && e.name === 'NotReadableError' ? new NotSupportedError('Firefox does not currently support opening multiple audio input tracks' + 'simultaneously, even across different tabs.\\n' + 'Related Bugzilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324') : e;\n  });\n}\n\nmodule.exports = getUserMedia;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","NotSupportedError","require","util","getUserMedia","constraints","options","navigator","Promise","resolve","reject","mediaDevices","webkitGetUserMedia","mozGetUserMedia","catch","e","isFirefox","name","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/twilio-client/es5/twilio/rtc/getusermedia.js"],"sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar NotSupportedError = require('../errors').NotSupportedError;\nvar util = require('../util');\n\nfunction getUserMedia(constraints, options) {\n  options = options || {};\n  options.util = options.util || util;\n  options.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n\n  return new Promise(function (resolve, reject) {\n    if (!options.navigator) {\n      throw new NotSupportedError('getUserMedia is not supported');\n    }\n\n    switch ('function') {\n      case _typeof(options.navigator.mediaDevices && options.navigator.mediaDevices.getUserMedia):\n        return resolve(options.navigator.mediaDevices.getUserMedia(constraints));\n      case _typeof(options.navigator.webkitGetUserMedia):\n        return options.navigator.webkitGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.mozGetUserMedia):\n        return options.navigator.mozGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.getUserMedia):\n        return options.navigator.getUserMedia(constraints, resolve, reject);\n      default:\n        throw new NotSupportedError('getUserMedia is not supported');\n    }\n  }).catch(function (e) {\n    throw options.util.isFirefox() && e.name === 'NotReadableError' ? new NotSupportedError('Firefox does not currently support opening multiple audio input tracks' + 'simultaneously, even across different tabs.\\n' + 'Related Bugzilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324') : e;\n  });\n}\n\nmodule.exports = getUserMedia;"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA3D,GAAsE,UAAUC,GAAV,EAAe;EAAE,OAAO,OAAOA,GAAd;AAAoB,CAA3G,GAA8G,UAAUA,GAAV,EAAe;EAAE,OAAOA,GAAG,IAAI,OAAOF,MAAP,KAAkB,UAAzB,IAAuCE,GAAG,CAACC,WAAJ,KAAoBH,MAA3D,IAAqEE,GAAG,KAAKF,MAAM,CAACI,SAApF,GAAgG,QAAhG,GAA2G,OAAOF,GAAzH;AAA+H,CAA5Q;;AAEA,IAAIG,iBAAiB,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,iBAA7C;;AACA,IAAIE,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AAEA,SAASE,YAAT,CAAsBC,WAAtB,EAAmCC,OAAnC,EAA4C;EAC1CA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACAA,OAAO,CAACH,IAAR,GAAeG,OAAO,CAACH,IAAR,IAAgBA,IAA/B;EACAG,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,KAAsB,OAAOA,SAAP,KAAqB,WAArB,GAAmCA,SAAnC,GAA+C,IAArE,CAApB;EAEA,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5C,IAAI,CAACJ,OAAO,CAACC,SAAb,EAAwB;MACtB,MAAM,IAAIN,iBAAJ,CAAsB,+BAAtB,CAAN;IACD;;IAED,QAAQ,UAAR;MACE,KAAKN,OAAO,CAACW,OAAO,CAACC,SAAR,CAAkBI,YAAlB,IAAkCL,OAAO,CAACC,SAAR,CAAkBI,YAAlB,CAA+BP,YAAlE,CAAZ;QACE,OAAOK,OAAO,CAACH,OAAO,CAACC,SAAR,CAAkBI,YAAlB,CAA+BP,YAA/B,CAA4CC,WAA5C,CAAD,CAAd;;MACF,KAAKV,OAAO,CAACW,OAAO,CAACC,SAAR,CAAkBK,kBAAnB,CAAZ;QACE,OAAON,OAAO,CAACC,SAAR,CAAkBK,kBAAlB,CAAqCP,WAArC,EAAkDI,OAAlD,EAA2DC,MAA3D,CAAP;;MACF,KAAKf,OAAO,CAACW,OAAO,CAACC,SAAR,CAAkBM,eAAnB,CAAZ;QACE,OAAOP,OAAO,CAACC,SAAR,CAAkBM,eAAlB,CAAkCR,WAAlC,EAA+CI,OAA/C,EAAwDC,MAAxD,CAAP;;MACF,KAAKf,OAAO,CAACW,OAAO,CAACC,SAAR,CAAkBH,YAAnB,CAAZ;QACE,OAAOE,OAAO,CAACC,SAAR,CAAkBH,YAAlB,CAA+BC,WAA/B,EAA4CI,OAA5C,EAAqDC,MAArD,CAAP;;MACF;QACE,MAAM,IAAIT,iBAAJ,CAAsB,+BAAtB,CAAN;IAVJ;EAYD,CAjBM,EAiBJa,KAjBI,CAiBE,UAAUC,CAAV,EAAa;IACpB,MAAMT,OAAO,CAACH,IAAR,CAAaa,SAAb,MAA4BD,CAAC,CAACE,IAAF,KAAW,kBAAvC,GAA4D,IAAIhB,iBAAJ,CAAsB,2EAA2E,+CAA3E,GAA6H,+EAAnJ,CAA5D,GAAkSc,CAAxS;EACD,CAnBM,CAAP;AAoBD;;AAEDG,MAAM,CAACC,OAAP,GAAiBf,YAAjB"},"metadata":{},"sourceType":"script"}