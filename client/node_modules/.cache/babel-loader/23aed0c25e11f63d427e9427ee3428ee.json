{"ast":null,"code":"// import * as XLSX from 'xlsx';\n// const readExcel = (file, setItems) => {\n//     const promise = new Promise((resolve, reject) => {\n//         const fileReader = new FileReader();\n//         fileReader.readAsArrayBuffer(file);\n//         fileReader.onload = (e) => {\n//             const bufferArray = e.target.result;\n//             const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n//             const wsname = wb.SheetNames[0];\n//             const ws = wb.Sheets[wsname];\n//             const data = XLSX.utils.sheet_to_json(ws);\n//             resolve(data);\n//     };\n//         fileReader.onerror = (error) => {\n//             reject(error);\n//         };\n//     });\n//     promise.then((d) => {\n//         setItems(d);\n//     });\n// };\nvar funcs = {\n  readExcel: readExcel\n};\nexport default funcs;","map":{"version":3,"names":["funcs","readExcel"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/utils/utils.js"],"sourcesContent":["// import * as XLSX from 'xlsx';\n\n// const readExcel = (file, setItems) => {\n//     const promise = new Promise((resolve, reject) => {\n//         const fileReader = new FileReader();\n//         fileReader.readAsArrayBuffer(file);\n\n//         fileReader.onload = (e) => {\n//             const bufferArray = e.target.result;\n    \n//             const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n    \n//             const wsname = wb.SheetNames[0];\n    \n//             const ws = wb.Sheets[wsname];\n    \n//             const data = XLSX.utils.sheet_to_json(ws);\n\n//             resolve(data);\n//     };\n\n//         fileReader.onerror = (error) => {\n//             reject(error);\n//         };\n//     });\n\n//     promise.then((d) => {\n//         setItems(d);\n//     });\n// };\n\nconst funcs = {\n    readExcel,\n}\n\nexport default funcs;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAG;EACVC,SAAS,EAATA;AADU,CAAd;AAIA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}