{"ast":null,"code":"import { Parameters } from \"./parameters.js\";\n/**\n * Name Address SIP header.\n * @public\n */\n\nexport class NameAddrHeader extends Parameters {\n  /**\n   * Constructor\n   * @param uri -\n   * @param displayName -\n   * @param parameters -\n   */\n  constructor(uri, displayName, parameters) {\n    super(parameters);\n    this.uri = uri;\n    this._displayName = displayName;\n  }\n\n  get friendlyName() {\n    return this.displayName || this.uri.aor;\n  }\n\n  get displayName() {\n    return this._displayName;\n  }\n\n  set displayName(value) {\n    this._displayName = value;\n  }\n\n  clone() {\n    return new NameAddrHeader(this.uri.clone(), this._displayName, JSON.parse(JSON.stringify(this.parameters)));\n  }\n\n  toString() {\n    let body = this.displayName || this.displayName === \"0\" ? '\"' + this.displayName + '\" ' : \"\";\n    body += \"<\" + this.uri.toString() + \">\";\n\n    for (const parameter in this.parameters) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.parameters.hasOwnProperty(parameter)) {\n        body += \";\" + parameter;\n\n        if (this.parameters[parameter] !== null) {\n          body += \"=\" + this.parameters[parameter];\n        }\n      }\n    }\n\n    return body;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}