{"ast":null,"code":"import _regeneratorRuntime from \"/home/david/Desktop/workSpace/bots-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { forwardRef, useState, useEffect, createRef } from 'react';\nimport { makeStyles, colors, Popover, List, ListItem, ListItemText, Paper, InputBase, IconButton, Divider, Grid, Tooltip, Fab, FormControlLabel, Switch, AppBar, Tabs, Tab, Typography, Box, Slider, FormControl, FormGroup, LinearProgress, ListSubheader, fade, Drawer, Snackbar, TextField } from '@material-ui/core';\nimport { Search, MicOff, Mic, PlayArrow, Pause, PhoneForwarded, Transform, CallMerge, SwapCalls, Cancel, Call, CallEnd, Settings, NotificationsOff, NotificationsActive, VolumeOff, VolumeUp, History, CallMade, CallReceived, ChevronLeft, ChevronRight } from '@material-ui/icons';\nimport _ from 'lodash';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Helmet } from 'react-helmet';\nimport { makeStyles as makeStyles$1 } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport SwipeableViews from 'react-swipeable-views';\nimport { DateTime } from 'luxon';\nimport Grid$1 from '@material-ui/core/Grid';\nimport Typography$1 from '@material-ui/core/Typography';\nimport { UA, debug } from 'jssip';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar b = \"function\" === typeof Symbol && Symbol.for,\n    c = b ? Symbol.for(\"react.element\") : 60103,\n    d = b ? Symbol.for(\"react.portal\") : 60106,\n    e = b ? Symbol.for(\"react.fragment\") : 60107,\n    f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n    g = b ? Symbol.for(\"react.profiler\") : 60114,\n    h = b ? Symbol.for(\"react.provider\") : 60109,\n    k = b ? Symbol.for(\"react.context\") : 60110,\n    l = b ? Symbol.for(\"react.async_mode\") : 60111,\n    m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n    p = b ? Symbol.for(\"react.suspense\") : 60113,\n    q = b ? Symbol.for(\"react.suspense_list\") : 60120,\n    r = b ? Symbol.for(\"react.memo\") : 60115,\n    t = b ? Symbol.for(\"react.lazy\") : 60116,\n    v = b ? Symbol.for(\"react.block\") : 60121,\n    w = b ? Symbol.for(\"react.fundamental\") : 60117,\n    x = b ? Symbol.for(\"react.responder\") : 60118,\n    y = b ? Symbol.for(\"react.scope\") : 60119;\n\nfunction z(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case t:\n              case r:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction A(a) {\n  return z(a) === m;\n}\n\nvar AsyncMode = l;\nvar ConcurrentMode = m;\nvar ContextConsumer = k;\nvar ContextProvider = h;\nvar Element = c;\nvar ForwardRef = n;\nvar Fragment = e;\nvar Lazy = t;\nvar Memo = r;\nvar Portal = d;\nvar Profiler = g;\nvar StrictMode = f;\nvar Suspense = p;\n\nvar isAsyncMode = function (a) {\n  return A(a) || z(a) === l;\n};\n\nvar isConcurrentMode = A;\n\nvar isContextConsumer = function (a) {\n  return z(a) === k;\n};\n\nvar isContextProvider = function (a) {\n  return z(a) === h;\n};\n\nvar isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nvar isForwardRef = function (a) {\n  return z(a) === n;\n};\n\nvar isFragment = function (a) {\n  return z(a) === e;\n};\n\nvar isLazy = function (a) {\n  return z(a) === t;\n};\n\nvar isMemo = function (a) {\n  return z(a) === r;\n};\n\nvar isPortal = function (a) {\n  return z(a) === d;\n};\n\nvar isProfiler = function (a) {\n  return z(a) === g;\n};\n\nvar isStrictMode = function (a) {\n  return z(a) === f;\n};\n\nvar isSuspense = function (a) {\n  return z(a) === p;\n};\n\nvar isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n};\n\nvar typeOf = z;\nvar reactIs_production_min = {\n  AsyncMode: AsyncMode,\n  ConcurrentMode: ConcurrentMode,\n  ContextConsumer: ContextConsumer,\n  ContextProvider: ContextProvider,\n  Element: Element,\n  ForwardRef: ForwardRef,\n  Fragment: Fragment,\n  Lazy: Lazy,\n  Memo: Memo,\n  Portal: Portal,\n  Profiler: Profiler,\n  StrictMode: StrictMode,\n  Suspense: Suspense,\n  isAsyncMode: isAsyncMode,\n  isConcurrentMode: isConcurrentMode,\n  isContextConsumer: isContextConsumer,\n  isContextProvider: isContextProvider,\n  isElement: isElement,\n  isForwardRef: isForwardRef,\n  isFragment: isFragment,\n  isLazy: isLazy,\n  isMemo: isMemo,\n  isPortal: isPortal,\n  isProfiler: isProfiler,\n  isStrictMode: isStrictMode,\n  isSuspense: isSuspense,\n  isValidElementType: isValidElementType,\n  typeOf: typeOf\n};\nvar reactIs_development = createCommonjsModule(function (module, exports) {\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n      // nor polyfill, then a plain number is used for performance.\n      var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n      // (unstable) APIs that have been removed. Can we remove the symbols?\n\n      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\n      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\n      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\n      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\n      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\n      function isValidElementType(type) {\n        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n      }\n\n      function typeOf(object) {\n        if (typeof object === 'object' && object !== null) {\n          var $$typeof = object.$$typeof;\n\n          switch ($$typeof) {\n            case REACT_ELEMENT_TYPE:\n              var type = object.type;\n\n              switch (type) {\n                case REACT_ASYNC_MODE_TYPE:\n                case REACT_CONCURRENT_MODE_TYPE:\n                case REACT_FRAGMENT_TYPE:\n                case REACT_PROFILER_TYPE:\n                case REACT_STRICT_MODE_TYPE:\n                case REACT_SUSPENSE_TYPE:\n                  return type;\n\n                default:\n                  var $$typeofType = type && type.$$typeof;\n\n                  switch ($$typeofType) {\n                    case REACT_CONTEXT_TYPE:\n                    case REACT_FORWARD_REF_TYPE:\n                    case REACT_LAZY_TYPE:\n                    case REACT_MEMO_TYPE:\n                    case REACT_PROVIDER_TYPE:\n                      return $$typeofType;\n\n                    default:\n                      return $$typeof;\n                  }\n\n              }\n\n            case REACT_PORTAL_TYPE:\n              return $$typeof;\n          }\n        }\n\n        return undefined;\n      } // AsyncMode is deprecated along with isAsyncMode\n\n\n      var AsyncMode = REACT_ASYNC_MODE_TYPE;\n      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n      var ContextConsumer = REACT_CONTEXT_TYPE;\n      var ContextProvider = REACT_PROVIDER_TYPE;\n      var Element = REACT_ELEMENT_TYPE;\n      var ForwardRef = REACT_FORWARD_REF_TYPE;\n      var Fragment = REACT_FRAGMENT_TYPE;\n      var Lazy = REACT_LAZY_TYPE;\n      var Memo = REACT_MEMO_TYPE;\n      var Portal = REACT_PORTAL_TYPE;\n      var Profiler = REACT_PROFILER_TYPE;\n      var StrictMode = REACT_STRICT_MODE_TYPE;\n      var Suspense = REACT_SUSPENSE_TYPE;\n      var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n      function isAsyncMode(object) {\n        {\n          if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n          }\n        }\n        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n      }\n\n      function isConcurrentMode(object) {\n        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n      }\n\n      function isContextConsumer(object) {\n        return typeOf(object) === REACT_CONTEXT_TYPE;\n      }\n\n      function isContextProvider(object) {\n        return typeOf(object) === REACT_PROVIDER_TYPE;\n      }\n\n      function isElement(object) {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }\n\n      function isForwardRef(object) {\n        return typeOf(object) === REACT_FORWARD_REF_TYPE;\n      }\n\n      function isFragment(object) {\n        return typeOf(object) === REACT_FRAGMENT_TYPE;\n      }\n\n      function isLazy(object) {\n        return typeOf(object) === REACT_LAZY_TYPE;\n      }\n\n      function isMemo(object) {\n        return typeOf(object) === REACT_MEMO_TYPE;\n      }\n\n      function isPortal(object) {\n        return typeOf(object) === REACT_PORTAL_TYPE;\n      }\n\n      function isProfiler(object) {\n        return typeOf(object) === REACT_PROFILER_TYPE;\n      }\n\n      function isStrictMode(object) {\n        return typeOf(object) === REACT_STRICT_MODE_TYPE;\n      }\n\n      function isSuspense(object) {\n        return typeOf(object) === REACT_SUSPENSE_TYPE;\n      }\n\n      exports.AsyncMode = AsyncMode;\n      exports.ConcurrentMode = ConcurrentMode;\n      exports.ContextConsumer = ContextConsumer;\n      exports.ContextProvider = ContextProvider;\n      exports.Element = Element;\n      exports.ForwardRef = ForwardRef;\n      exports.Fragment = Fragment;\n      exports.Lazy = Lazy;\n      exports.Memo = Memo;\n      exports.Portal = Portal;\n      exports.Profiler = Profiler;\n      exports.StrictMode = StrictMode;\n      exports.Suspense = Suspense;\n      exports.isAsyncMode = isAsyncMode;\n      exports.isConcurrentMode = isConcurrentMode;\n      exports.isContextConsumer = isContextConsumer;\n      exports.isContextProvider = isContextProvider;\n      exports.isElement = isElement;\n      exports.isForwardRef = isForwardRef;\n      exports.isFragment = isFragment;\n      exports.isLazy = isLazy;\n      exports.isMemo = isMemo;\n      exports.isPortal = isPortal;\n      exports.isProfiler = isProfiler;\n      exports.isStrictMode = isStrictMode;\n      exports.isSuspense = isSuspense;\n      exports.isValidElementType = isValidElementType;\n      exports.typeOf = typeOf;\n    })();\n  }\n});\nvar reactIs_development_1 = reactIs_development.AsyncMode;\nvar reactIs_development_2 = reactIs_development.ConcurrentMode;\nvar reactIs_development_3 = reactIs_development.ContextConsumer;\nvar reactIs_development_4 = reactIs_development.ContextProvider;\nvar reactIs_development_5 = reactIs_development.Element;\nvar reactIs_development_6 = reactIs_development.ForwardRef;\nvar reactIs_development_7 = reactIs_development.Fragment;\nvar reactIs_development_8 = reactIs_development.Lazy;\nvar reactIs_development_9 = reactIs_development.Memo;\nvar reactIs_development_10 = reactIs_development.Portal;\nvar reactIs_development_11 = reactIs_development.Profiler;\nvar reactIs_development_12 = reactIs_development.StrictMode;\nvar reactIs_development_13 = reactIs_development.Suspense;\nvar reactIs_development_14 = reactIs_development.isAsyncMode;\nvar reactIs_development_15 = reactIs_development.isConcurrentMode;\nvar reactIs_development_16 = reactIs_development.isContextConsumer;\nvar reactIs_development_17 = reactIs_development.isContextProvider;\nvar reactIs_development_18 = reactIs_development.isElement;\nvar reactIs_development_19 = reactIs_development.isForwardRef;\nvar reactIs_development_20 = reactIs_development.isFragment;\nvar reactIs_development_21 = reactIs_development.isLazy;\nvar reactIs_development_22 = reactIs_development.isMemo;\nvar reactIs_development_23 = reactIs_development.isPortal;\nvar reactIs_development_24 = reactIs_development.isProfiler;\nvar reactIs_development_25 = reactIs_development.isStrictMode;\nvar reactIs_development_26 = reactIs_development.isSuspense;\nvar reactIs_development_27 = reactIs_development.isValidElementType;\nvar reactIs_development_28 = reactIs_development.typeOf;\nvar reactIs = createCommonjsModule(function (module) {\n  if (process.env.NODE_ENV === 'production') {\n    module.exports = reactIs_production_min;\n  } else {\n    module.exports = reactIs_development;\n  }\n});\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\nvar printWarning = function () {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function (text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\n\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n        } catch (ex) {\n          error = ex;\n        }\n\n        if (error && !(error instanceof Error)) {\n          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n        }\n\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          var stack = getStack ? getStack() : '';\n          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n        }\n      }\n    }\n  }\n}\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\n\n\ncheckPropTypes.resetWarningCache = function () {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n};\n\nvar checkPropTypes_1 = checkPropTypes;\nvar has$1 = Function.call.bind(Object.prototype.hasOwnProperty);\n\nvar printWarning$1 = function () {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning$1 = function (text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nvar factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n\n  var ANONYMOUS = '<<anonymous>>'; // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n\n  /*eslint-disable no-self-compare*/\n\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n\n\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  } // Make `instanceof Error` still work for returned errors.\n\n\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret_1) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n\n          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n          manualPropTypeWarningCount < 3) {\n            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!reactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n        } else {\n          printWarning$1('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n\n        if (type === 'symbol') {\n          return String(value);\n        }\n\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (has$1(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n\n      if (typeof checker !== 'function') {\n        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          continue;\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      } // We need to check all keys in case some are required but missing from\n      // props.\n\n\n      var allKeys = objectAssign({}, props[propName], shapeTypes);\n\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    } // falsy value can't be a Symbol\n\n\n    if (!propValue) {\n      return false;\n    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  } // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n\n\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  } // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n\n\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n\n      default:\n        return type;\n    }\n  } // Returns class name of the object, if any.\n\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nvar factoryWithThrowingShims = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret_1) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  } // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n\nvar propTypes = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  if (process.env.NODE_ENV !== 'production') {\n    var ReactIs = reactIs; // By explicitly using `prop-types` you are opting into new development behavior.\n    // http://fb.me/prop-types-in-prod\n\n    var throwOnDirectAccess = true;\n    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);\n  } else {\n    // By explicitly using `prop-types` you are opting into new production behavior.\n    // http://fb.me/prop-types-in-prod\n    module.exports = factoryWithThrowingShims();\n  }\n});\nvar Page = forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(Helmet, null, /*#__PURE__*/React.createElement(\"title\", null, title)), children);\n});\nPage.propTypes = {\n  children: propTypes.node,\n  title: propTypes.string\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'inline-block',\n      borderRadius: '50%',\n      flexGrow: 0,\n      flexShrink: 0\n    },\n    small: {\n      height: theme.spacing(1),\n      width: theme.spacing(1)\n    },\n    medium: {\n      height: theme.spacing(2),\n      width: theme.spacing(2)\n    },\n    large: {\n      height: theme.spacing(3),\n      width: theme.spacing(3)\n    },\n    offline: {\n      backgroundColor: colors.grey[50]\n    },\n    away: {\n      backgroundColor: colors.orange[600]\n    },\n    busy: {\n      backgroundColor: colors.red[600]\n    },\n    online: {\n      backgroundColor: colors.green[600]\n    }\n  };\n});\n\nfunction OnlineIndicator(_ref) {\n  var _clsx;\n\n  var className = _ref.className,\n      size = _ref.size,\n      status = _ref.status,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"size\", \"status\"]);\n\n  var classes = useStyles();\n  var rootClassName = clsx((_clsx = {}, _defineProperty(_clsx, classes.root, true), _defineProperty(_clsx, classes[size], size), _defineProperty(_clsx, classes[status], status), _clsx), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: rootClassName\n  }, rest));\n}\n\nOnlineIndicator.propTypes = {\n  className: propTypes.string,\n  size: propTypes.oneOf(['small', 'medium', 'large']),\n  status: propTypes.oneOf(['online', 'offline', 'away', 'busy'])\n};\nOnlineIndicator.defaultProps = {\n  size: 'medium',\n  status: 'offline'\n};\nvar useStyles$1 = makeStyles$1(function (theme) {\n  return {\n    flexBetween: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    status: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: '0 0 0 10px'\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: '0 10px'\n    },\n    list: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n});\n\nfunction SearchList(_ref) {\n  var _ref$asteriskAccounts = _ref.asteriskAccounts,\n      asteriskAccounts = _ref$asteriskAccounts === void 0 ? [] : _ref$asteriskAccounts,\n      onClickList = _ref.onClickList,\n      ariaDescribedby = _ref.ariaDescribedby,\n      anchorEl = _ref.anchorEl,\n      setAnchorEl = _ref.setAnchorEl;\n  var classes = useStyles$1();\n\n  var _React$useState = React.useState(asteriskAccounts),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      list = _React$useState2[0],\n      setList = _React$useState2[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputSearch = _useState2[0],\n      setInputSearch = _useState2[1];\n\n  var open = Boolean(anchorEl);\n  var id = open ? \"\".concat(ariaDescribedby) : undefined;\n\n  var handleClose = function handleClose() {\n    return setAnchorEl(null);\n  };\n\n  var handleClick = function handleClick(value) {\n    onClickList(value);\n    setAnchorEl(null);\n  };\n\n  useEffect(function () {\n    var searchedAccounts = asteriskAccounts.filter(function (acc) {\n      return acc.label.toLowerCase().includes(inputSearch.toLowerCase()) || acc.accountId.includes(inputSearch);\n    });\n    setList(searchedAccounts);\n  }, [inputSearch, asteriskAccounts]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open ? /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    onClose: handleClose,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    className: classes.list,\n    \"aria-label\": \"accounts\"\n  }, /*#__PURE__*/React.createElement(ListItem, null, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        padding: '5px'\n      }\n    }, /*#__PURE__*/React.createElement(InputBase, {\n      id: \"inputSearch\",\n      className: classes.input,\n      placeholder: \"Search\",\n      inputProps: {\n        'aria-label': 'search'\n      },\n      onChange: function onChange(event) {\n        return setInputSearch(event.target.value);\n      },\n      defaultValue: inputSearch\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\"\n    }, /*#__PURE__*/React.createElement(Search, null)))\n  })), /*#__PURE__*/React.createElement(Divider, null), list.map(function (account) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: account.accountId,\n      onClick: function onClick() {\n        return handleClick(account.accountId);\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.flexBetween\n      }, account.label, ' ', account.accountId, ' ', /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.status\n      }, /*#__PURE__*/React.createElement(OnlineIndicator, {\n        size: \"small\",\n        status: account.online === 'true' ? 'online' : 'busy'\n      })))\n    }));\n  }))) : null);\n}\n\nSearchList.propTypes = {\n  asteriskAccounts: propTypes.any,\n  onClickList: propTypes.any,\n  ariaDescribedby: propTypes.any,\n  anchorEl: propTypes.any,\n  setAnchorEl: propTypes.any\n};\nvar useStyles$2 = makeStyles$1(function (theme) {\n  return {\n    root: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    },\n    fab: {\n      width: '41px',\n      height: '41px',\n      background: '#f4f6f8'\n    },\n    callButton: {\n      color: 'white',\n      background: '#4ada61',\n      '&:hover': {\n        background: '#94f3a4'\n      }\n    },\n    endCallButton: {\n      color: 'white',\n      background: '#fa1941',\n      '&:hover': {\n        background: '#f8939b'\n      }\n    },\n    pauseIcon: {\n      color: '#263238'\n    },\n    gridRaw: {\n      paddingTop: '27px',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    gridLastRaw: {\n      paddingTop: '12px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    list: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    flexBetween: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    status: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: '0 0 0 10px'\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: '0 10px'\n    }\n  };\n});\n\nfunction KeypadBlock(_ref) {\n  var handleCallAttendedTransfer = _ref.handleCallAttendedTransfer,\n      handleCallTransfer = _ref.handleCallTransfer,\n      handlePressKey = _ref.handlePressKey,\n      handleMicMute = _ref.handleMicMute,\n      handleCall = _ref.handleCall,\n      handleEndCall = _ref.handleEndCall,\n      activeChanel = _ref.activeChanel,\n      _ref$keyVariant = _ref.keyVariant,\n      keyVariant = _ref$keyVariant === void 0 ? 'default' : _ref$keyVariant,\n      handleHold = _ref.handleHold,\n      _ref$asteriskAccounts = _ref.asteriskAccounts,\n      asteriskAccounts = _ref$asteriskAccounts === void 0 ? [] : _ref$asteriskAccounts,\n      dialState = _ref.dialState,\n      setDialState = _ref.setDialState;\n  var classes = useStyles$2();\n  var inCall = activeChanel.inCall,\n      muted = activeChanel.muted,\n      hold = activeChanel.hold,\n      sessionId = activeChanel.sessionId,\n      inAnswer = activeChanel.inAnswer,\n      inAnswerTransfer = activeChanel.inAnswerTransfer,\n      inConference = activeChanel.inConference,\n      inTransfer = activeChanel.inTransfer,\n      transferControl = activeChanel.transferControl,\n      allowTransfer = activeChanel.allowTransfer,\n      allowAttendedTransfer = activeChanel.allowAttendedTransfer;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorElTransfer = _React$useState2[0],\n      setAnchorElTransfer = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorElAttended = _React$useState4[0],\n      setAnchorElAttended = _React$useState4[1];\n\n  var handleClickTransferCall = function handleClickTransferCall(event) {\n    if (dialState.match(/^[0-9]+$/) != null) {\n      handleCallTransfer(dialState);\n      setDialState('');\n      return;\n    }\n\n    setAnchorElTransfer(event.currentTarget);\n  };\n\n  var TransferListClick = function TransferListClick(id) {\n    if (id) {\n      handleCallTransfer(id);\n    }\n  };\n\n  var handleClickAttendedTransfer = function handleClickAttendedTransfer(event) {\n    if (dialState.match(/^[0-9]+$/) != null) {\n      handleCallAttendedTransfer('transfer', {});\n      setDialState('');\n    }\n\n    setAnchorElAttended(event.currentTarget);\n  };\n\n  var AttendedTransferListClick = function AttendedTransferListClick(id) {\n    if (id) {\n      handleCallAttendedTransfer('transfer', id);\n      setDialState('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null, keyVariant === 'default' ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridRaw\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: muted ? 'Unmute mic' : 'Mute mic',\n    disableFocusListener: true,\n    disableTouchListener: true\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: !inCall,\n    value: inCall,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"\",\n    onClick: handleMicMute\n  }, muted ? /*#__PURE__*/React.createElement(MicOff, null) : /*#__PURE__*/React.createElement(Mic, null))))), /*#__PURE__*/React.createElement(Grid, {\n    hidden: true\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      size: \"small\",\n      checked: true,\n      onChange: function onChange() {}\n    }),\n    label: \"Mute\"\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: hold ? 'Resume' : 'Hold',\n    disableFocusListener: true,\n    disableTouchListener: true\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: !inCall || !inAnswer,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: function onClick() {\n      handleHold(sessionId, hold);\n    }\n  }, hold ? /*#__PURE__*/React.createElement(PlayArrow, null) : /*#__PURE__*/React.createElement(Pause, null))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Transfer Call\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: !inCall || !inAnswer || hold || !allowAttendedTransfer,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: handleClickTransferCall,\n    \"aria-describedby\": \"transferredBox\"\n  }, /*#__PURE__*/React.createElement(PhoneForwarded, null)))), /*#__PURE__*/React.createElement(SearchList, {\n    asteriskAccounts: asteriskAccounts,\n    onClickList: function onClickList(id) {\n      return TransferListClick(id);\n    },\n    ariaDescribedby: \"transferredBox\",\n    anchorEl: anchorElTransfer,\n    setAnchorEl: setAnchorElTransfer\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Attended Transfer\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: !inCall || !inAnswer || hold || !allowTransfer,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: handleClickAttendedTransfer,\n    \"aria-describedby\": \"attendedBox\"\n  }, /*#__PURE__*/React.createElement(Transform, null)))), /*#__PURE__*/React.createElement(SearchList, {\n    asteriskAccounts: asteriskAccounts,\n    onClickList: AttendedTransferListClick,\n    ariaDescribedby: \"attendedBox\",\n    anchorEl: anchorElAttended,\n    setAnchorEl: setAnchorElAttended\n  })), inAnswerTransfer && !inConference && inTransfer && transferControl ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridRaw\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Conference\",\n    \"aria-label\": \"conference\"\n  }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: false,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: function onClick() {\n      handleCallAttendedTransfer('merge', {});\n    }\n  }, /*#__PURE__*/React.createElement(CallMerge, null))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Swap Caller\",\n    \"aria-label\": \"swap-caller\"\n  }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: false,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: function onClick() {\n      handleCallAttendedTransfer('swap', {});\n    }\n  }, /*#__PURE__*/React.createElement(SwapCalls, null))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Pass Call\",\n    \"aria-label\": \"pass-call\"\n  }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: false,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: function onClick() {\n      handleCallAttendedTransfer('finish', {});\n    }\n  }, /*#__PURE__*/React.createElement(PhoneForwarded, null))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Cancel Transfer\",\n    \"aria-label\": \"cancel-transfer\"\n  }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(Fab, {\n    disabled: false,\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: function onClick() {\n      handleCallAttendedTransfer('cancel', {});\n    }\n  }, /*#__PURE__*/React.createElement(Cancel, null)))))) : /*#__PURE__*/React.createElement(\"div\", null)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridLastRaw\n  }, inCall === false ? /*#__PURE__*/React.createElement(Fab, {\n    className: classes.callButton,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: handleCall\n  }, /*#__PURE__*/React.createElement(Call, null)) : /*#__PURE__*/React.createElement(Fab, {\n    size: \"small\",\n    \"aria-label\": \"\",\n    className: classes.endCallButton,\n    onClick: handleEndCall\n  }, /*#__PURE__*/React.createElement(CallEnd, null)))) : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridRaw\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"1\",\n    value: 1,\n    onClick: handlePressKey\n  }, \"1\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"2\",\n    value: 2,\n    onClick: handlePressKey\n  }, \"2\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"3\",\n    value: 3,\n    onClick: handlePressKey\n  }, \"3\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\"\n  }, /*#__PURE__*/React.createElement(Settings, null))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridRaw\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    value: 4,\n    onClick: handlePressKey\n  }, \"4\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"5\",\n    value: 5,\n    onClick: handlePressKey\n  }, \"5\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"6\",\n    value: 6,\n    onClick: handlePressKey\n  }, \"6\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\"\n  }, /*#__PURE__*/React.createElement(Pause, null))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridRaw\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"7\",\n    value: 7,\n    onClick: handlePressKey\n  }, \"7\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"8\",\n    value: 8,\n    onClick: handlePressKey\n  }, \"8\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"9\",\n    value: 9,\n    onClick: handlePressKey\n  }, \"9\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"4\"\n  }, /*#__PURE__*/React.createElement(Transform, null))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridRaw\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"*\",\n    value: \"*\",\n    onClick: handlePressKey\n  }, \"*\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"0\",\n    value: 0,\n    onClick: handlePressKey\n  }, \"0\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"#\",\n    value: \"#\",\n    onClick: handlePressKey\n  }, \"#\"), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    size: \"small\",\n    \"aria-label\": \"\"\n  }, /*#__PURE__*/React.createElement(Settings, null))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.gridLastRaw\n  }, inCall === 0 ? /*#__PURE__*/React.createElement(Fab, {\n    className: classes.callButton,\n    size: \"small\",\n    \"aria-label\": \"4\",\n    onClick: handleCall\n  }, /*#__PURE__*/React.createElement(Call, null)) : /*#__PURE__*/React.createElement(Fab, {\n    size: \"small\",\n    \"aria-label\": \"\",\n    className: classes.endCallButton,\n    onClick: handleEndCall\n  }, /*#__PURE__*/React.createElement(CallEnd, null)))));\n}\n\nKeypadBlock.propTypes = {\n  handleCallAttendedTransfer: propTypes.any,\n  handleCallTransfer: propTypes.any,\n  handlePressKey: propTypes.any,\n  handleMicMute: propTypes.any,\n  handleCall: propTypes.any,\n  handleEndCall: propTypes.any,\n  activeChanel: propTypes.any,\n  keyVariant: propTypes.any,\n  handleHold: propTypes.any,\n  asteriskAccounts: propTypes.any,\n  dialState: propTypes.any,\n  setDialState: propTypes.any\n};\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: \"full-width-tab-\".concat(index),\n    'aria-controls': \"full-width-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    tabs: {\n      textTransform: 'none',\n      minWidth: '25%',\n      marginRight: 'auto',\n      // marginRight: theme.spacing(4),\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:hover': {\n        color: '#3949ab',\n        opacity: 1\n      },\n      '&:focus': {\n        color: '#3949ab'\n      }\n    },\n    tabPanelHold: {\n      backgroundColor: '#ff8686'\n    },\n    tabPanelActive: {\n      padding: \"\".concat(theme.spacing(1), \"px \").concat(theme.spacing(3), \"px\"),\n      backgroundColor: '#d0f6bb'\n    },\n    text: {\n      color: 'black'\n    }\n  };\n});\n\nfunction SwipeCaruselBlock(_ref) {\n  var localStatePhone = _ref.localStatePhone,\n      activeChannel = _ref.activeChannel,\n      setActiveChannel = _ref.setActiveChannel;\n  var classes = useStyles$3();\n\n  var _React$useState = React.useState([{\n    duration: 0\n  }, {\n    duration: 0\n  }, {\n    duration: 0\n  }]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      duration = _React$useState2[0],\n      setDuration = _React$useState2[1];\n\n  var _React$useState3 = React.useState([{\n    intrId: 0,\n    active: false\n  }, {\n    intrId: 0,\n    active: false\n  }, {\n    intrId: 0,\n    active: false\n  }]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      intervals = _React$useState4[0],\n      setintervals = _React$useState4[1];\n\n  var displayCalls = localStatePhone.displayCalls;\n\n  var handleTabChangeIndex = function handleTabChangeIndex(index) {\n    setActiveChannel(index);\n  };\n\n  var handleTabChange = function handleTabChange(event, newValue) {\n    setActiveChannel(newValue);\n  };\n\n  displayCalls.map(function (displayCall, key) {\n    // if Call just started then increment duration every one second\n    if (displayCall.inCall === true && displayCall.inAnswer === true && intervals[key].active === false) {\n      var intr = setInterval(function () {\n        setDuration(function (durations) {\n          return _objectSpread2(_objectSpread2({}, durations), {}, _defineProperty({}, key, {\n            duration: durations[key].duration + 1\n          }));\n        });\n      }, 1000);\n      setintervals(function (inter) {\n        return _objectSpread2(_objectSpread2({}, inter), {}, _defineProperty({}, key, {\n          intrId: intr,\n          active: true\n        }));\n      });\n    } // if Call ended  then stop  increment duration every one second\n\n\n    if (displayCall.inCall === false && displayCall.inAnswer === false && intervals[key].active === true) {\n      clearInterval(intervals[key].intrId);\n      setDuration(function (durations) {\n        return _objectSpread2(_objectSpread2({}, durations), {}, _defineProperty({}, key, {\n          duration: 0\n        }));\n      });\n      setintervals(function (inter) {\n        return _objectSpread2(_objectSpread2({}, inter), {}, _defineProperty({}, key, {\n          intrId: 0,\n          active: false\n        }));\n      });\n    }\n\n    return true;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: activeChannel,\n    onChange: handleTabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\"\n  }, /*#__PURE__*/React.createElement(Tab, _extends({\n    className: classes.tabs,\n    label: \"CH 1\"\n  }, a11yProps(0))), /*#__PURE__*/React.createElement(Tab, _extends({\n    className: classes.tabs,\n    label: \"CH 2\"\n  }, a11yProps(1))), /*#__PURE__*/React.createElement(Tab, _extends({\n    className: classes.tabs,\n    label: \"Ch 3\"\n  }, a11yProps(2))))), /*#__PURE__*/React.createElement(SwipeableViews, {\n    axis: \"x\",\n    index: activeChannel,\n    onChangeIndex: handleTabChangeIndex\n  }, displayCalls.map(function (displayCall, key) {\n    return /*#__PURE__*/React.createElement(TabPanel, {\n      key: \"\".concat(displayCall.id, \"-TabPanel\"),\n      className: displayCall.hold ? classes.tabPanelHold : classes.tabPanelActive,\n      value: key,\n      index: displayCall.id\n    }, function () {\n      if (displayCall.inCall === true) {\n        if (displayCall.inAnswer === true) {\n          if (displayCall.hold === true) {\n            return (\n              /*#__PURE__*/\n              // Show hold Call info\n              React.createElement(\"div\", {\n                className: classes.text\n              }, /*#__PURE__*/React.createElement(Typography, null, \"Status:\", ' ', displayCall.callInfo), /*#__PURE__*/React.createElement(Typography, null, \"Duration:\", duration[key].duration), /*#__PURE__*/React.createElement(Typography, null, \"Number:\", displayCall.callNumber), /*#__PURE__*/React.createElement(Typography, null, \"Side:\", displayCall.direction))\n            );\n          }\n\n          if (displayCall.inTransfer === true) {\n            return (\n              /*#__PURE__*/\n              // Show In Transfer info\n              React.createElement(\"div\", {\n                className: classes.text\n              }, /*#__PURE__*/React.createElement(Typography, null, \"Status:\", ' ', displayCall.callInfo), /*#__PURE__*/React.createElement(Typography, null, \"Side:\", displayCall.direction), /*#__PURE__*/React.createElement(Typography, null, \"Duration:\", duration[key].duration), /*#__PURE__*/React.createElement(Typography, null, \"Number:\", ' ', displayCall.callNumber), /*#__PURE__*/React.createElement(Typography, null, \"Transfer to :\", ' ', displayCall.transferNumber), /*#__PURE__*/React.createElement(Typography, null, displayCall.attendedTransferOnline.length > 1 && !displayCall.inConference ? /*#__PURE__*/React.createElement(\"span\", null, 'Talking with :', ' ', displayCall.attendedTransferOnline) : null))\n            );\n          }\n\n          return (\n            /*#__PURE__*/\n            // Show In Call info\n            React.createElement(\"div\", {\n              className: classes.text\n            }, /*#__PURE__*/React.createElement(Typography, null, \"Status:\", displayCall.callInfo), /*#__PURE__*/React.createElement(Typography, null, \"Side:\", displayCall.direction), /*#__PURE__*/React.createElement(Typography, null, \"Duration:\", duration[key].duration), /*#__PURE__*/React.createElement(Typography, null, \"Number:\", displayCall.callNumber))\n          );\n        }\n\n        return (\n          /*#__PURE__*/\n          // Show Calling info\n          React.createElement(\"div\", {\n            className: classes.text\n          }, /*#__PURE__*/React.createElement(Typography, null, \"Status:\", ' ', displayCall.callInfo), /*#__PURE__*/React.createElement(Typography, null, \"Side:\", ' ', displayCall.direction), /*#__PURE__*/React.createElement(Typography, null, \"Number:\", ' ', displayCall.callNumber))\n        );\n      }\n\n      return (\n        /*#__PURE__*/\n        // Show Ready info\n        React.createElement(\"div\", {\n          className: classes.text\n        }, /*#__PURE__*/React.createElement(Typography, null, \"Status:\", ' ', displayCall.callInfo, ' ', displayCall.info))\n      );\n    });\n  })));\n}\n\nSwipeCaruselBlock.propTypes = {\n  localStatePhone: propTypes.any,\n  activeChannel: propTypes.any,\n  setActiveChannel: propTypes.any\n};\nvar useStyles$4 = makeStyles$1(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(0)\n    },\n    sliderIcons: {\n      marginRight: '10px',\n      color: '#546e7a'\n    },\n    tab: {\n      '& .MuiBox-root': {\n        padding: theme.spacing(2)\n      }\n    },\n    form: {\n      margin: 0\n    },\n    label: {\n      margin: 0,\n      padding: '0 8px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '100%'\n    },\n    \"switch\": {\n      marginRight: '-8px'\n    }\n  };\n});\n\nfunction SettingsBlock(_ref) {\n  var localStatePhone = _ref.localStatePhone,\n      handleConnectPhone = _ref.handleConnectPhone,\n      handleConnectOnStart = _ref.handleConnectOnStart,\n      handleNotifications = _ref.handleNotifications,\n      handleSettingsSlider = _ref.handleSettingsSlider;\n  var classes = useStyles$4();\n  var connectedPhone = localStatePhone.connectedPhone,\n      connectingPhone = localStatePhone.connectingPhone,\n      phoneConnectOnStart = localStatePhone.phoneConnectOnStart,\n      notifications = localStatePhone.notifications,\n      ringVolume = localStatePhone.ringVolume,\n      callVolume = localStatePhone.callVolume;\n\n  var _React$useState = React.useState({\n    ringVolume: ringVolume,\n    callVolume: callVolume\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sliderValue = _React$useState2[0],\n      setSliderValue = _React$useState2[1];\n\n  var handleSettingsSliderState = function handleSettingsSliderState(name) {\n    return function (e, newValue) {\n      setSliderValue(function (prevState) {\n        return _objectSpread2(_objectSpread2({}, prevState), {}, _defineProperty({}, name, newValue));\n      });\n      handleSettingsSlider(name, newValue);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    style: {\n      margin: '8px 16px 8px 8px'\n    }\n  }, sliderValue.ringVolume === 0 ? /*#__PURE__*/React.createElement(NotificationsOff, {\n    className: classes.sliderIcons\n  }) : /*#__PURE__*/React.createElement(NotificationsActive, {\n    className: classes.sliderIcons\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: sliderValue.ringVolume,\n    onChange: handleSettingsSliderState('ringVolume'),\n    \"aria-labelledby\": \"continuous-slider\",\n    style: {\n      width: 'calc(100% - 34px)'\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    style: {\n      margin: '8px 16px 8px 8px'\n    }\n  }, sliderValue.callVolume === 0 ? /*#__PURE__*/React.createElement(VolumeOff, {\n    className: classes.sliderIcons\n  }) : /*#__PURE__*/React.createElement(VolumeUp, {\n    className: classes.sliderIcons\n  }), /*#__PURE__*/React.createElement(Slider, {\n    value: sliderValue.callVolume,\n    onChange: handleSettingsSliderState('callVolume'),\n    \"aria-labelledby\": \"continuous-slider\",\n    style: {\n      width: 'calc(100% - 34px)'\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.form\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    \"aria-label\": \"position\",\n    row: true\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"top\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: classes[\"switch\"],\n      checked: notifications,\n      color: \"primary\",\n      onChange: handleNotifications\n    }),\n    label: \"Notifications\",\n    labelPlacement: \"start\",\n    className: classes.label\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"top\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: classes[\"switch\"],\n      checked: phoneConnectOnStart,\n      color: \"primary\",\n      onChange: handleConnectOnStart\n    }),\n    label: \"Auto Connect\",\n    labelPlacement: \"start\",\n    className: classes.label\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"top\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      className: classes[\"switch\"],\n      disabled: connectingPhone,\n      checked: connectedPhone,\n      color: \"primary\",\n      onChange: handleConnectPhone\n    }),\n    label: connectedPhone ? 'Disconnect' : 'Connect',\n    labelPlacement: \"start\",\n    className: classes.label\n  })), connectingPhone ? /*#__PURE__*/React.createElement(LinearProgress, null) : '')));\n}\n\nSettingsBlock.propTypes = {\n  localStatePhone: propTypes.any,\n  handleConnectPhone: propTypes.any,\n  handleConnectOnStart: propTypes.any,\n  handleSettingsSlider: propTypes.any,\n  handleNotifications: propTypes.any\n};\n\nfunction TabPanel$1(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3\n  }, children));\n}\n\nfunction a11yProps$1(index) {\n  return {\n    id: \"full-width-tab-\".concat(index),\n    'aria-controls': \"full-width-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles$5 = makeStyles(function (theme) {\n  return {\n    tabs: {\n      textTransform: 'none',\n      minWidth: '25%',\n      marginRight: 'auto',\n      // marginRight: theme.spacing(4),\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:hover': {\n        color: '#3949ab',\n        opacity: 1\n      },\n      '&:focus': {\n        color: '#3949ab'\n      }\n    },\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n      position: 'relative',\n      overflow: 'auto',\n      maxHeight: 300,\n      padding: 0\n    },\n    listSection: {\n      backgroundColor: 'inherit'\n    },\n    ul: {\n      backgroundColor: 'inherit',\n      padding: 0\n    },\n    tab: {\n      '& .MuiBox-root': {\n        padding: theme.spacing(2)\n      }\n    }\n  };\n});\n\nfunction SwipeCaruselBodyBlock(_ref) {\n  var calls = _ref.calls,\n      localStatePhone = _ref.localStatePhone,\n      handleConnectPhone = _ref.handleConnectPhone,\n      handleSettingsSlider = _ref.handleSettingsSlider,\n      handleConnectOnStart = _ref.handleConnectOnStart,\n      handleNotifications = _ref.handleNotifications,\n      timelocale = _ref.timelocale;\n  var classes = useStyles$5();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\"\n  }, /*#__PURE__*/React.createElement(Tab, _extends({\n    className: classes.tabs,\n    icon: /*#__PURE__*/React.createElement(Settings, null),\n    label: \"Settings\"\n  }, a11yProps$1(0))), /*#__PURE__*/React.createElement(Tab, _extends({\n    className: classes.tabs,\n    icon: /*#__PURE__*/React.createElement(History, null),\n    label: \"History\"\n  }, a11yProps$1(1))))), /*#__PURE__*/React.createElement(TabPanel$1, {\n    value: value,\n    index: 0,\n    classes: {\n      root: classes.tab\n    }\n  }, /*#__PURE__*/React.createElement(SettingsBlock, {\n    localStatePhone: localStatePhone,\n    handleConnectPhone: handleConnectPhone,\n    handleSettingsSlider: handleSettingsSlider,\n    handleConnectOnStart: handleConnectOnStart,\n    handleNotifications: handleNotifications\n  })), /*#__PURE__*/React.createElement(TabPanel$1, {\n    value: value,\n    index: 1,\n    classes: {\n      root: classes.tab\n    }\n  }, calls.length === 0 ? 'No Calls' : /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    subheader: /*#__PURE__*/React.createElement(\"li\", null)\n  }, calls.map(function (_ref2) {\n    var sessionId = _ref2.sessionId,\n        direction = _ref2.direction,\n        number = _ref2.number,\n        time = _ref2.time,\n        status = _ref2.status;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"section-\".concat(sessionId),\n      className: classes.listSection\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.ul\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      style: {\n        color: status === 'missed' ? 'red' : 'green',\n        fontSize: number.length > 11 ? '0.55rem' : '0.675rem',\n        lineHeight: '20px',\n        padding: 0,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        flexDirection: 'unset'\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", null, \"\".concat(number), ' ', direction === 'outgoing' ? /*#__PURE__*/React.createElement(CallMade, {\n      style: {\n        fontSize: number.length > 11 ? '0.55rem' : '0.675rem'\n      }\n    }) : /*#__PURE__*/React.createElement(CallReceived, {\n      style: {\n        fontSize: number.length > 11 ? '0.55rem' : '0.675rem'\n      }\n    })), DateTime.fromISO(time.toISOString()).setZone(timelocale).toString()), /*#__PURE__*/React.createElement(Divider, null)));\n  }))));\n}\n\nSwipeCaruselBodyBlock.propTypes = {\n  calls: propTypes.any,\n  localStatePhone: propTypes.any,\n  handleConnectPhone: propTypes.any,\n  handleSettingsSlider: propTypes.any,\n  handleConnectOnStart: propTypes.any,\n  handleNotifications: propTypes.any,\n  callVolume: propTypes.any,\n  timelocale: propTypes.any\n};\nTabPanel$1.propTypes = {\n  props: propTypes.any\n};\nvar useStyles$6 = makeStyles(function (theme) {\n  return {\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      alignItems: 'center',\n      borderRadius: 2,\n      display: 'inline-flex',\n      flexGrow: 0,\n      whiteSpace: 'nowrap',\n      cursor: 'default',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightMedium,\n      height: 20,\n      justifyContent: 'center',\n      letterSpacing: 0.5,\n      minWidth: 20,\n      padding: theme.spacing(0.5, 1),\n      textTransform: 'uppercase'\n    },\n    primary: {\n      color: theme.palette.primary.main,\n      backgroundColor: fade(theme.palette.primary.main, 0.08)\n    },\n    secondary: {\n      color: theme.palette.secondary.main,\n      backgroundColor: fade(theme.palette.secondary.main, 0.08)\n    },\n    error: {\n      color: theme.palette.error.main,\n      backgroundColor: fade(theme.palette.error.main, 0.08)\n    },\n    success: {\n      color: theme.palette.success.main,\n      backgroundColor: fade(theme.palette.success.main, 0.08)\n    },\n    warning: {\n      color: theme.palette.warning.main,\n      backgroundColor: fade(theme.palette.warning.main, 0.08)\n    }\n  };\n});\n\nfunction Label(_ref) {\n  var className = _ref.className,\n      color = _ref.color,\n      children = _ref.children,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"color\", \"children\", \"style\"]);\n\n  var classes = useStyles$6();\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, _defineProperty({}, classes[color], color), className)\n  }, rest), children);\n}\n\nLabel.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n  style: propTypes.object,\n  color: propTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\nvar useStyles$7 = makeStyles$1(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(3)\n    },\n    online: {\n      color: 'green',\n      backgroundColor: '#d0f6bb'\n    },\n    offline: {\n      color: 'red',\n      backgroundColor: '#f6bbbb'\n    }\n  };\n});\n\nfunction StatusBlock(_ref) {\n  var connectingPhone = _ref.connectingPhone,\n      connectedPhone = _ref.connectedPhone;\n  var classes = useStyles$7();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root\n  }, /*#__PURE__*/React.createElement(Grid$1, {\n    container: true,\n    spacing: 2\n  }, /*#__PURE__*/React.createElement(Grid$1, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    style: {\n      flexGrow: 0,\n      maxWidth: '50%',\n      flexBasis: '50%'\n    }\n  }, /*#__PURE__*/React.createElement(Typography$1, {\n    id: \"continuous-slider\"\n  }, \"STATUS\")), /*#__PURE__*/React.createElement(Grid$1, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    style: {\n      flexGrow: 0,\n      maxWidth: '50%',\n      flexBasis: '50%'\n    }\n  }, !connectingPhone ? connectedPhone ? /*#__PURE__*/React.createElement(Label, {\n    className: classes.online,\n    color: \"primary\"\n  }, \"ONLINE\") : /*#__PURE__*/React.createElement(Label, {\n    className: classes.offline,\n    color: \"primary\"\n  }, \"OFFLINE\") : !connectedPhone ? /*#__PURE__*/React.createElement(Label, {\n    className: classes.online,\n    color: \"primary\"\n  }, \"CONNECTING\") : /*#__PURE__*/React.createElement(Label, {\n    className: classes.offline,\n    color: \"primary\"\n  }, \"DISCONNECTING\"))));\n}\n\nStatusBlock.propTypes = {\n  connectingPhone: propTypes.any,\n  connectedPhone: propTypes.any\n};\nvar useStyles$8 = makeStyles$1(function (theme) {\n  return {\n    root: {\n      alignItems: 'center',\n      width: '100%'\n    },\n    answer: {\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.success.main,\n      '&:hover': {\n        backgroundColor: theme.palette.success.dark\n      },\n      fontSize: 9,\n      alignItems: 'center'\n    },\n    reject: {\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.dark\n      },\n      fontSize: 9\n    },\n    wrapper: {\n      background: '#fff',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: '16px'\n    },\n    callButton: {\n      color: 'white',\n      background: '#4ada61',\n      '&:hover': {\n        background: '#94f3a4'\n      }\n    },\n    endCallButton: {\n      color: 'white',\n      background: '#fa1941',\n      '&:hover': {\n        background: '#f8939b'\n      }\n    },\n    '@keyframes ringing': {\n      '0%': {\n        transform: 'translate(0, 0)'\n      },\n      '10%': {\n        transform: 'translate(4px, 0px)'\n      },\n      '20%': {\n        transform: 'translate(-4px, 0px)'\n      },\n      '30%': {\n        transform: 'translate(3px, 0px)'\n      },\n      '40%': {\n        transform: 'translate(-3px, 0px)'\n      },\n      '50%': {\n        transform: 'translate(2px, 0px)'\n      },\n      '60%': {\n        transform: 'translate(0, 0)'\n      },\n      '100%': {\n        transform: 'translate(0, 0)'\n      }\n    },\n    ringing: {\n      animation: '$ringing .6s infinite'\n    }\n  };\n});\n\nfunction CallQueue(_ref) {\n  var calls = _ref.calls,\n      handleAnswer = _ref.handleAnswer,\n      handleReject = _ref.handleReject;\n  var classes = useStyles$8();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root\n  }, calls.map(function (call) {\n    var parsedCaller = call.callNumber.split('-');\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.wrapper,\n      key: call.sessionId\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12\n    }, parsedCaller[0] ? /*#__PURE__*/React.createElement(Box, {\n      overflow: \"auto\",\n      component: \"div\",\n      whiteSpace: \"normal\",\n      bgcolor: \"background.paper\"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\"\n    }, \"Caller:\", parsedCaller[0])) : /*#__PURE__*/React.createElement(\"div\", null), parsedCaller[1] ? /*#__PURE__*/React.createElement(Box, {\n      overflow: \"auto\",\n      component: \"div\",\n      whiteSpace: \"normal\",\n      bgcolor: \"background.paper\"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\"\n    }, \"Jurisdiction:\", parsedCaller[1])) : /*#__PURE__*/React.createElement(\"div\", null), parsedCaller[2] ? /*#__PURE__*/React.createElement(Box, {\n      overflow: \"auto\",\n      component: \"div\",\n      whiteSpace: \"normal\",\n      bgcolor: \"background.paper\"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\"\n    }, \"To Number:\", parsedCaller[2])) : /*#__PURE__*/React.createElement(\"div\", null)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper\n    }, /*#__PURE__*/React.createElement(Fab, {\n      className: classes.callButton,\n      size: \"small\",\n      onClick: handleAnswer,\n      value: call.sessionId\n    }, /*#__PURE__*/React.createElement(Call, {\n      className: classes.ringing\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper\n    }, /*#__PURE__*/React.createElement(Fab, {\n      size: \"small\",\n      className: classes.endCallButton,\n      onClick: handleReject,\n      value: call.sessionId\n    }, /*#__PURE__*/React.createElement(CallEnd, null)))));\n  }));\n}\n\nfunction CallsFlowControl() {\n  var _this = this;\n\n  this.onUserAgentAction = function () {};\n\n  this.notify = function (message) {\n    _this.onCallActionConnection('notify', message);\n  };\n\n  this.tmpEvent = function () {\n    console.log(_this.activeCall);\n    console.log(_this.callsQueue);\n    console.log(_this.holdCallsQueue);\n  };\n\n  this.onCallActionConnection = function () {};\n\n  this.engineEvent = function () {};\n\n  this.setMicMuted = function () {\n    if (_this.micMuted && _this.activeCall) {\n      _this.activeCall.unmute();\n\n      _this.micMuted = false;\n\n      _this.onCallActionConnection('unmute', _this.activeCall.id);\n    } else if (!_this.micMuted && _this.activeCall) {\n      _this.micMuted = true;\n\n      _this.activeCall.mute();\n\n      _this.onCallActionConnection('mute', _this.activeCall.id);\n    }\n  };\n\n  this.hold = function (sessionId) {\n    // If there is an active call with id that is requested then fire hold\n    if (_this.activeCall.id === sessionId) {\n      _this.activeCall.hold();\n    }\n  };\n\n  this.unhold = function (sessionId) {\n    // If we dont have active call then unhold the the call with requested id\n    if (!_this.activeCall) {\n      // Find the Requested call in hold calls array\n      var toUnhold = _.find(_this.holdCallsQueue, {\n        id: sessionId\n      }); // If we found the call in hold calls array the fire unhold function\n\n\n      if (toUnhold) {\n        toUnhold.unhold();\n      }\n    } else {\n      console.log('Please exit from all active calls to unhold');\n    }\n  };\n\n  this.micMuted = false;\n  this.activeCall = null;\n  this.activeChanel = null;\n  this.callsQueue = [];\n  this.holdCallsQueue = [];\n  this.player = {};\n  this.ringer = null;\n  this.connectedPhone = null;\n  this.config = {};\n  this.initiated = false;\n\n  this.playRing = function () {\n    _this.ringer.current.currentTime = 0;\n\n    _this.ringer.current.play();\n  };\n\n  this.stopRing = function () {\n    _this.ringer.current.currentTime = 0;\n\n    _this.ringer.current.pause();\n  };\n\n  this.removeCallFromQueue = function (callId) {\n    _.remove(_this.callsQueue, function (calls) {\n      return calls.id === callId;\n    });\n  };\n\n  this.addCallToHoldQueue = function (callId) {\n    if (_this.activeCall.id === callId) {\n      _this.holdCallsQueue.push(_this.activeCall);\n    }\n  };\n\n  this.removeCallFromActiveCall = function (callId) {\n    if (_this.activeCall && callId === _this.activeCall.id) {\n      _this.activeCall = null;\n    }\n  };\n\n  this.removeCallFromHoldQueue = function (callId) {\n    _.remove(_this.holdCallsQueue, function (calls) {\n      return calls.id === callId;\n    });\n  };\n\n  this.connectAudio = function () {\n    _this.activeCall.connection.addEventListener('addstream', function (event) {\n      _this.player.current.srcObject = event.stream;\n    });\n  };\n\n  this.sessionEvent = function (type, data, cause, callId) {\n    // console.log(`Session: ${type}`);\n    // console.log('Data: ', data);\n    // console.log('callid: ', callId);\n    switch (type) {\n      case 'terminated':\n        //  this.endCall(data, cause);\n        break;\n\n      case 'accepted':\n        // this.startCall(data);\n        break;\n\n      case 'reinvite':\n        _this.onCallActionConnection('reinvite', callId, data);\n\n        break;\n\n      case 'hold':\n        _this.onCallActionConnection('hold', callId);\n\n        _this.addCallToHoldQueue(callId);\n\n        _this.removeCallFromActiveCall(callId);\n\n        break;\n\n      case 'unhold':\n        _this.onCallActionConnection('unhold', callId);\n\n        _this.activeCall = _.find(_this.holdCallsQueue, {\n          id: callId\n        });\n\n        _this.removeCallFromHoldQueue(callId);\n\n        break;\n\n      case 'dtmf':\n        break;\n\n      case 'muted':\n        _this.onCallActionConnection('muted', callId);\n\n        break;\n\n      case 'unmuted':\n        break;\n\n      case 'confirmed':\n        if (!_this.activeCall) {\n          _this.activeCall = _.find(_this.callsQueue, {\n            id: callId\n          });\n        }\n\n        _this.removeCallFromQueue(callId);\n\n        _this.onCallActionConnection('callAccepted', callId, _this.activeCall);\n\n        break;\n\n      case 'connecting':\n        break;\n\n      case 'ended':\n        _this.onCallActionConnection('callEnded', callId);\n\n        _this.removeCallFromQueue(callId);\n\n        _this.removeCallFromActiveCall(callId);\n\n        _this.removeCallFromHoldQueue(callId);\n\n        if (_this.callsQueue.length === 0) {\n          _this.stopRing();\n        }\n\n        break;\n\n      case 'failed':\n        _this.onCallActionConnection('callEnded', callId);\n\n        _this.removeCallFromQueue(callId);\n\n        _this.removeCallFromActiveCall(callId);\n\n        if (_this.callsQueue.length === 0) {\n          _this.stopRing();\n        }\n\n        break;\n    }\n  };\n\n  this.handleNewRTCSession = function (rtcPayload) {\n    var call = rtcPayload.session;\n\n    if (call.direction === 'incoming') {\n      _this.callsQueue.push(call);\n\n      _this.onCallActionConnection('incomingCall', call);\n\n      if (!_this.activeCall) {\n        _this.playRing();\n      }\n    } else {\n      _this.activeCall = call;\n\n      _this.onCallActionConnection('outgoingCall', call);\n\n      _this.connectAudio();\n    }\n\n    var defaultCallEventsToHandle = ['peerconnection', 'connecting', 'sending', 'progress', 'accepted', 'newDTMF', 'newInfo', 'hold', 'unhold', 'muted', 'unmuted', 'reinvite', 'update', 'refer', 'replaces', 'sdp', 'icecandidate', 'getusermediafailed', 'ended', 'failed', 'connecting', 'confirmed'];\n\n    _.forEach(defaultCallEventsToHandle, function (eventType) {\n      call.on(eventType, function (data, cause) {\n        _this.sessionEvent(eventType, data, cause, call.id);\n      });\n    });\n  };\n\n  this.init = function () {\n    try {\n      _this.phone = new UA(_this.config);\n\n      _this.phone.on('newRTCSession', _this.handleNewRTCSession.bind(_this));\n\n      var binds = ['connected', 'disconnected', 'registered', 'unregistered', 'registrationFailed', 'invite', 'message', 'connecting'];\n\n      _.forEach(binds, function (value) {\n        _this.phone.on(value, function (e) {\n          _this.engineEvent(value, e);\n        });\n      });\n\n      _this.initiated = true;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  this.call = function (to) {\n    if (!_this.connectedPhone) {\n      _this.notify('Please connect to Voip Server in order to make calls');\n\n      console.log('User agent not registered yet');\n      return;\n    }\n\n    if (_this.activeCall) {\n      _this.notify('Already have an active call');\n\n      console.log('Already has active call');\n      return;\n    }\n\n    _this.phone.call(\"sip:\".concat(to, \"@\").concat(_this.config.domain), {\n      extraHeaders: ['First: first', 'Second: second'],\n      RTCConstraints: {\n        optional: [{\n          DtlsSrtpKeyAgreement: 'true'\n        }]\n      },\n      mediaConstraints: {\n        audio: true\n      },\n      sessionTimersExpires: 600\n    });\n  };\n\n  this.answer = function (sessionId) {\n    if (_this.activeCall) {\n      _this.notify('Already have an active call');\n\n      console.log('Already has active call');\n    } else if (_this.activeChanel.inCall) {\n      _this.notify('Current chanel is busy');\n\n      console.log('Chanel is Busy');\n    } else {\n      // Stop the annoying ring ring\n      _this.stopRing(); // Get the call from calls Queue\n\n\n      _this.activeCall = _.find(_this.callsQueue, {\n        id: sessionId\n      });\n\n      if (_this.activeCall) {\n        _this.activeCall.customPayload = _this.activeChanel.id;\n\n        _this.activeCall.answer({\n          mediaConstraints: {\n            audio: true\n          }\n        }); // Connect Audio\n\n\n        _this.connectAudio();\n      }\n    }\n  };\n\n  this.hungup = function (e) {\n    try {\n      _this.phone._sessions[e].terminate();\n    } catch (e) {\n      console.log(e);\n      console.log('Call already terminated');\n    }\n  };\n\n  this.start = function () {\n    if (!_this.initiated) {\n      _this.notify('Error: 356 Please report');\n\n      console.log('Please call .init() before connect');\n      return;\n    }\n\n    if (_this.config.debug) {\n      debug.enable('JsSIP:*');\n    } else {\n      debug.disable();\n    }\n\n    _this.phone.start();\n  };\n\n  this.stop = function () {\n    _this.phone.stop();\n  };\n}\n\nvar flowRoute = new CallsFlowControl();\nvar player = createRef();\nvar ringer = createRef();\nvar useStyles$9 = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    },\n    results: {\n      marginTop: theme.spacing(3)\n    },\n    phone: {\n      padding: '27px'\n    },\n    gridSettings: {\n      paddingTop: '26px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexWrap: 'nowrap',\n      maxWidth: '202px'\n    },\n    connected: {\n      color: 'green'\n    },\n    disconnected: {\n      color: 'red'\n    },\n    textform: {\n      '& > *': {\n        textAlign: 'right',\n        width: '100%'\n      },\n      '.MuiInputBase-input': {\n        textAlign: 'right'\n      }\n    },\n    phoneButton: {\n      color: 'white',\n      backgroundColor: '#3949ab',\n      position: 'fixed',\n      right: '27px',\n      bottom: '27px',\n      '&:hover': {\n        background: '#94a3fc'\n      }\n    },\n    drawerPaper: {\n      width: 280\n    },\n    drawer: _defineProperty({}, theme.breakpoints.up('sm'), {\n      width: 280,\n      flexShrink: 0\n    }),\n    drawerHeader: _objectSpread2(_objectSpread2({\n      marginTop: 64,\n      minHeight: 30,\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: 'flex-start'\n    })\n  };\n});\n\nfunction SoftPhone(_ref) {\n  var callVolume = _ref.callVolume,\n      ringVolume = _ref.ringVolume,\n      setConnectOnStartToLocalStorage = _ref.setConnectOnStartToLocalStorage,\n      setNotifications = _ref.setNotifications,\n      setCallVolume = _ref.setCallVolume,\n      setRingVolume = _ref.setRingVolume,\n      _ref$notifications = _ref.notifications,\n      notifications = _ref$notifications === void 0 ? true : _ref$notifications,\n      _ref$connectOnStart = _ref.connectOnStart,\n      connectOnStart = _ref$connectOnStart === void 0 ? true : _ref$connectOnStart,\n      config = _ref.config,\n      _ref$timelocale = _ref.timelocale,\n      timelocale = _ref$timelocale === void 0 ? 'UTC' : _ref$timelocale,\n      _ref$asteriskAccounts = _ref.asteriskAccounts,\n      asteriskAccounts = _ref$asteriskAccounts === void 0 ? [] : _ref$asteriskAccounts;\n  var defaultSoftPhoneState = {\n    displayCalls: [{\n      id: 0,\n      info: 'Ch 1',\n      hold: false,\n      muted: 0,\n      autoMute: 0,\n      inCall: false,\n      inAnswer: false,\n      inTransfer: false,\n      callInfo: 'Ready',\n      inAnswerTransfer: false,\n      allowTransfer: true,\n      transferControl: false,\n      allowAttendedTransfer: true,\n      transferNumber: '',\n      attendedTransferOnline: '',\n      inConference: false,\n      callNumber: '',\n      duration: 0,\n      side: '',\n      sessionId: ''\n    }, {\n      id: 1,\n      info: 'Ch 2',\n      hold: false,\n      muted: 0,\n      autoMute: 0,\n      inCall: false,\n      inAnswer: false,\n      inAnswerTransfer: false,\n      inConference: false,\n      inTransfer: false,\n      callInfo: 'Ready',\n      allowTransfer: true,\n      transferControl: false,\n      allowAttendedTransfer: true,\n      transferNumber: '',\n      attendedTransferOnline: '',\n      callNumber: '',\n      duration: 0,\n      side: '',\n      sessionId: ''\n    }, {\n      id: 2,\n      info: 'Ch 3',\n      hold: false,\n      muted: 0,\n      autoMute: 0,\n      inCall: false,\n      inConference: false,\n      inAnswer: false,\n      callInfo: 'Ready',\n      inTransfer: false,\n      inAnswerTransfer: false,\n      Transfer: false,\n      allowTransfer: true,\n      transferControl: false,\n      allowAttendedTransfer: true,\n      transferNumber: '',\n      attendedTransferOnline: '',\n      callNumber: '',\n      duration: 0,\n      side: '',\n      sessionId: ''\n    }],\n    phoneConnectOnStart: connectOnStart,\n    notifications: notifications,\n    phoneCalls: [],\n    connectedPhone: false,\n    connectingPhone: false,\n    activeCalls: [],\n    callVolume: callVolume,\n    ringVolume: ringVolume\n  };\n  var classes = useStyles$9();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      drawerOpen = _useState2[0],\n      drawerSetOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dialState = _useState4[0],\n      setDialState = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeChannel = _useState6[0],\n      setActiveChannel = _useState6[1];\n\n  var _useState7 = useState(defaultSoftPhoneState),\n      _useState8 = _slicedToArray(_useState7, 2),\n      localStatePhone = _useState8[0],\n      setLocalStatePhone = _useState8[1];\n\n  var _React$useState = React.useState({\n    open: false,\n    message: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      notificationState = _React$useState2[0],\n      setNotificationState = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      calls = _React$useState4[0],\n      setCalls = _React$useState4[1];\n\n  var notify = function notify(message) {\n    setNotificationState(function (notification) {\n      return _objectSpread2(_objectSpread2({}, notification), {}, {\n        open: true,\n        message: message\n      });\n    });\n  };\n\n  Notification.requestPermission();\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setNotificationState(function (notification) {\n      return _objectSpread2(_objectSpread2({}, notification), {}, {\n        open: false\n      });\n    });\n  };\n\n  function Alert(props) {\n    return /*#__PURE__*/React.createElement(MuiAlert, _extends({\n      elevation: 6,\n      variant: \"filled\"\n    }, props));\n  }\n\n  flowRoute.activeChanel = localStatePhone.displayCalls[activeChannel];\n  flowRoute.connectedPhone = localStatePhone.connectedPhone;\n\n  flowRoute.engineEvent = function (event, payload) {\n    // Listen Here for Engine \"UA jssip\" events\n    switch (event) {\n      case 'connecting':\n        break;\n\n      case 'connected':\n        setLocalStatePhone(function (prevState) {\n          return _objectSpread2(_objectSpread2({}, prevState), {}, {\n            connectingPhone: false,\n            connectedPhone: true\n          });\n        });\n        break;\n\n      case 'registered':\n        break;\n\n      case 'disconnected':\n        setLocalStatePhone(function (prevState) {\n          return _objectSpread2(_objectSpread2({}, prevState), {}, {\n            connectingPhone: false,\n            connectedPhone: false\n          });\n        });\n        break;\n    }\n  };\n\n  flowRoute.onCallActionConnection = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, payload, data) {\n      var notification, newProgressLocalStatePhone, firstCheck, secondCheck, displayCallId, acceptedCall, newAcceptedLocalStatePhone, newAcceptedPhoneCalls;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = type;\n              _context.next = _context.t0 === 'reinvite' ? 3 : _context.t0 === 'incomingCall' ? 5 : _context.t0 === 'outgoingCall' ? 8 : _context.t0 === 'callEnded' ? 13 : _context.t0 === 'callAccepted' ? 18 : _context.t0 === 'hold' ? 25 : _context.t0 === 'unhold' ? 27 : _context.t0 === 'unmute' ? 29 : _context.t0 === 'mute' ? 31 : _context.t0 === 'notify' ? 33 : 35;\n              break;\n\n            case 3:\n              // looks like its Attended Transfer\n              // Success transfer\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.sessionId === payload ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      allowAttendedTransfer: true,\n                      allowTransfer: true,\n                      inAnswerTransfer: true,\n                      inTransfer: true,\n                      attendedTransferOnline: data.request.headers['P-Asserted-Identity'][0].raw.split(' ')[0]\n                    }) : a;\n                  })\n                });\n              });\n              return _context.abrupt(\"break\", 36);\n\n            case 5:\n              // looks like new call its incoming call\n              // Save new object with the Phone data of new incoming call into the array with Phone data\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  phoneCalls: [].concat(_toConsumableArray(prevState.phoneCalls), [{\n                    callNumber: payload.remote_identity.display_name !== '' ? \"\".concat(payload.remote_identity.display_name || '') : payload.remote_identity.uri.user,\n                    sessionId: payload.id,\n                    ring: false,\n                    duration: 0,\n                    direction: payload.direction\n                  }])\n                });\n              });\n\n              if (document.visibilityState !== 'visible' && localStatePhone.notifications) {\n                notification = new Notification('Incoming Call', {\n                  icon: 'https://voip.robofx.com/static/images/call-icon-telefono.png',\n                  body: \"Caller: \".concat(payload.remote_identity.display_name !== '' ? \"\".concat(payload.remote_identity.display_name || '') : payload.remote_identity.uri.user)\n                });\n\n                notification.onclick = function () {\n                  window.parent.focus();\n                  window.focus(); // just in case, older browsers\n\n                  this.close();\n                };\n              }\n\n              return _context.abrupt(\"break\", 36);\n\n            case 8:\n              // looks like new call its outgoing call\n              // Create object with the Display data of new outgoing call\n              newProgressLocalStatePhone = _.cloneDeep(localStatePhone);\n              newProgressLocalStatePhone.displayCalls[activeChannel] = _objectSpread2(_objectSpread2({}, localStatePhone.displayCalls[activeChannel]), {}, {\n                inCall: true,\n                hold: false,\n                inAnswer: false,\n                direction: payload.direction,\n                sessionId: payload.id,\n                callNumber: payload.remote_identity.uri.user,\n                callInfo: 'In out call'\n              }); // Save new object into the array with display calls\n\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  displayCalls: newProgressLocalStatePhone.displayCalls\n                });\n              });\n              setDialState('');\n              return _context.abrupt(\"break\", 36);\n\n            case 13:\n              // Call is ended, lets delete the call from calling queue\n              // Call is ended, lets check and delete the call from  display calls list\n              //        const ifExist= _.findIndex(localStatePhone.displayCalls,{sessionId:e.sessionId})\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  phoneCalls: localStatePhone.phoneCalls.filter(function (item) {\n                    return item.sessionId !== payload;\n                  }),\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.sessionId === payload ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      inCall: false,\n                      inAnswer: false,\n                      hold: false,\n                      muted: 0,\n                      inTransfer: false,\n                      inAnswerTransfer: false,\n                      allowFinishTransfer: false,\n                      allowTransfer: true,\n                      allowAttendedTransfer: true,\n                      inConference: false,\n                      callInfo: 'Ready'\n                    }) : a;\n                  })\n                });\n              });\n              firstCheck = localStatePhone.phoneCalls.filter(function (item) {\n                return item.sessionId === payload && item.direction === 'incoming';\n              });\n              secondCheck = localStatePhone.displayCalls.filter(function (item) {\n                return item.sessionId === payload;\n              });\n\n              if (firstCheck.length === 1) {\n                setCalls(function (call) {\n                  return [{\n                    status: 'missed',\n                    sessionId: firstCheck[0].sessionId,\n                    direction: firstCheck[0].direction,\n                    number: firstCheck[0].callNumber,\n                    time: new Date()\n                  }].concat(_toConsumableArray(call));\n                });\n              } else if (secondCheck.length === 1) {\n                setCalls(function (call) {\n                  return [{\n                    status: secondCheck[0].inAnswer ? 'answered' : 'missed',\n                    sessionId: secondCheck[0].sessionId,\n                    direction: secondCheck[0].direction,\n                    number: secondCheck[0].callNumber,\n                    time: new Date()\n                  }].concat(_toConsumableArray(call));\n                });\n              }\n\n              return _context.abrupt(\"break\", 36);\n\n            case 18:\n              // Established conection\n              // Set caller number for Display calls\n              displayCallId = data.customPayload;\n              acceptedCall = localStatePhone.phoneCalls.filter(function (item) {\n                return item.sessionId === payload;\n              });\n\n              if (!acceptedCall[0]) {\n                acceptedCall = localStatePhone.displayCalls.filter(function (item) {\n                  return item.sessionId === payload;\n                });\n                displayCallId = acceptedCall[0].id;\n              } // Call is Established\n              // Lets make a copy of localStatePhone Object\n\n\n              newAcceptedLocalStatePhone = _.cloneDeep(localStatePhone); // Lets check and delete the call from  phone calls list\n\n              newAcceptedPhoneCalls = newAcceptedLocalStatePhone.phoneCalls.filter(function (item) {\n                return item.sessionId !== payload;\n              }); // Save to the local state\n\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  phoneCalls: newAcceptedPhoneCalls,\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.id === displayCallId ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      callNumber: acceptedCall[0].callNumber,\n                      sessionId: payload,\n                      duration: 0,\n                      direction: acceptedCall[0].direction,\n                      inCall: true,\n                      inAnswer: true,\n                      hold: false,\n                      callInfo: 'In call'\n                    }) : a;\n                  })\n                });\n              });\n              return _context.abrupt(\"break\", 36);\n\n            case 25:\n              // let holdCall = localStatePhone.displayCalls.filter((item) => item.sessionId === payload);\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.sessionId === payload ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      hold: true\n                    }) : a;\n                  })\n                });\n              });\n              return _context.abrupt(\"break\", 36);\n\n            case 27:\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.sessionId === payload ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      hold: false\n                    }) : a;\n                  })\n                });\n              });\n              return _context.abrupt(\"break\", 36);\n\n            case 29:\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.sessionId === payload ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      muted: 0\n                    }) : a;\n                  })\n                });\n              });\n              return _context.abrupt(\"break\", 36);\n\n            case 31:\n              setLocalStatePhone(function (prevState) {\n                return _objectSpread2(_objectSpread2({}, prevState), {}, {\n                  displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n                    return a.sessionId === payload ? _objectSpread2(_objectSpread2({}, a), {}, {\n                      muted: 1\n                    }) : a;\n                  })\n                });\n              });\n              return _context.abrupt(\"break\", 36);\n\n            case 33:\n              notify(payload);\n              return _context.abrupt(\"break\", 36);\n\n            case 35:\n              return _context.abrupt(\"break\", 36);\n\n            case 36:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSettingsSlider = function handleSettingsSlider(name, newValue) {\n    // setLocalStatePhone((prevState) => ({\n    //   ...prevState,\n    //   [name]: newValue\n    // }));\n    switch (name) {\n      case 'ringVolume':\n        ringer.current.volume = parseInt(newValue, 10) / 100;\n        setRingVolume(newValue); // flowRoute.setOutputVolume(newValue);\n\n        break;\n\n      case 'callVolume':\n        player.current.volume = parseInt(newValue, 10) / 100;\n        setCallVolume(newValue);\n        break;\n    }\n  };\n\n  var handleConnectPhone = function handleConnectPhone(event, connectionStatus) {\n    try {\n      event.persist();\n    } catch (e) {}\n\n    setLocalStatePhone(function (prevState) {\n      return _objectSpread2(_objectSpread2({}, prevState), {}, {\n        connectingPhone: true\n      });\n    });\n\n    if (connectionStatus === true) {\n      flowRoute.start();\n    } else {\n      flowRoute.stop();\n    }\n\n    return true;\n  };\n\n  var toggleDrawer = function toggleDrawer(openDrawer) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      drawerSetOpen(openDrawer);\n    };\n  };\n\n  var handleDialStateChange = function handleDialStateChange(event) {\n    event.persist();\n    setDialState(event.target.value);\n  };\n\n  var handleConnectOnStart = function handleConnectOnStart(event, newValue) {\n    event.persist();\n    setLocalStatePhone(function (prevState) {\n      return _objectSpread2(_objectSpread2({}, prevState), {}, {\n        phoneConnectOnStart: newValue\n      });\n    });\n    setConnectOnStartToLocalStorage(newValue);\n  };\n\n  var handleNotifications = function handleNotifications(event, newValue) {\n    event.persist();\n    setLocalStatePhone(function (prevState) {\n      return _objectSpread2(_objectSpread2({}, prevState), {}, {\n        notifications: newValue\n      });\n    });\n    setNotifications(newValue);\n  };\n\n  var handlePressKey = function handlePressKey(event) {\n    event.persist();\n    setDialState(dialState + event.currentTarget.value);\n  };\n\n  var handleCall = function handleCall(event) {\n    event.persist();\n\n    if (dialState.match(/^[0-9]+$/) != null) {\n      flowRoute.call(dialState);\n    }\n  };\n\n  var handleEndCall = function handleEndCall(event) {\n    event.persist();\n    flowRoute.hungup(localStatePhone.displayCalls[activeChannel].sessionId);\n  };\n\n  var handleHold = function handleHold(sessionId, hold) {\n    if (hold === false) {\n      flowRoute.hold(sessionId);\n    } else if (hold === true) {\n      flowRoute.unhold(sessionId);\n    }\n  };\n\n  var handleAnswer = function handleAnswer(event) {\n    flowRoute.answer(event.currentTarget.value);\n  };\n\n  var handleReject = function handleReject(event) {\n    flowRoute.hungup(event.currentTarget.value);\n  };\n\n  var handleMicMute = function handleMicMute() {\n    flowRoute.setMicMuted();\n  };\n\n  var handleCallTransfer = function handleCallTransfer(transferedNumber) {\n    if (!dialState && !transferedNumber) return;\n\n    var newCallTransferDisplayCalls = _.map(localStatePhone.displayCalls, function (a) {\n      return a.id === activeChannel ? _objectSpread2(_objectSpread2({}, a), {}, {\n        transferNumber: dialState || transferedNumber,\n        inTransfer: true,\n        allowAttendedTransfer: false,\n        allowFinishTransfer: false,\n        allowTransfer: false,\n        callInfo: 'Transfering...'\n      }) : a;\n    });\n\n    setLocalStatePhone(function (prevState) {\n      return _objectSpread2(_objectSpread2({}, prevState), {}, {\n        displayCalls: newCallTransferDisplayCalls\n      });\n    });\n    flowRoute.activeCall.sendDTMF(\"##\".concat(dialState || transferedNumber));\n  };\n\n  var handleCallAttendedTransfer = function handleCallAttendedTransfer(event, number) {\n    switch (event) {\n      case 'transfer':\n        setLocalStatePhone(function (prevState) {\n          return _objectSpread2(_objectSpread2({}, prevState), {}, {\n            displayCalls: _.map(localStatePhone.displayCalls, function (a) {\n              return a.id === activeChannel ? _objectSpread2(_objectSpread2({}, a), {}, {\n                transferNumber: dialState || number,\n                allowAttendedTransfer: false,\n                allowTransfer: false,\n                transferControl: true,\n                allowFinishTransfer: false,\n                callInfo: 'Attended Transferring...',\n                inTransfer: true\n              }) : a;\n            })\n          });\n        });\n        flowRoute.activeCall.sendDTMF(\"*2\".concat(dialState || number));\n        break;\n\n      case 'merge':\n        var newCallMergeAttendedTransferDisplayCalls = _.map(localStatePhone.displayCalls, function (a) {\n          return a.id === activeChannel ? _objectSpread2(_objectSpread2({}, a), {}, {\n            callInfo: 'Conference',\n            inConference: true\n          }) : a;\n        });\n\n        setLocalStatePhone(function (prevState) {\n          return _objectSpread2(_objectSpread2({}, prevState), {}, {\n            displayCalls: newCallMergeAttendedTransferDisplayCalls\n          });\n        });\n        flowRoute.activeCall.sendDTMF('*5');\n        break;\n\n      case 'swap':\n        flowRoute.activeCall.sendDTMF('*6');\n        break;\n\n      case 'finish':\n        flowRoute.activeCall.sendDTMF('*4');\n        break;\n\n      case 'cancel':\n        var newCallCancelAttendedTransferDisplayCalls = _.map(localStatePhone.displayCalls, function (a) {\n          return a.id === activeChannel ? _objectSpread2(_objectSpread2({}, a), {}, {\n            transferNumber: dialState,\n            allowAttendedTransfer: true,\n            allowTransfer: true,\n            allowFinishTransfer: false,\n            transferControl: false,\n            inAnswerTransfer: false,\n            callInfo: 'In Call',\n            inTransfer: false\n          }) : a;\n        });\n\n        setLocalStatePhone(function (prevState) {\n          return _objectSpread2(_objectSpread2({}, prevState), {}, {\n            displayCalls: newCallCancelAttendedTransferDisplayCalls\n          });\n        });\n        flowRoute.activeCall.sendDTMF('*3');\n        break;\n    }\n  };\n\n  var handleSettingsButton = function handleSettingsButton() {\n    flowRoute.tmpEvent();\n  };\n\n  useEffect(function () {\n    flowRoute.config = config;\n    flowRoute.init();\n\n    if (localStatePhone.phoneConnectOnStart) {\n      handleConnectPhone(null, true);\n    }\n\n    try {\n      player.current.defaultMuted = false;\n      player.current.autoplay = true;\n      player.current.volume = parseInt(localStatePhone.callVolume, 10) / 100; // player.volume = this.outputVolume;\n\n      flowRoute.player = player;\n      ringer.current.src = '/sound/ringing.mp3';\n      ringer.current.loop = true;\n      ringer.current.volume = parseInt(localStatePhone.ringVolume, 10) / 100;\n      flowRoute.ringer = ringer;\n    } catch (e) {}\n  }, [config, localStatePhone.callVolume, localStatePhone.phoneConnectOnStart, localStatePhone.ringVolume]);\n\n  var dialNumberOnEnter = function dialNumberOnEnter(event) {\n    if (event.key === 'Enter') {\n      handleCall(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Phone\"\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.phoneButton,\n    color: \"primary\",\n    \"aria-label\": \"call picture\",\n    component: \"span\",\n    variant: \"contained\",\n    onClick: toggleDrawer(true)\n  }, /*#__PURE__*/React.createElement(Call, null))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"right\",\n    open: drawerOpen,\n    variant: \"persistent\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: 30\n    },\n    className: classes.drawerHeader\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleDrawer(false)\n  }, classes.direction === 'ltr' ? /*#__PURE__*/React.createElement(ChevronLeft, null) : /*#__PURE__*/React.createElement(ChevronRight, null))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: notificationState.open,\n    autoHideDuration: 3000,\n    onClose: handleClose\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"warning\"\n  }, ' ', notificationState.message, ' ')), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(CallQueue, {\n    calls: localStatePhone.phoneCalls,\n    handleAnswer: handleAnswer,\n    handleReject: handleReject\n  }), /*#__PURE__*/React.createElement(SwipeCaruselBlock, {\n    setLocalStatePhone: setLocalStatePhone,\n    setActiveChannel: setActiveChannel,\n    activeChannel: activeChannel,\n    localStatePhone: localStatePhone\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.phone\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: dialState,\n    style: {\n      textAlign: 'right'\n    },\n    id: \"standard-basic\",\n    label: \"Number\",\n    fullWidth: true,\n    onKeyUp: function onKeyUp(event) {\n      return dialNumberOnEnter(event);\n    },\n    onChange: handleDialStateChange\n  }), /*#__PURE__*/React.createElement(KeypadBlock, {\n    handleCallAttendedTransfer: handleCallAttendedTransfer,\n    handleCallTransfer: handleCallTransfer,\n    handleMicMute: handleMicMute,\n    handleHold: handleHold,\n    handleCall: handleCall,\n    handleEndCall: handleEndCall,\n    handlePressKey: handlePressKey,\n    activeChanel: localStatePhone.displayCalls[activeChannel],\n    handleSettingsButton: handleSettingsButton,\n    asteriskAccounts: asteriskAccounts,\n    dialState: dialState,\n    setDialState: setDialState\n  })), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(SwipeCaruselBodyBlock, {\n    localStatePhone: localStatePhone,\n    handleConnectPhone: handleConnectPhone,\n    handleSettingsSlider: handleSettingsSlider,\n    handleConnectOnStart: handleConnectOnStart,\n    handleNotifications: handleNotifications,\n    calls: calls,\n    timelocale: timelocale,\n    callVolume: callVolume\n  }), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(StatusBlock, {\n    connectedPhone: localStatePhone.connectedPhone,\n    connectingPhone: localStatePhone.connectingPhone\n  }), /*#__PURE__*/React.createElement(Divider, null)), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: true\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    preload: \"auto\",\n    ref: player\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: true\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    preload: \"auto\",\n    ref: ringer\n  })));\n}\n\nSoftPhone.propTypes = {\n  callVolume: propTypes.any,\n  ringVolume: propTypes.any,\n  setConnectOnStartToLocalStorage: propTypes.any,\n  setNotifications: propTypes.any,\n  setCallVolume: propTypes.any,\n  setRingVolume: propTypes.any,\n  notifications: propTypes.any,\n  connectOnStart: propTypes.any,\n  config: propTypes.any,\n  timelocale: propTypes.any,\n  asteriskAccounts: propTypes.any\n};\nexport default SoftPhone; //# sourceMappingURL=index.es.js.map","map":null,"metadata":{},"sourceType":"module"}