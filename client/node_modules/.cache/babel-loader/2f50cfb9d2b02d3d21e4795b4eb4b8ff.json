{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar request = require('./request');\n/**\n * Builds Endpoint Analytics (EA) event payloads and sends them to\n *   the EA server.\n * @constructor\n * @param {String} productName - Name of the product publishing events.\n * @param {String} token - The JWT token to use to authenticate with\n *   the EA server.\n * @param {EventPublisher.Options} options\n * @property {Boolean} isEnabled - Whether or not this publisher is publishing\n *   to the server. Currently ignores the request altogether, in the future this\n *   may store them in case publishing is re-enabled later. Defaults to true.\n */\n\n/**\n* @typedef {Object} EventPublisher.Options\n* @property {Object} [metadata=undefined] - A publisher_metadata object to send\n*   with each payload.\n* @property {String} [host='eventgw.twilio.com'] - The host address of the EA\n*   server to publish to.\n* @property {Object|Function} [defaultPayload] - A default payload to extend\n*   when creating and sending event payloads. Also takes a function that\n*   should return an object representing the default payload. This is\n*   useful for fields that should always be present when they are\n*   available, but are not always available.\n*/\n\n\nvar EventPublisher = function (_EventEmitter) {\n  _inherits(EventPublisher, _EventEmitter);\n\n  function EventPublisher(productName, token, options) {\n    _classCallCheck(this, EventPublisher);\n\n    var _this = _possibleConstructorReturn(this, (EventPublisher.__proto__ || Object.getPrototypeOf(EventPublisher)).call(this));\n\n    if (!(_this instanceof EventPublisher)) {\n      var _ret;\n\n      return _ret = new EventPublisher(productName, token, options), _possibleConstructorReturn(_this, _ret);\n    } // Apply default options\n\n\n    options = Object.assign({\n      defaultPayload: function defaultPayload() {\n        return {};\n      }\n    }, options);\n    var defaultPayload = options.defaultPayload;\n\n    if (typeof defaultPayload !== 'function') {\n      defaultPayload = function defaultPayload() {\n        return Object.assign({}, options.defaultPayload);\n      };\n    }\n\n    var isEnabled = true; // eslint-disable-next-line camelcase,no-undefined\n\n    var metadata = Object.assign({\n      app_name: undefined,\n      app_version: undefined\n    }, options.metadata);\n    Object.defineProperties(_this, {\n      _defaultPayload: {\n        value: defaultPayload\n      },\n      _isEnabled: {\n        get: function get() {\n          return isEnabled;\n        },\n        set: function set(_isEnabled) {\n          isEnabled = _isEnabled;\n        }\n      },\n      _host: {\n        value: options.host,\n        writable: true\n      },\n      _log: {\n        value: options.log\n      },\n      _request: {\n        value: options.request || request,\n        writable: true\n      },\n      _token: {\n        value: token,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        get: function get() {\n          return isEnabled;\n        }\n      },\n      metadata: {\n        enumerable: true,\n        get: function get() {\n          return metadata;\n        }\n      },\n      productName: {\n        enumerable: true,\n        value: productName\n      },\n      token: {\n        enumerable: true,\n        get: function get() {\n          return this._token;\n        }\n      }\n    });\n    return _this;\n  }\n\n  return EventPublisher;\n}(EventEmitter);\n/**\n * Post to an EA server.\n * @private\n * @param {String} endpointName - Endpoint to post the event to\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @param {?Boolean} [force=false] - Whether or not to send this even if\n *    publishing is disabled.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype._post = function _post(endpointName, level, group, name, payload, connection, force) {\n  var _this2 = this;\n\n  if (!this.isEnabled && !force || !this._host) {\n    return Promise.resolve();\n  }\n\n  if (!connection || (!connection.parameters || !connection.parameters.CallSid) && !connection.outboundConnectionId) {\n    return Promise.resolve();\n  }\n\n  var event = {\n    /* eslint-disable camelcase */\n    publisher: this.productName,\n    group: group,\n    name: name,\n    timestamp: new Date().toISOString(),\n    level: level.toUpperCase(),\n    payload_type: 'application/json',\n    private: false,\n    payload: payload && payload.forEach ? payload.slice(0) : Object.assign(this._defaultPayload(connection), payload)\n    /* eslint-enable camelcase */\n\n  };\n\n  if (this.metadata) {\n    // eslint-disable-next-line camelcase\n    event.publisher_metadata = this.metadata;\n  }\n\n  var requestParams = {\n    url: 'https://' + this._host + '/v4/' + endpointName,\n    body: event,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Twilio-Token': this.token\n    }\n  };\n  return new Promise(function (resolve, reject) {\n    _this2._request.post(requestParams, function (err) {\n      if (err) {\n        _this2.emit('error', err);\n\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  }).catch(function (e) {\n    _this2._log.warn('Unable to post ' + group + ' ' + name + ' event to Insights. Received error: ' + e);\n  });\n};\n/**\n * Post an event to the EA server. Use this method when the level\n *  is dynamic. Otherwise, it's better practice to use the sugar\n *  methods named for the specific level.\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype.post = function post(level, group, name, payload, connection, force) {\n  return this._post('EndpointEvents', level, group, name, payload, connection, force);\n};\n/**\n * Post a debug-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype.debug = function debug(group, name, payload, connection) {\n  return this.post('debug', group, name, payload, connection);\n};\n/**\n * Post an info-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype.info = function info(group, name, payload, connection) {\n  return this.post('info', group, name, payload, connection);\n};\n/**\n * Post a warning-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype.warn = function warn(group, name, payload, connection) {\n  return this.post('warning', group, name, payload, connection);\n};\n/**\n * Post an error-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype.error = function error(group, name, payload, connection) {\n  return this.post('error', group, name, payload, connection);\n};\n/**\n * Post a metrics event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {Array<Object>} metrics - The metrics to post.\n * @param {?Object} [customFields] - Custom fields to append to each payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype.postMetrics = function postMetrics(group, name, metrics, customFields, connection) {\n  var _this3 = this;\n\n  return new Promise(function (resolve) {\n    var samples = metrics.map(formatMetric).map(function (sample) {\n      return Object.assign(sample, customFields);\n    });\n    resolve(_this3._post('EndpointMetrics', 'info', group, name, samples, connection));\n  });\n};\n/**\n * Update the host address of the insights server to publish to.\n * @param {String} host - The new host address of the insights server.\n */\n\n\nEventPublisher.prototype.setHost = function setHost(host) {\n  this._host = host;\n};\n/**\n * Update the token to use to authenticate requests.\n * @param {string} token\n * @returns {void}\n */\n\n\nEventPublisher.prototype.setToken = function setToken(token) {\n  this._token = token;\n};\n/**\n * Enable the publishing of events.\n */\n\n\nEventPublisher.prototype.enable = function enable() {\n  this._isEnabled = true;\n};\n/**\n * Disable the publishing of events.\n */\n\n\nEventPublisher.prototype.disable = function disable() {\n  this._isEnabled = false;\n};\n\nfunction formatMetric(sample) {\n  return {\n    /* eslint-disable camelcase */\n    timestamp: new Date(sample.timestamp).toISOString(),\n    total_packets_received: sample.totals.packetsReceived,\n    total_packets_lost: sample.totals.packetsLost,\n    total_packets_sent: sample.totals.packetsSent,\n    total_bytes_received: sample.totals.bytesReceived,\n    total_bytes_sent: sample.totals.bytesSent,\n    packets_received: sample.packetsReceived,\n    packets_lost: sample.packetsLost,\n    packets_lost_fraction: sample.packetsLostFraction && Math.round(sample.packetsLostFraction * 100) / 100,\n    bytes_received: sample.bytesReceived,\n    bytes_sent: sample.bytesSent,\n    audio_codec: sample.codecName,\n    audio_level_in: sample.audioInputLevel,\n    audio_level_out: sample.audioOutputLevel,\n    call_volume_input: sample.inputVolume,\n    call_volume_output: sample.outputVolume,\n    jitter: sample.jitter,\n    rtt: sample.rtt,\n    mos: sample.mos && Math.round(sample.mos * 100) / 100\n    /* eslint-enable camelcase */\n\n  };\n}\n\nmodule.exports = EventPublisher;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","EventEmitter","require","request","EventPublisher","_EventEmitter","productName","token","options","_this","getPrototypeOf","_ret","assign","defaultPayload","isEnabled","metadata","app_name","undefined","app_version","defineProperties","_defaultPayload","_isEnabled","get","set","_host","host","_log","log","_request","_token","_post","endpointName","level","group","name","payload","connection","force","_this2","Promise","resolve","parameters","CallSid","outboundConnectionId","event","publisher","timestamp","Date","toISOString","toUpperCase","payload_type","private","forEach","slice","publisher_metadata","requestParams","url","body","headers","reject","post","err","emit","catch","e","warn","debug","info","error","postMetrics","metrics","customFields","_this3","samples","map","formatMetric","sample","setHost","setToken","enable","disable","total_packets_received","totals","packetsReceived","total_packets_lost","packetsLost","total_packets_sent","packetsSent","total_bytes_received","bytesReceived","total_bytes_sent","bytesSent","packets_received","packets_lost","packets_lost_fraction","packetsLostFraction","Math","round","bytes_received","bytes_sent","audio_codec","codecName","audio_level_in","audioInputLevel","audio_level_out","audioOutputLevel","call_volume_input","inputVolume","call_volume_output","outputVolume","jitter","rtt","mos","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/@twilio/voice-sdk/es5/twilio/eventpublisher.js"],"sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = require('events').EventEmitter;\nvar request = require('./request');\n\n/**\n * Builds Endpoint Analytics (EA) event payloads and sends them to\n *   the EA server.\n * @constructor\n * @param {String} productName - Name of the product publishing events.\n * @param {String} token - The JWT token to use to authenticate with\n *   the EA server.\n * @param {EventPublisher.Options} options\n * @property {Boolean} isEnabled - Whether or not this publisher is publishing\n *   to the server. Currently ignores the request altogether, in the future this\n *   may store them in case publishing is re-enabled later. Defaults to true.\n */ /**\n    * @typedef {Object} EventPublisher.Options\n    * @property {Object} [metadata=undefined] - A publisher_metadata object to send\n    *   with each payload.\n    * @property {String} [host='eventgw.twilio.com'] - The host address of the EA\n    *   server to publish to.\n    * @property {Object|Function} [defaultPayload] - A default payload to extend\n    *   when creating and sending event payloads. Also takes a function that\n    *   should return an object representing the default payload. This is\n    *   useful for fields that should always be present when they are\n    *   available, but are not always available.\n    */\n\nvar EventPublisher = function (_EventEmitter) {\n  _inherits(EventPublisher, _EventEmitter);\n\n  function EventPublisher(productName, token, options) {\n    _classCallCheck(this, EventPublisher);\n\n    var _this = _possibleConstructorReturn(this, (EventPublisher.__proto__ || Object.getPrototypeOf(EventPublisher)).call(this));\n\n    if (!(_this instanceof EventPublisher)) {\n      var _ret;\n\n      return _ret = new EventPublisher(productName, token, options), _possibleConstructorReturn(_this, _ret);\n    }\n\n    // Apply default options\n    options = Object.assign({\n      defaultPayload: function defaultPayload() {\n        return {};\n      }\n    }, options);\n\n    var defaultPayload = options.defaultPayload;\n\n    if (typeof defaultPayload !== 'function') {\n      defaultPayload = function defaultPayload() {\n        return Object.assign({}, options.defaultPayload);\n      };\n    }\n\n    var isEnabled = true;\n    // eslint-disable-next-line camelcase,no-undefined\n    var metadata = Object.assign({ app_name: undefined, app_version: undefined }, options.metadata);\n\n    Object.defineProperties(_this, {\n      _defaultPayload: { value: defaultPayload },\n      _isEnabled: {\n        get: function get() {\n          return isEnabled;\n        },\n        set: function set(_isEnabled) {\n          isEnabled = _isEnabled;\n        }\n      },\n      _host: { value: options.host, writable: true },\n      _log: { value: options.log },\n      _request: { value: options.request || request, writable: true },\n      _token: { value: token, writable: true },\n      isEnabled: {\n        enumerable: true,\n        get: function get() {\n          return isEnabled;\n        }\n      },\n      metadata: {\n        enumerable: true,\n        get: function get() {\n          return metadata;\n        }\n      },\n      productName: { enumerable: true, value: productName },\n      token: {\n        enumerable: true,\n        get: function get() {\n          return this._token;\n        }\n      }\n    });\n    return _this;\n  }\n\n  return EventPublisher;\n}(EventEmitter);\n\n/**\n * Post to an EA server.\n * @private\n * @param {String} endpointName - Endpoint to post the event to\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @param {?Boolean} [force=false] - Whether or not to send this even if\n *    publishing is disabled.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\n\n\nEventPublisher.prototype._post = function _post(endpointName, level, group, name, payload, connection, force) {\n  var _this2 = this;\n\n  if (!this.isEnabled && !force || !this._host) {\n    return Promise.resolve();\n  }\n\n  if (!connection || (!connection.parameters || !connection.parameters.CallSid) && !connection.outboundConnectionId) {\n    return Promise.resolve();\n  }\n\n  var event = {\n    /* eslint-disable camelcase */\n    publisher: this.productName,\n    group: group,\n    name: name,\n    timestamp: new Date().toISOString(),\n    level: level.toUpperCase(),\n    payload_type: 'application/json',\n    private: false,\n    payload: payload && payload.forEach ? payload.slice(0) : Object.assign(this._defaultPayload(connection), payload)\n    /* eslint-enable camelcase */\n  };\n\n  if (this.metadata) {\n    // eslint-disable-next-line camelcase\n    event.publisher_metadata = this.metadata;\n  }\n\n  var requestParams = {\n    url: 'https://' + this._host + '/v4/' + endpointName,\n    body: event,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Twilio-Token': this.token\n    }\n  };\n\n  return new Promise(function (resolve, reject) {\n    _this2._request.post(requestParams, function (err) {\n      if (err) {\n        _this2.emit('error', err);\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  }).catch(function (e) {\n    _this2._log.warn('Unable to post ' + group + ' ' + name + ' event to Insights. Received error: ' + e);\n  });\n};\n\n/**\n * Post an event to the EA server. Use this method when the level\n *  is dynamic. Otherwise, it's better practice to use the sugar\n *  methods named for the specific level.\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.post = function post(level, group, name, payload, connection, force) {\n  return this._post('EndpointEvents', level, group, name, payload, connection, force);\n};\n\n/**\n * Post a debug-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.debug = function debug(group, name, payload, connection) {\n  return this.post('debug', group, name, payload, connection);\n};\n\n/**\n * Post an info-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.info = function info(group, name, payload, connection) {\n  return this.post('info', group, name, payload, connection);\n};\n\n/**\n * Post a warning-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.warn = function warn(group, name, payload, connection) {\n  return this.post('warning', group, name, payload, connection);\n};\n\n/**\n * Post an error-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.error = function error(group, name, payload, connection) {\n  return this.post('error', group, name, payload, connection);\n};\n\n/**\n * Post a metrics event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {Array<Object>} metrics - The metrics to post.\n * @param {?Object} [customFields] - Custom fields to append to each payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.postMetrics = function postMetrics(group, name, metrics, customFields, connection) {\n  var _this3 = this;\n\n  return new Promise(function (resolve) {\n    var samples = metrics.map(formatMetric).map(function (sample) {\n      return Object.assign(sample, customFields);\n    });\n\n    resolve(_this3._post('EndpointMetrics', 'info', group, name, samples, connection));\n  });\n};\n\n/**\n * Update the host address of the insights server to publish to.\n * @param {String} host - The new host address of the insights server.\n */\nEventPublisher.prototype.setHost = function setHost(host) {\n  this._host = host;\n};\n\n/**\n * Update the token to use to authenticate requests.\n * @param {string} token\n * @returns {void}\n */\nEventPublisher.prototype.setToken = function setToken(token) {\n  this._token = token;\n};\n\n/**\n * Enable the publishing of events.\n */\nEventPublisher.prototype.enable = function enable() {\n  this._isEnabled = true;\n};\n\n/**\n * Disable the publishing of events.\n */\nEventPublisher.prototype.disable = function disable() {\n  this._isEnabled = false;\n};\n\nfunction formatMetric(sample) {\n  return {\n    /* eslint-disable camelcase */\n    timestamp: new Date(sample.timestamp).toISOString(),\n    total_packets_received: sample.totals.packetsReceived,\n    total_packets_lost: sample.totals.packetsLost,\n    total_packets_sent: sample.totals.packetsSent,\n    total_bytes_received: sample.totals.bytesReceived,\n    total_bytes_sent: sample.totals.bytesSent,\n    packets_received: sample.packetsReceived,\n    packets_lost: sample.packetsLost,\n    packets_lost_fraction: sample.packetsLostFraction && Math.round(sample.packetsLostFraction * 100) / 100,\n    bytes_received: sample.bytesReceived,\n    bytes_sent: sample.bytesSent,\n    audio_codec: sample.codecName,\n    audio_level_in: sample.audioInputLevel,\n    audio_level_out: sample.audioOutputLevel,\n    call_volume_input: sample.inputVolume,\n    call_volume_output: sample.outputVolume,\n    jitter: sample.jitter,\n    rtt: sample.rtt,\n    mos: sample.mos && Math.round(sample.mos * 100) / 100\n    /* eslint-enable camelcase */\n  };\n}\n\nmodule.exports = EventPublisher;"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;IAAE,MAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;EAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;EAAE,IAAI,CAACD,IAAL,EAAW;IAAE,MAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;EAAwF;;EAAC,OAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;EAAE,IAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;IAAE,MAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;EAAsG;;EAACD,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;IAAEG,WAAW,EAAE;MAAEC,KAAK,EAAEN,QAAT;MAAmBO,UAAU,EAAE,KAA/B;MAAsCC,QAAQ,EAAE,IAAhD;MAAsDC,YAAY,EAAE;IAApE;EAAf,CAAlD,CAArB;EAAqK,IAAIR,UAAJ,EAAgBE,MAAM,CAACO,cAAP,GAAwBP,MAAM,CAACO,cAAP,CAAsBV,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACW,SAAT,GAAqBV,UAA3F;AAAwG;;AAE9e,IAAIW,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAArC;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIE,cAAc,GAAG,UAAUC,aAAV,EAAyB;EAC5CjB,SAAS,CAACgB,cAAD,EAAiBC,aAAjB,CAAT;;EAEA,SAASD,cAAT,CAAwBE,WAAxB,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqD;IACnD5B,eAAe,CAAC,IAAD,EAAOwB,cAAP,CAAf;;IAEA,IAAIK,KAAK,GAAGzB,0BAA0B,CAAC,IAAD,EAAO,CAACoB,cAAc,CAACJ,SAAf,IAA4BR,MAAM,CAACkB,cAAP,CAAsBN,cAAtB,CAA7B,EAAoElB,IAApE,CAAyE,IAAzE,CAAP,CAAtC;;IAEA,IAAI,EAAEuB,KAAK,YAAYL,cAAnB,CAAJ,EAAwC;MACtC,IAAIO,IAAJ;;MAEA,OAAOA,IAAI,GAAG,IAAIP,cAAJ,CAAmBE,WAAnB,EAAgCC,KAAhC,EAAuCC,OAAvC,CAAP,EAAwDxB,0BAA0B,CAACyB,KAAD,EAAQE,IAAR,CAAzF;IACD,CATkD,CAWnD;;;IACAH,OAAO,GAAGhB,MAAM,CAACoB,MAAP,CAAc;MACtBC,cAAc,EAAE,SAASA,cAAT,GAA0B;QACxC,OAAO,EAAP;MACD;IAHqB,CAAd,EAIPL,OAJO,CAAV;IAMA,IAAIK,cAAc,GAAGL,OAAO,CAACK,cAA7B;;IAEA,IAAI,OAAOA,cAAP,KAA0B,UAA9B,EAA0C;MACxCA,cAAc,GAAG,SAASA,cAAT,GAA0B;QACzC,OAAOrB,MAAM,CAACoB,MAAP,CAAc,EAAd,EAAkBJ,OAAO,CAACK,cAA1B,CAAP;MACD,CAFD;IAGD;;IAED,IAAIC,SAAS,GAAG,IAAhB,CA1BmD,CA2BnD;;IACA,IAAIC,QAAQ,GAAGvB,MAAM,CAACoB,MAAP,CAAc;MAAEI,QAAQ,EAAEC,SAAZ;MAAuBC,WAAW,EAAED;IAApC,CAAd,EAA+DT,OAAO,CAACO,QAAvE,CAAf;IAEAvB,MAAM,CAAC2B,gBAAP,CAAwBV,KAAxB,EAA+B;MAC7BW,eAAe,EAAE;QAAEzB,KAAK,EAAEkB;MAAT,CADY;MAE7BQ,UAAU,EAAE;QACVC,GAAG,EAAE,SAASA,GAAT,GAAe;UAClB,OAAOR,SAAP;QACD,CAHS;QAIVS,GAAG,EAAE,SAASA,GAAT,CAAaF,UAAb,EAAyB;UAC5BP,SAAS,GAAGO,UAAZ;QACD;MANS,CAFiB;MAU7BG,KAAK,EAAE;QAAE7B,KAAK,EAAEa,OAAO,CAACiB,IAAjB;QAAuB5B,QAAQ,EAAE;MAAjC,CAVsB;MAW7B6B,IAAI,EAAE;QAAE/B,KAAK,EAAEa,OAAO,CAACmB;MAAjB,CAXuB;MAY7BC,QAAQ,EAAE;QAAEjC,KAAK,EAAEa,OAAO,CAACL,OAAR,IAAmBA,OAA5B;QAAqCN,QAAQ,EAAE;MAA/C,CAZmB;MAa7BgC,MAAM,EAAE;QAAElC,KAAK,EAAEY,KAAT;QAAgBV,QAAQ,EAAE;MAA1B,CAbqB;MAc7BiB,SAAS,EAAE;QACTlB,UAAU,EAAE,IADH;QAET0B,GAAG,EAAE,SAASA,GAAT,GAAe;UAClB,OAAOR,SAAP;QACD;MAJQ,CAdkB;MAoB7BC,QAAQ,EAAE;QACRnB,UAAU,EAAE,IADJ;QAER0B,GAAG,EAAE,SAASA,GAAT,GAAe;UAClB,OAAOP,QAAP;QACD;MAJO,CApBmB;MA0B7BT,WAAW,EAAE;QAAEV,UAAU,EAAE,IAAd;QAAoBD,KAAK,EAAEW;MAA3B,CA1BgB;MA2B7BC,KAAK,EAAE;QACLX,UAAU,EAAE,IADP;QAEL0B,GAAG,EAAE,SAASA,GAAT,GAAe;UAClB,OAAO,KAAKO,MAAZ;QACD;MAJI;IA3BsB,CAA/B;IAkCA,OAAOpB,KAAP;EACD;;EAED,OAAOL,cAAP;AACD,CAvEoB,CAuEnBH,YAvEmB,CAArB;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAG,cAAc,CAACb,SAAf,CAAyBuC,KAAzB,GAAiC,SAASA,KAAT,CAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiDC,OAAjD,EAA0DC,UAA1D,EAAsEC,KAAtE,EAA6E;EAC5G,IAAIC,MAAM,GAAG,IAAb;;EAEA,IAAI,CAAC,KAAKxB,SAAN,IAAmB,CAACuB,KAApB,IAA6B,CAAC,KAAKb,KAAvC,EAA8C;IAC5C,OAAOe,OAAO,CAACC,OAAR,EAAP;EACD;;EAED,IAAI,CAACJ,UAAD,IAAe,CAAC,CAACA,UAAU,CAACK,UAAZ,IAA0B,CAACL,UAAU,CAACK,UAAX,CAAsBC,OAAlD,KAA8D,CAACN,UAAU,CAACO,oBAA7F,EAAmH;IACjH,OAAOJ,OAAO,CAACC,OAAR,EAAP;EACD;;EAED,IAAII,KAAK,GAAG;IACV;IACAC,SAAS,EAAE,KAAKvC,WAFN;IAGV2B,KAAK,EAAEA,KAHG;IAIVC,IAAI,EAAEA,IAJI;IAKVY,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EALD;IAMVhB,KAAK,EAAEA,KAAK,CAACiB,WAAN,EANG;IAOVC,YAAY,EAAE,kBAPJ;IAQVC,OAAO,EAAE,KARC;IASVhB,OAAO,EAAEA,OAAO,IAAIA,OAAO,CAACiB,OAAnB,GAA6BjB,OAAO,CAACkB,KAAR,CAAc,CAAd,CAA7B,GAAgD7D,MAAM,CAACoB,MAAP,CAAc,KAAKQ,eAAL,CAAqBgB,UAArB,CAAd,EAAgDD,OAAhD;IACzD;;EAVU,CAAZ;;EAaA,IAAI,KAAKpB,QAAT,EAAmB;IACjB;IACA6B,KAAK,CAACU,kBAAN,GAA2B,KAAKvC,QAAhC;EACD;;EAED,IAAIwC,aAAa,GAAG;IAClBC,GAAG,EAAE,aAAa,KAAKhC,KAAlB,GAA0B,MAA1B,GAAmCO,YADtB;IAElB0B,IAAI,EAAEb,KAFY;IAGlBc,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,kBAAkB,KAAKnD;IAFhB;EAHS,CAApB;EASA,OAAO,IAAIgC,OAAJ,CAAY,UAAUC,OAAV,EAAmBmB,MAAnB,EAA2B;IAC5CrB,MAAM,CAACV,QAAP,CAAgBgC,IAAhB,CAAqBL,aAArB,EAAoC,UAAUM,GAAV,EAAe;MACjD,IAAIA,GAAJ,EAAS;QACPvB,MAAM,CAACwB,IAAP,CAAY,OAAZ,EAAqBD,GAArB;;QACAF,MAAM,CAACE,GAAD,CAAN;MACD,CAHD,MAGO;QACLrB,OAAO;MACR;IACF,CAPD;EAQD,CATM,EASJuB,KATI,CASE,UAAUC,CAAV,EAAa;IACpB1B,MAAM,CAACZ,IAAP,CAAYuC,IAAZ,CAAiB,oBAAoBhC,KAApB,GAA4B,GAA5B,GAAkCC,IAAlC,GAAyC,sCAAzC,GAAkF8B,CAAnG;EACD,CAXM,CAAP;AAYD,CAlDD;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,cAAc,CAACb,SAAf,CAAyBqE,IAAzB,GAAgC,SAASA,IAAT,CAAc5B,KAAd,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,UAA3C,EAAuDC,KAAvD,EAA8D;EAC5F,OAAO,KAAKP,KAAL,CAAW,gBAAX,EAA6BE,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiDC,OAAjD,EAA0DC,UAA1D,EAAsEC,KAAtE,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAjC,cAAc,CAACb,SAAf,CAAyB2E,KAAzB,GAAiC,SAASA,KAAT,CAAejC,KAAf,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,UAArC,EAAiD;EAChF,OAAO,KAAKwB,IAAL,CAAU,OAAV,EAAmB3B,KAAnB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,UAAzC,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhC,cAAc,CAACb,SAAf,CAAyB4E,IAAzB,GAAgC,SAASA,IAAT,CAAclC,KAAd,EAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,UAApC,EAAgD;EAC9E,OAAO,KAAKwB,IAAL,CAAU,MAAV,EAAkB3B,KAAlB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,UAAxC,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhC,cAAc,CAACb,SAAf,CAAyB0E,IAAzB,GAAgC,SAASA,IAAT,CAAchC,KAAd,EAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,UAApC,EAAgD;EAC9E,OAAO,KAAKwB,IAAL,CAAU,SAAV,EAAqB3B,KAArB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,UAA3C,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhC,cAAc,CAACb,SAAf,CAAyB6E,KAAzB,GAAiC,SAASA,KAAT,CAAenC,KAAf,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,UAArC,EAAiD;EAChF,OAAO,KAAKwB,IAAL,CAAU,OAAV,EAAmB3B,KAAnB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,UAAzC,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhC,cAAc,CAACb,SAAf,CAAyB8E,WAAzB,GAAuC,SAASA,WAAT,CAAqBpC,KAArB,EAA4BC,IAA5B,EAAkCoC,OAAlC,EAA2CC,YAA3C,EAAyDnC,UAAzD,EAAqE;EAC1G,IAAIoC,MAAM,GAAG,IAAb;;EAEA,OAAO,IAAIjC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;IACpC,IAAIiC,OAAO,GAAGH,OAAO,CAACI,GAAR,CAAYC,YAAZ,EAA0BD,GAA1B,CAA8B,UAAUE,MAAV,EAAkB;MAC5D,OAAOpF,MAAM,CAACoB,MAAP,CAAcgE,MAAd,EAAsBL,YAAtB,CAAP;IACD,CAFa,CAAd;IAIA/B,OAAO,CAACgC,MAAM,CAAC1C,KAAP,CAAa,iBAAb,EAAgC,MAAhC,EAAwCG,KAAxC,EAA+CC,IAA/C,EAAqDuC,OAArD,EAA8DrC,UAA9D,CAAD,CAAP;EACD,CANM,CAAP;AAOD,CAVD;AAYA;AACA;AACA;AACA;;;AACAhC,cAAc,CAACb,SAAf,CAAyBsF,OAAzB,GAAmC,SAASA,OAAT,CAAiBpD,IAAjB,EAAuB;EACxD,KAAKD,KAAL,GAAaC,IAAb;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AACArB,cAAc,CAACb,SAAf,CAAyBuF,QAAzB,GAAoC,SAASA,QAAT,CAAkBvE,KAAlB,EAAyB;EAC3D,KAAKsB,MAAL,GAActB,KAAd;AACD,CAFD;AAIA;AACA;AACA;;;AACAH,cAAc,CAACb,SAAf,CAAyBwF,MAAzB,GAAkC,SAASA,MAAT,GAAkB;EAClD,KAAK1D,UAAL,GAAkB,IAAlB;AACD,CAFD;AAIA;AACA;AACA;;;AACAjB,cAAc,CAACb,SAAf,CAAyByF,OAAzB,GAAmC,SAASA,OAAT,GAAmB;EACpD,KAAK3D,UAAL,GAAkB,KAAlB;AACD,CAFD;;AAIA,SAASsD,YAAT,CAAsBC,MAAtB,EAA8B;EAC5B,OAAO;IACL;IACA9B,SAAS,EAAE,IAAIC,IAAJ,CAAS6B,MAAM,CAAC9B,SAAhB,EAA2BE,WAA3B,EAFN;IAGLiC,sBAAsB,EAAEL,MAAM,CAACM,MAAP,CAAcC,eAHjC;IAILC,kBAAkB,EAAER,MAAM,CAACM,MAAP,CAAcG,WAJ7B;IAKLC,kBAAkB,EAAEV,MAAM,CAACM,MAAP,CAAcK,WAL7B;IAMLC,oBAAoB,EAAEZ,MAAM,CAACM,MAAP,CAAcO,aAN/B;IAOLC,gBAAgB,EAAEd,MAAM,CAACM,MAAP,CAAcS,SAP3B;IAQLC,gBAAgB,EAAEhB,MAAM,CAACO,eARpB;IASLU,YAAY,EAAEjB,MAAM,CAACS,WAThB;IAULS,qBAAqB,EAAElB,MAAM,CAACmB,mBAAP,IAA8BC,IAAI,CAACC,KAAL,CAAWrB,MAAM,CAACmB,mBAAP,GAA6B,GAAxC,IAA+C,GAV/F;IAWLG,cAAc,EAAEtB,MAAM,CAACa,aAXlB;IAYLU,UAAU,EAAEvB,MAAM,CAACe,SAZd;IAaLS,WAAW,EAAExB,MAAM,CAACyB,SAbf;IAcLC,cAAc,EAAE1B,MAAM,CAAC2B,eAdlB;IAeLC,eAAe,EAAE5B,MAAM,CAAC6B,gBAfnB;IAgBLC,iBAAiB,EAAE9B,MAAM,CAAC+B,WAhBrB;IAiBLC,kBAAkB,EAAEhC,MAAM,CAACiC,YAjBtB;IAkBLC,MAAM,EAAElC,MAAM,CAACkC,MAlBV;IAmBLC,GAAG,EAAEnC,MAAM,CAACmC,GAnBP;IAoBLC,GAAG,EAAEpC,MAAM,CAACoC,GAAP,IAAchB,IAAI,CAACC,KAAL,CAAWrB,MAAM,CAACoC,GAAP,GAAa,GAAxB,IAA+B;IAClD;;EArBK,CAAP;AAuBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB9G,cAAjB"},"metadata":{},"sourceType":"script"}