{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nfunction EventTarget() {\n  Object.defineProperties(this, {\n    _eventEmitter: {\n      value: new EventEmitter()\n    },\n    _handlers: {\n      value: {}\n    }\n  });\n}\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  return this._eventEmitter.emit(event.type, event);\n};\n\nEventTarget.prototype.addEventListener = function addEventListener() {\n  var _a;\n\n  return (_a = this._eventEmitter).addListener.apply(_a, arguments);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n  var _a;\n\n  return (_a = this._eventEmitter).removeListener.apply(_a, arguments);\n};\n\nEventTarget.prototype._defineEventHandler = function _defineEventHandler(eventName) {\n  var self = this;\n  Object.defineProperty(this, \"on\" + eventName, {\n    get: function () {\n      return self._handlers[eventName];\n    },\n    set: function (newHandler) {\n      var oldHandler = self._handlers[eventName];\n\n      if (oldHandler && (typeof newHandler === 'function' || typeof newHandler === 'undefined' || newHandler === null)) {\n        self._handlers[eventName] = null;\n        self.removeEventListener(eventName, oldHandler);\n      }\n\n      if (typeof newHandler === 'function') {\n        self._handlers[eventName] = newHandler;\n        self.addEventListener(eventName, newHandler);\n      }\n    }\n  });\n};\n\nmodule.exports = EventTarget;","map":{"version":3,"mappings":"AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAAvC;;AAEA,SAASE,WAAT,GAAoB;EAClBC,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;IAC5BC,aAAa,EAAE;MACbC,KAAK,EAAE,IAAIN,YAAJ;IADM,CADa;IAI5BO,SAAS,EAAE;MACTD,KAAK,EAAE;IADE;EAJiB,CAA9B;AAQD;;AAEDJ,WAAW,CAACM,SAAZ,CAAsBC,aAAtB,GAAsC,SAASA,aAAT,CAAuBC,KAAvB,EAA4B;EAChE,OAAO,KAAKL,aAAL,CAAmBM,IAAnB,CAAwBD,KAAK,CAACE,IAA9B,EAAoCF,KAApC,CAAP;AACD,CAFD;;AAIAR,WAAW,CAACM,SAAZ,CAAsBK,gBAAtB,GAAyC,SAASA,gBAAT,GAAyB;;;EAChE,OAAO,WAAKR,aAAL,EAAmBS,WAAnB,CAA8BC,KAA9B,CAA8BC,EAA9B,EAAkCC,SAAlC,CAAP;AACD,CAFD;;AAIAf,WAAW,CAACM,SAAZ,CAAsBU,mBAAtB,GAA4C,SAASA,mBAAT,GAA4B;;;EACtE,OAAO,WAAKb,aAAL,EAAmBc,cAAnB,CAAiCJ,KAAjC,CAAiCC,EAAjC,EAAqCC,SAArC,CAAP;AACD,CAFD;;AAIAf,WAAW,CAACM,SAAZ,CAAsBY,mBAAtB,GAA4C,SAASA,mBAAT,CAA6BC,SAA7B,EAAsC;EAChF,IAAMC,IAAI,GAAG,IAAb;EACAnB,MAAM,CAACoB,cAAP,CAAsB,IAAtB,EAA4B,OAAKF,SAAjC,EAA8C;IAC5CG,GAAG;MACD,OAAOF,IAAI,CAACf,SAAL,CAAec,SAAf,CAAP;IACD,CAH2C;IAI5CI,GAAG,YAACC,UAAD,EAAW;MACZ,IAAMC,UAAU,GAAGL,IAAI,CAACf,SAAL,CAAec,SAAf,CAAnB;;MAEA,IAAIM,UAAU,KACR,OAAOD,UAAP,KAAsB,UAAtB,IACC,OAAOA,UAAP,KAAsB,WADvB,IAECA,UAAU,KAAK,IAHR,CAAd,EAG6B;QAC3BJ,IAAI,CAACf,SAAL,CAAec,SAAf,IAA4B,IAA5B;QACAC,IAAI,CAACJ,mBAAL,CAAyBG,SAAzB,EAAoCM,UAApC;MACD;;MAED,IAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;QACpCJ,IAAI,CAACf,SAAL,CAAec,SAAf,IAA4BK,UAA5B;QACAJ,IAAI,CAACT,gBAAL,CAAsBQ,SAAtB,EAAiCK,UAAjC;MACD;IACF;EAnB2C,CAA9C;AAqBD,CAvBD;;AAyBAE,MAAM,CAACC,OAAP,GAAiB3B,WAAjB","names":["EventEmitter","require","EventTarget","Object","defineProperties","_eventEmitter","value","_handlers","prototype","dispatchEvent","event","emit","type","addEventListener","addListener","apply","_a","arguments","removeEventListener","removeListener","_defineEventHandler","eventName","self","defineProperty","get","set","newHandler","oldHandler","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/@twilio/voice-sdk/lib/twilio/shims/eventtarget.js"],"sourcesContent":["const EventEmitter = require('events').EventEmitter;\n\nfunction EventTarget() {\n  Object.defineProperties(this, {\n    _eventEmitter: {\n      value: new EventEmitter()\n    },\n    _handlers: {\n      value: { }\n    },\n  });\n}\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  return this._eventEmitter.emit(event.type, event);\n};\n\nEventTarget.prototype.addEventListener = function addEventListener() {\n  return this._eventEmitter.addListener(...arguments);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n  return this._eventEmitter.removeListener(...arguments);\n};\n\nEventTarget.prototype._defineEventHandler = function _defineEventHandler(eventName) {\n  const self = this;\n  Object.defineProperty(this, `on${eventName}`, {\n    get() {\n      return self._handlers[eventName];\n    },\n    set(newHandler) {\n      const oldHandler = self._handlers[eventName];\n\n      if (oldHandler\n        && (typeof newHandler === 'function'\n          || typeof newHandler === 'undefined'\n          || newHandler === null)) {\n        self._handlers[eventName] = null;\n        self.removeEventListener(eventName, oldHandler);\n      }\n\n      if (typeof newHandler === 'function') {\n        self._handlers[eventName] = newHandler;\n        self.addEventListener(eventName, newHandler);\n      }\n    }\n  });\n};\n\nmodule.exports = EventTarget;\n"]},"metadata":{},"sourceType":"script"}