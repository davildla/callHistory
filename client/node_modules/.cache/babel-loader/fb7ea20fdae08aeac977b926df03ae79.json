{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js\";\nimport React from 'react';\nimport { SipProvider } from 'react-sip';\nimport PhoneHandler from './PhoneHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIP_USERNAME = '200-dataocean';\nconst SIP_PASSWORD = 'RjH2TV2s9s8FHSpz';\nconst SIP_DOMAIN = 'webrtc.1com.co.il'; // const SIP_SERVER = `wss://${SIP_DOMAIN}/ws`;\n\nconst Phone = () => {\n  return /*#__PURE__*/_jsxDEV(SipProvider, {\n    host: SIP_DOMAIN // port={7443}\n    ,\n    pathname: \"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\n    ,\n    user: SIP_USERNAME,\n    password: SIP_PASSWORD // usually required (e.g. from ENV or props)\n    ,\n    autoRegister: true // true by default, see jssip.UA option register\n    ,\n    autoAnswer: false // automatically answer incoming calls; false by default\n    ,\n    iceRestart: false // force ICE session to restart on every WebRTC call; false by default\n    ,\n    sessionTimersExpires: 120 // value for Session-Expires header; 120 by default\n    ,\n    debug: true // whether to output events to console; false by default\n    ,\n    children: /*#__PURE__*/_jsxDEV(PhoneHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Phone;\nexport default Phone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"names":["React","SipProvider","PhoneHandler","SIP_USERNAME","SIP_PASSWORD","SIP_DOMAIN","Phone"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js"],"sourcesContent":["import React from 'react';\nimport { SipProvider } from 'react-sip';\nimport PhoneHandler from './PhoneHandler';\n\n\nconst SIP_USERNAME = '200-dataocean';\nconst SIP_PASSWORD = 'RjH2TV2s9s8FHSpz';\nconst SIP_DOMAIN = 'webrtc.1com.co.il';\n// const SIP_SERVER = `wss://${SIP_DOMAIN}/ws`;\n\nconst Phone = () => {\n\n    return (\n        <SipProvider\n            host={SIP_DOMAIN}\n            // port={7443}\n            pathname=\"/ws\" // Path in socket URI (e.g. wss://sip.example.com:7443/ws); \"\" by default\n            user={SIP_USERNAME}\n            password={SIP_PASSWORD} // usually required (e.g. from ENV or props)\n            autoRegister={true} // true by default, see jssip.UA option register\n            autoAnswer={false} // automatically answer incoming calls; false by default\n            iceRestart={false} // force ICE session to restart on every WebRTC call; false by default\n            sessionTimersExpires={120} // value for Session-Expires header; 120 by default\n            debug={true} // whether to output events to console; false by default\n        >\n            <PhoneHandler/>\n        </SipProvider>\n    );\n};\n\nexport default Phone;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,YAAY,GAAG,eAArB;AACA,MAAMC,YAAY,GAAG,kBAArB;AACA,MAAMC,UAAU,GAAG,mBAAnB,C,CACA;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAEhB,oBACI,QAAC,WAAD;IACI,IAAI,EAAED,UADV,CAEI;IAFJ;IAGI,QAAQ,EAAC,KAHb,CAGmB;IAHnB;IAII,IAAI,EAAEF,YAJV;IAKI,QAAQ,EAAEC,YALd,CAK4B;IAL5B;IAMI,YAAY,EAAE,IANlB,CAMwB;IANxB;IAOI,UAAU,EAAE,KAPhB,CAOuB;IAPvB;IAQI,UAAU,EAAE,KARhB,CAQuB;IARvB;IASI,oBAAoB,EAAE,GAT1B,CAS+B;IAT/B;IAUI,KAAK,EAAE,IAVX,CAUiB;IAVjB;IAAA,uBAYI,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA;EAZJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAlBD;;KAAME,K;AAoBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}