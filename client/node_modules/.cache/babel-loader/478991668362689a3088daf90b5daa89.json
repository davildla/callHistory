{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Systems/SystemsTable.js\",\n    _s = $RefreshSig$();\n\nimport utils from '../../utils/system/utils';\nimport DataTable from '../../components/DataTable';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SystemsTable(props) {\n  _s();\n\n  const [pageState, setPageState] = useState({\n    isLoading: false,\n    data: [],\n    total: 0,\n    page: 1,\n    pageSize: 25\n  });\n  const navigate = useNavigate();\n  console.log(pageState);\n  const columns = [{\n    field: 'name',\n    headerName: 'שם מערכת',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"b\", {\n      title: \"\\u05E4\\u05EA\\u05D7\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => navigate(`${params.id}`, {\n        state: {\n          name: params.value\n        }\n      }),\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) // editable: true,\n\n  }, {\n    field: 'direction',\n    headerName: 'סוג מערכת',\n    width: 150 // editable: true,\n\n  }, {\n    field: 'gitPath',\n    headerName: 'שם בגיטהאב',\n    width: 110 // editable: true,\n\n  }];\n  useEffect(() => {\n    let isMounted = true;\n\n    const getData = async () => {\n      setPageState(old => ({ ...old,\n        isLoading: true\n      }));\n      return await utils.getSystemsPaginated(pageState.page, pageState.pageSize);\n    };\n\n    getData().then(resp => {\n      if (isMounted) {\n        setPageState(old => ({ ...old,\n          isLoading: false,\n          data: resp.data,\n          total: resp.total\n        }));\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [pageState.page, pageState.pageSize]); // const onFilterChange = useCallback((filterModel) => {\n  //     console.log(filterModel);\n  //     // Here you save the data you need from the filter model\n  //     setQueryOptions({ filterModel: { ...filterModel } });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    rows: pageState.data,\n    rowCount: pageState.total,\n    loading: pageState.isLoading,\n    page: pageState.page - 1,\n    paginationMode: \"server\",\n    columns: columns,\n    pageSize: pageState.pageSize,\n    onPageChange: newPage => setPageState(old => ({ ...old,\n      page: newPage + 1\n    })),\n    disableSelectionOnClick: true // filterMode=\"server\"\n    // onFilterModelChange={onFilterChange}    \n    // checkboxSelection\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SystemsTable, \"RwyZDcs7JqpI2Dc+zkhpLQ88TMY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SystemsTable;\nexport default SystemsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SystemsTable\");","map":{"version":3,"names":["utils","DataTable","React","useState","useEffect","useNavigate","SystemsTable","props","pageState","setPageState","isLoading","data","total","page","pageSize","navigate","console","log","columns","field","headerName","width","renderCell","params","cursor","id","state","name","value","isMounted","getData","old","getSystemsPaginated","then","resp","newPage"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Systems/SystemsTable.js"],"sourcesContent":["import utils from '../../utils/system/utils';\nimport DataTable from '../../components/DataTable';\nimport React, {useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction SystemsTable(props) {\n    const [pageState, setPageState] = useState({\n        isLoading : false,\n        data : [],\n        total : 0,\n        page : 1,\n        pageSize : 25\n    });\n\n    const navigate = useNavigate();\nconsole.log(pageState);\n    const columns = [\n        {\n            field: 'name',\n            headerName: 'שם מערכת',\n            width: 150,\n            renderCell : (params) => (\n                <b\n                    title='פתח'\n                    style={{cursor : 'pointer'}}\n                    onClick={() => navigate(`${params.id}`, {state : {name : params.value}})}\n                >\n                    {params.value}\n                </b>\n            )\n            // editable: true,\n        },\n        {\n            field: 'direction',\n            headerName: 'סוג מערכת',\n            width: 150,\n            // editable: true,\n        },\n        {\n            field: 'gitPath',\n            headerName: 'שם בגיטהאב',\n            width: 110,\n            // editable: true,\n        },\n    ];\n\n    useEffect(()=>{\n        let isMounted = true;\n\n        const getData = async ()=>{\n            setPageState(old => ({...old, isLoading : true}));\n            return await utils.getSystemsPaginated(pageState.page, pageState.pageSize);\n        };\n\n        getData().then(\n            resp =>{\n                if (isMounted) {\n                    setPageState(old => ({...old, isLoading : false, data : resp.data, total : resp.total }));\n                }\n            }\n        );\n        return () => { isMounted = false };\n    },[pageState.page, pageState.pageSize]);\n    \n    // const onFilterChange = useCallback((filterModel) => {\n    //     console.log(filterModel);\n    //     // Here you save the data you need from the filter model\n    //     setQueryOptions({ filterModel: { ...filterModel } });\n    // }, []);\n    \n    return (\n        <DataTable\n            rows={pageState.data}\n            rowCount={pageState.total}\n            loading={pageState.isLoading}\n            page={ pageState.page -1 }\n            paginationMode='server'\n            columns={columns}\n            pageSize={pageState.pageSize}\n            onPageChange={ newPage => setPageState(old => ({ ...old, page : newPage + 1 }))}\n            disableSelectionOnClick\n            // filterMode=\"server\"\n            // onFilterModelChange={onFilterChange}    \n            // checkboxSelection\n        />\n    );\n}\n\nexport default SystemsTable;"],"mappings":"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"},"metadata":{},"sourceType":"module"}