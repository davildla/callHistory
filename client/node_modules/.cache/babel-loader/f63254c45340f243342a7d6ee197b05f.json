{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"displayStaticWrapperAs\", \"onAccept\", \"onClear\", \"onCancel\", \"onDismiss\", \"onSetToday\", \"open\", \"children\", \"components\", \"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { DIALOG_WIDTH } from '../../constants/dimensions';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { getStaticWrapperUtilityClass } from './pickerStaticWrapperClasses';\nimport { PickersActionBar } from '../../../PickersActionBar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    content: ['content']\n  };\n  return composeClasses(slots, getStaticWrapperUtilityClass, classes);\n};\n\nvar PickerStaticWrapperRoot = styled('div', {\n  name: 'MuiPickerStaticWrapper',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({\n  display: 'flex',\n  flexDirection: 'column'\n});\nvar PickerStaticWrapperContent = styled('div', {\n  name: 'MuiPickerStaticWrapper',\n  slot: 'Content',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.content;\n  }\n})(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    overflow: 'hidden',\n    minWidth: DIALOG_WIDTH,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.background.paper\n  };\n});\n\nfunction PickerStaticWrapper(inProps) {\n  var _components$ActionBar;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickerStaticWrapper'\n  });\n\n  var displayStaticWrapperAs = props.displayStaticWrapperAs,\n      onAccept = props.onAccept,\n      onClear = props.onClear,\n      onCancel = props.onCancel,\n      onSetToday = props.onSetToday,\n      children = props.children,\n      components = props.components,\n      componentsProps = props.componentsProps,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = useUtilityClasses(props);\n  var ActionBar = (_components$ActionBar = components == null ? void 0 : components.ActionBar) != null ? _components$ActionBar : PickersActionBar;\n  return /*#__PURE__*/_jsx(WrapperVariantContext.Provider, {\n    value: displayStaticWrapperAs,\n    children: /*#__PURE__*/_jsxs(PickerStaticWrapperRoot, _extends({\n      className: classes.root\n    }, other, {\n      children: [/*#__PURE__*/_jsx(PickerStaticWrapperContent, {\n        className: classes.content,\n        children: children\n      }), /*#__PURE__*/_jsx(ActionBar, _extends({\n        onAccept: onAccept,\n        onClear: onClear,\n        onCancel: onCancel,\n        onSetToday: onSetToday,\n        actions: displayStaticWrapperAs === 'desktop' ? [] : ['cancel', 'accept']\n      }, componentsProps == null ? void 0 : componentsProps.actionBar))]\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? PickerStaticWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode.\n   */\n  displayStaticWrapperAs: PropTypes.oneOf(['desktop', 'mobile']).isRequired,\n  onAccept: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n  onSetToday: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { PickerStaticWrapper };","map":null,"metadata":{},"sourceType":"module"}