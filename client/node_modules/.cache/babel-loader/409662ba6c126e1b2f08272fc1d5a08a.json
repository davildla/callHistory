{"ast":null,"code":"'use strict';\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar C = require('./constants');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Log = require('./log').default;\n\nvar util = require('util');\n\nvar WSTransport = require('./wstransport').default;\n\nvar _require = require('./errors'),\n    GeneralErrors = _require.GeneralErrors,\n    SignalingErrors = _require.SignalingErrors;\n\nvar PSTREAM_VERSION = '1.5';\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\n\nfunction PStream(token, uris, options) {\n  if (!(this instanceof PStream)) {\n    return new PStream(token, uris, options);\n  }\n\n  var defaults = {\n    TransportFactory: WSTransport\n  };\n  options = options || {};\n\n  for (var prop in defaults) {\n    if (prop in options) continue;\n    options[prop] = defaults[prop];\n  }\n\n  this.options = options;\n  this.token = token || '';\n  this.status = 'disconnected';\n  this.gateway = null;\n  this.region = null;\n  this._messageQueue = [];\n  this._uris = uris;\n  this._handleTransportClose = this._handleTransportClose.bind(this);\n  this._handleTransportError = this._handleTransportError.bind(this);\n  this._handleTransportMessage = this._handleTransportMessage.bind(this);\n  this._handleTransportOpen = this._handleTransportOpen.bind(this);\n  this._log = Log.getInstance(); // NOTE(mroberts): EventEmitter requires that we catch all errors.\n\n  this.on('error', function () {});\n  /*\n   *events used by device\n   *'invite',\n   *'ready',\n   *'error',\n   *'offline',\n   *\n   *'cancel',\n   *'presence',\n   *'roster',\n   *'answer',\n   *'candidate',\n   *'hangup'\n   */\n\n  var self = this;\n  this.addListener('ready', function () {\n    self.status = 'ready';\n  });\n  this.addListener('offline', function () {\n    self.status = 'offline';\n  });\n  this.addListener('close', function () {\n    self._log.info('Received \"close\" from server. Destroying PStream...');\n\n    self._destroy();\n  });\n  this.transport = new this.options.TransportFactory(this._uris, {\n    backoffMaxMs: this.options.backoffMaxMs\n  });\n  Object.defineProperties(this, {\n    uri: {\n      enumerable: true,\n      get: function get() {\n        return this.transport.uri;\n      }\n    }\n  });\n  this.transport.on('close', this._handleTransportClose);\n  this.transport.on('error', this._handleTransportError);\n  this.transport.on('message', this._handleTransportMessage);\n  this.transport.on('open', this._handleTransportOpen);\n  this.transport.open();\n  return this;\n}\n\nutil.inherits(PStream, EventEmitter);\n\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', {\n      error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      }\n    });\n    return;\n  } // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n\n\n  this.emit('error', typeof error.code !== 'undefined' ? {\n    error: error\n  } : error);\n};\n\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  var _JSON$parse = JSON.parse(msg.data),\n      type = _JSON$parse.type,\n      _JSON$parse$payload = _JSON$parse.payload,\n      payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function () {\n  var _this = this;\n\n  this.status = 'connected';\n  this.setToken(this.token);\n\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n\n  messages.forEach(function (message) {\n    return _this._publish.apply(_this, _toConsumableArray(message));\n  });\n};\n/**\n * @return {string}\n */\n\n\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\n\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\n\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? {\n      params: params\n    } : {}\n  };\n\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', {\n    sdp: sdp,\n    callsid: callsid\n  }, true);\n};\n\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', {\n    callsid: callsid,\n    dtmf: digits\n  }, true);\n};\n\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? {\n    callsid: callsid,\n    message: message\n  } : {\n    callsid: callsid\n  };\n\n  this._publish('hangup', payload, true);\n};\n\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', {\n    callsid: callsid\n  }, true);\n};\n\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', {\n    sdp: sdp,\n    callsid: callsid\n  }, false);\n};\n\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n\n  this._destroy();\n\n  return this;\n};\n\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n\n  if (!isSent) {\n    this.emit('error', {\n      error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      }\n    });\n\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\n\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n  return info;\n}\n\nmodule.exports = PStream;","map":{"version":3,"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","C","require","EventEmitter","Log","default","util","WSTransport","_require","GeneralErrors","SignalingErrors","PSTREAM_VERSION","PStream","token","uris","options","defaults","TransportFactory","prop","status","gateway","region","_messageQueue","_uris","_handleTransportClose","bind","_handleTransportError","_handleTransportMessage","_handleTransportOpen","_log","getInstance","on","self","addListener","info","_destroy","transport","backoffMaxMs","Object","defineProperties","uri","enumerable","get","open","inherits","prototype","emit","error","code","message","twilioError","ConnectionDisconnected","msg","data","_JSON$parse","JSON","parse","type","_JSON$parse$payload","payload","undefined","ConnectionError","_this","setToken","messages","splice","forEach","_publish","apply","toString","browserinfo","getBrowserInfo","register","mediaCapabilities","regPayload","media","invite","sdp","callsid","preflight","params","twilio","answer","dtmf","digits","hangup","reject","reinvite","removeListener","close","destroy","publish","shouldRetry","stringify","version","isSent","send","TransportError","push","nav","navigator","p","v","RELEASE_VERSION","browser","userAgent","platform","plugin","module","exports"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/twilio-client/es5/twilio/pstream.js"],"sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar C = require('./constants');\nvar EventEmitter = require('events').EventEmitter;\nvar Log = require('./log').default;\nvar util = require('util');\n\nvar WSTransport = require('./wstransport').default;\n\nvar _require = require('./errors'),\n    GeneralErrors = _require.GeneralErrors,\n    SignalingErrors = _require.SignalingErrors;\n\nvar PSTREAM_VERSION = '1.5';\n\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\nfunction PStream(token, uris, options) {\n  if (!(this instanceof PStream)) {\n    return new PStream(token, uris, options);\n  }\n  var defaults = {\n    TransportFactory: WSTransport\n  };\n  options = options || {};\n  for (var prop in defaults) {\n    if (prop in options) continue;\n    options[prop] = defaults[prop];\n  }\n  this.options = options;\n  this.token = token || '';\n  this.status = 'disconnected';\n  this.gateway = null;\n  this.region = null;\n  this._messageQueue = [];\n  this._uris = uris;\n\n  this._handleTransportClose = this._handleTransportClose.bind(this);\n  this._handleTransportError = this._handleTransportError.bind(this);\n  this._handleTransportMessage = this._handleTransportMessage.bind(this);\n  this._handleTransportOpen = this._handleTransportOpen.bind(this);\n\n  this._log = Log.getInstance();\n\n  // NOTE(mroberts): EventEmitter requires that we catch all errors.\n  this.on('error', function () {});\n\n  /*\n   *events used by device\n   *'invite',\n   *'ready',\n   *'error',\n   *'offline',\n   *\n   *'cancel',\n   *'presence',\n   *'roster',\n   *'answer',\n   *'candidate',\n   *'hangup'\n   */\n\n  var self = this;\n\n  this.addListener('ready', function () {\n    self.status = 'ready';\n  });\n\n  this.addListener('offline', function () {\n    self.status = 'offline';\n  });\n\n  this.addListener('close', function () {\n    self._log.info('Received \"close\" from server. Destroying PStream...');\n    self._destroy();\n  });\n\n  this.transport = new this.options.TransportFactory(this._uris, {\n    backoffMaxMs: this.options.backoffMaxMs\n  });\n\n  Object.defineProperties(this, {\n    uri: {\n      enumerable: true,\n      get: function get() {\n        return this.transport.uri;\n      }\n    }\n  });\n\n  this.transport.on('close', this._handleTransportClose);\n  this.transport.on('error', this._handleTransportError);\n  this.transport.on('message', this._handleTransportMessage);\n  this.transport.on('open', this._handleTransportOpen);\n  this.transport.open();\n\n  return this;\n}\n\nutil.inherits(PStream, EventEmitter);\n\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', { error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    return;\n  }\n  // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n  this.emit('error', typeof error.code !== 'undefined' ? { error: error } : error);\n};\n\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  var _JSON$parse = JSON.parse(msg.data),\n      type = _JSON$parse.type,\n      _JSON$parse$payload = _JSON$parse.payload,\n      payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function () {\n  var _this = this;\n\n  this.status = 'connected';\n  this.setToken(this.token);\n\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n  messages.forEach(function (message) {\n    return _this._publish.apply(_this, _toConsumableArray(message));\n  });\n};\n\n/**\n * @return {string}\n */\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\n\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? { params: params } : {}\n  };\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', { sdp: sdp, callsid: callsid }, true);\n};\n\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', { callsid: callsid, dtmf: digits }, true);\n};\n\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? { callsid: callsid, message: message } : { callsid: callsid };\n  this._publish('hangup', payload, true);\n};\n\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', { callsid: callsid }, true);\n};\n\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', { sdp: sdp, callsid: callsid }, false);\n};\n\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n  this._destroy();\n  return this;\n};\n\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n\n  if (!isSent) {\n    this.emit('error', { error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      } });\n\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\n\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n\n  return info;\n}\n\nmodule.exports = PStream;"],"mappings":"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"},"metadata":{},"sourceType":"script"}