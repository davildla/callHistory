{"ast":null,"code":"import _objectWithoutProperties from \"/home/david/Desktop/workSpace/bots-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/components/FormComp/CheckboxGroup.js\";\nimport React from 'react';\nimport TextError from './TextError';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox, FormControlLabel, FormControl, FormLabel, FormHelperText } from '@mui/material';\n\nfunction CheckboxGroup(props) {\n  var _this = this;\n\n  var label = props.label,\n      name = props.name,\n      options = props.options,\n      rest = _objectWithoutProperties(props, [\"label\", \"name\", \"options\"]); // return (\n  //     <div className='form-control'>\n  //         <label>{label}</label>\n  //         <Field name={name} {...rest}>\n  //             {\n  //                 ({ field }) => {\n  //                     return options.map((option, index) => {\n  //                         return(\n  //                             <React.Fragment key={index}>\n  //                                 <input \n  //                                     type='checkbox' \n  //                                     id={option.value} \n  //                                     {...field} \n  //                                     value={option.value} \n  //                                     checked={ field.value.includes(option.value) }\n  //                                 />\n  //                                 <label htmlFor={option.value}>{option.key}</label>\n  //                             </React.Fragment>\n  //                         )\n  //                     })\n  //                 }\n  //             }\n  //         </Field>\n  //         <ErrorMessage name={name} component={TextError} />\n  //     </div>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var field = _ref.field,\n        form = _ref.form;\n    console.log(form.errors[name] && form.touched[name]);\n    console.log('form.errors[name]', form.errors[name]);\n    console.log('form.touched[name]', form.touched[name]);\n    return /*#__PURE__*/React.createElement(FormControl, {\n      error: form.errors[name] && form.touched[name],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      htmlFor: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, label), /*#__PURE__*/React.createElement(FormGroup, Object.assign({}, field, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), options.map(function (option, index) {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        name: name,\n        key: index,\n        id: option.value,\n        value: option.value,\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 50\n          }\n        }),\n        label: option.key,\n        checked: field.value.includes(option.value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 44\n        }\n      });\n    })), form.errors[name] && form.touched[name] ? /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, form.errors[name]) : null);\n  });\n}\n\nexport default CheckboxGroup;","map":{"version":3,"names":["React","TextError","Field","ErrorMessage","FormGroup","Checkbox","FormControlLabel","FormControl","FormLabel","FormHelperText","CheckboxGroup","props","label","name","options","rest","field","form","console","log","errors","touched","map","option","index","value","key","includes"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/components/FormComp/CheckboxGroup.js"],"sourcesContent":["import React from 'react';\nimport TextError from './TextError';\nimport { Field, ErrorMessage } from 'formik';\nimport { FormGroup, Checkbox, FormControlLabel, FormControl, FormLabel, FormHelperText } from '@mui/material';\n\nfunction CheckboxGroup(props) {\n    const { label, name, options, ...rest } = props;\n    // return (\n    //     <div className='form-control'>\n    //         <label>{label}</label>\n    //         <Field name={name} {...rest}>\n    //             {\n    //                 ({ field }) => {\n    //                     return options.map((option, index) => {\n    //                         return(\n    //                             <React.Fragment key={index}>\n    //                                 <input \n    //                                     type='checkbox' \n    //                                     id={option.value} \n    //                                     {...field} \n    //                                     value={option.value} \n    //                                     checked={ field.value.includes(option.value) }\n    //                                 />\n    //                                 <label htmlFor={option.value}>{option.key}</label>\n    //                             </React.Fragment>\n    //                         )\n    //                     })\n    //                 }\n    //             }\n    //         </Field>\n    //         <ErrorMessage name={name} component={TextError} />\n    //     </div>\n    // );\n\n    return (\n        <Field name={name}>\n            {\n                ({field, form}) => {\n                    console.log(form.errors[name] && form.touched[name]);\n                    console.log('form.errors[name]', form.errors[name]);\n                    console.log('form.touched[name]', form.touched[name]);\n                    return <FormControl error={form.errors[name] && form.touched[name]}>\n                        <FormLabel htmlFor={name}>{label}</FormLabel>\n                        <FormGroup {...field} {...rest}>\n                            {\n                                options.map((option, index) => {\n\n                                    return <FormControlLabel \n                                        name={name}\n                                        key={index}\n                                        id={option.value}\n                                        value={option.value} \n                                        control={<Checkbox />} \n                                        label={option.key} \n                                        checked={ field.value.includes(option.value) }\n                                    />\n                                })\n                            }\n                        </FormGroup>\n                        {\n                            form.errors[name] && form.touched[name] ? (\n                                <FormHelperText error >{form.errors[name]}</FormHelperText>\n                            ) : null\n                        } \n                    </FormControl>\n                }\n            }\n        </Field>\n    );\n}\n\nexport default CheckboxGroup;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,gBAA9B,EAAgDC,WAAhD,EAA6DC,SAA7D,EAAwEC,cAAxE,QAA8F,eAA9F;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAAA,IAClBC,KADkB,GACgBD,KADhB,CAClBC,KADkB;EAAA,IACXC,IADW,GACgBF,KADhB,CACXE,IADW;EAAA,IACLC,OADK,GACgBH,KADhB,CACLG,OADK;EAAA,IACOC,IADP,4BACgBJ,KADhB,iCAE1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACI,oBAAC,KAAD;IAAO,IAAI,EAAEE,IAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEQ,gBAAmB;IAAA,IAAjBG,KAAiB,QAAjBA,KAAiB;IAAA,IAAVC,IAAU,QAAVA,IAAU;IACfC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAYP,IAAZ,KAAqBI,IAAI,CAACI,OAAL,CAAaR,IAAb,CAAjC;IACAK,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAI,CAACG,MAAL,CAAYP,IAAZ,CAAjC;IACAK,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAI,CAACI,OAAL,CAAaR,IAAb,CAAlC;IACA,oBAAO,oBAAC,WAAD;MAAa,KAAK,EAAEI,IAAI,CAACG,MAAL,CAAYP,IAAZ,KAAqBI,IAAI,CAACI,OAAL,CAAaR,IAAb,CAAzC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACH,oBAAC,SAAD;MAAW,OAAO,EAAEA,IAApB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA2BD,KAA3B,CADG,eAEH,oBAAC,SAAD,oBAAeI,KAAf,EAA0BD,IAA1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IAEQD,OAAO,CAACQ,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;MAE3B,oBAAO,oBAAC,gBAAD;QACH,IAAI,EAAEX,IADH;QAEH,GAAG,EAAEW,KAFF;QAGH,EAAE,EAAED,MAAM,CAACE,KAHR;QAIH,KAAK,EAAEF,MAAM,CAACE,KAJX;QAKH,OAAO,eAAE,oBAAC,QAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALN;QAMH,KAAK,EAAEF,MAAM,CAACG,GANX;QAOH,OAAO,EAAGV,KAAK,CAACS,KAAN,CAAYE,QAAZ,CAAqBJ,MAAM,CAACE,KAA5B,CAPP;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAP;IASH,CAXD,CAFR,CAFG,EAmBCR,IAAI,CAACG,MAAL,CAAYP,IAAZ,KAAqBI,IAAI,CAACI,OAAL,CAAaR,IAAb,CAArB,gBACI,oBAAC,cAAD;MAAgB,KAAK,MAArB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAwBI,IAAI,CAACG,MAAL,CAAYP,IAAZ,CAAxB,CADJ,GAEI,IArBL,CAAP;EAwBH,CA9BT,CADJ;AAmCH;;AAED,eAAeH,aAAf"},"metadata":{},"sourceType":"module"}