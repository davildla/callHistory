{"ast":null,"code":"/**\n * Exception class.\n * @class\n * @name Exception\n * @exports Exception as Twilio.Exception\n * @memberOf Twilio\n * @param {string} message The exception message\n */\nfunction TwilioException(message) {\n  if (!(this instanceof TwilioException)) {\n    return new TwilioException(message);\n  }\n\n  this.message = message;\n}\n/**\n * Returns the exception message.\n *\n * @return {string} The exception message.\n */\n\n\nTwilioException.prototype.toString = function () {\n  return \"Twilio.Exception: \" + this.message;\n};\n\nfunction average(values) {\n  return values && values.length ? values.reduce(function (t, v) {\n    return t + v;\n  }) / values.length : 0;\n}\n\nfunction difference(lefts, rights, getKey) {\n  getKey = getKey || function (a) {\n    return a;\n  };\n\n  var rightKeys = new Set(rights.map(getKey));\n  return lefts.filter(function (left) {\n    return !rightKeys.has(getKey(left));\n  });\n}\n\nfunction isElectron(navigator) {\n  return !!navigator.userAgent.match('Electron');\n}\n\nfunction isChrome(window, navigator) {\n  var isCriOS = !!navigator.userAgent.match('CriOS');\n  var isHeadlessChrome = !!navigator.userAgent.match('HeadlessChrome');\n  var isGoogle = typeof window.chrome !== 'undefined' && navigator.vendor === 'Google Inc.' && navigator.userAgent.indexOf('OPR') === -1 && navigator.userAgent.indexOf('Edge') === -1;\n  return isCriOS || isElectron(navigator) || isGoogle || isHeadlessChrome;\n}\n\nfunction isFirefox(navigator) {\n  navigator = navigator || (typeof window === 'undefined' ? global.navigator : window.navigator);\n  return !!navigator && typeof navigator.userAgent === 'string' && /firefox|fxios/i.test(navigator.userAgent);\n}\n\nfunction isLegacyEdge(navigator) {\n  navigator = navigator || (typeof window === 'undefined' ? global.navigator : window.navigator);\n  return !!navigator && typeof navigator.userAgent === 'string' && /edge\\/\\d+/i.test(navigator.userAgent);\n}\n\nfunction isSafari(navigator) {\n  return !!navigator.vendor && navigator.vendor.indexOf('Apple') !== -1 && navigator.userAgent && navigator.userAgent.indexOf('CriOS') === -1 && navigator.userAgent.indexOf('FxiOS') === -1;\n}\n\nfunction isUnifiedPlanDefault(window, navigator, PeerConnection, RtpTransceiver) {\n  if (typeof window === 'undefined' || typeof navigator === 'undefined' || typeof PeerConnection === 'undefined' || typeof RtpTransceiver === 'undefined' || typeof PeerConnection.prototype === 'undefined' || typeof RtpTransceiver.prototype === 'undefined') {\n    return false;\n  }\n\n  if (isChrome(window, navigator) && PeerConnection.prototype.addTransceiver) {\n    var pc = new PeerConnection();\n    var isUnifiedPlan = true;\n\n    try {\n      pc.addTransceiver('audio');\n    } catch (e) {\n      isUnifiedPlan = false;\n    }\n\n    pc.close();\n    return isUnifiedPlan;\n  } else if (isFirefox(navigator)) {\n    return true;\n  } else if (isSafari(navigator)) {\n    return 'currentDirection' in RtpTransceiver.prototype;\n  } // Edge currently does not support unified plan.\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/17733189/\n  // https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/34451998-sdp-unified-plan\n\n\n  return false;\n}\n\nfunction queryToJson(params) {\n  if (!params) {\n    return '';\n  }\n\n  return params.split('&').reduce(function (output, pair) {\n    var parts = pair.split('=');\n    var key = parts[0];\n    var value = decodeURIComponent((parts[1] || '').replace(/\\+/g, '%20'));\n\n    if (key) {\n      output[key] = value;\n    }\n\n    return output;\n  }, {});\n}\n/**\n * Map a list to an array of arrays, and return the flattened result.\n * @param {Array<*>|Set<*>|Map<*>} list\n * @param {function(*): Array<*>} [mapFn]\n * @returns Array<*>\n */\n\n\nfunction flatMap(list, mapFn) {\n  var listArray = list instanceof Map || list instanceof Set ? Array.from(list.values()) : list;\n\n  mapFn = mapFn || function (item) {\n    return item;\n  };\n\n  return listArray.reduce(function (flattened, item) {\n    var mapped = mapFn(item);\n    return flattened.concat(mapped);\n  }, []);\n}\n\nexports.Exception = TwilioException;\nexports.average = average;\nexports.difference = difference;\nexports.isElectron = isElectron;\nexports.isChrome = isChrome;\nexports.isFirefox = isFirefox;\nexports.isLegacyEdge = isLegacyEdge;\nexports.isSafari = isSafari;\nexports.isUnifiedPlanDefault = isUnifiedPlanDefault;\nexports.queryToJson = queryToJson;\nexports.flatMap = flatMap; //# sourceMappingURL=util.js.map","map":null,"metadata":{},"sourceType":"script"}