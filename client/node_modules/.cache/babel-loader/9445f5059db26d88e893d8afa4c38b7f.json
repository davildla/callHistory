{"ast":null,"code":"\"use strict\";\n/* tslint:disable max-classes-per-file max-line-length */\n\n/**\n * @packageDocumentation\n * @module Voice\n * @publicapi\n * @internal\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // TypeScript doesn't allow extending Error so we need to run constructor logic on every one of these\n// individually. Ideally this logic would be run in a constructor on a TwilioError class but\n// due to this limitation TwilioError is an interface.\n// https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes\n\nfunction construct(context, messageOrError, originalError) {\n  if (typeof messageOrError === 'string') {\n    context.message = messageOrError;\n\n    if (originalError instanceof Error) {\n      context.originalError = originalError;\n    }\n  } else if (messageOrError instanceof Error) {\n    context.originalError = messageOrError;\n  }\n}\n\nvar AuthorizationErrors;\n\n(function (AuthorizationErrors) {\n  var AccessTokenInvalid =\n  /** @class */\n  function (_super) {\n    __extends(AccessTokenInvalid, _super);\n\n    function AccessTokenInvalid(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 20101;\n      _this.description = 'Invalid access token';\n      _this.explanation = 'Twilio was unable to validate your Access Token';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, AuthorizationErrors.AccessTokenInvalid.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return AccessTokenInvalid;\n  }(Error);\n\n  AuthorizationErrors.AccessTokenInvalid = AccessTokenInvalid;\n\n  var AccessTokenExpired =\n  /** @class */\n  function (_super) {\n    __extends(AccessTokenExpired, _super);\n\n    function AccessTokenExpired(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 20104;\n      _this.description = 'Access token expired or expiration date invalid';\n      _this.explanation = 'The Access Token provided to the Twilio API has expired, the expiration time specified in the token was invalid, or the expiration time specified was too far in the future';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, AuthorizationErrors.AccessTokenExpired.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return AccessTokenExpired;\n  }(Error);\n\n  AuthorizationErrors.AccessTokenExpired = AccessTokenExpired;\n\n  var AuthenticationFailed =\n  /** @class */\n  function (_super) {\n    __extends(AuthenticationFailed, _super);\n\n    function AuthenticationFailed(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 20151;\n      _this.description = 'Authentication Failed';\n      _this.explanation = 'The Authentication with the provided JWT failed';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, AuthorizationErrors.AuthenticationFailed.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return AuthenticationFailed;\n  }(Error);\n\n  AuthorizationErrors.AuthenticationFailed = AuthenticationFailed;\n})(AuthorizationErrors = exports.AuthorizationErrors || (exports.AuthorizationErrors = {}));\n\nvar ClientErrors;\n\n(function (ClientErrors) {\n  var BadRequest =\n  /** @class */\n  function (_super) {\n    __extends(BadRequest, _super);\n\n    function BadRequest(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 31400;\n      _this.description = 'Bad Request (HTTP/SIP)';\n      _this.explanation = 'The request could not be understood due to malformed syntax.';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, ClientErrors.BadRequest.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return BadRequest;\n  }(Error);\n\n  ClientErrors.BadRequest = BadRequest;\n})(ClientErrors = exports.ClientErrors || (exports.ClientErrors = {}));\n\nvar GeneralErrors;\n\n(function (GeneralErrors) {\n  var UnknownError =\n  /** @class */\n  function (_super) {\n    __extends(UnknownError, _super);\n\n    function UnknownError(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 31000;\n      _this.description = 'Unknown Error';\n      _this.explanation = 'An unknown error has occurred. See error details for more information.';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, GeneralErrors.UnknownError.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return UnknownError;\n  }(Error);\n\n  GeneralErrors.UnknownError = UnknownError;\n\n  var ConnectionError =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionError, _super);\n\n    function ConnectionError(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 31005;\n      _this.description = 'Connection error';\n      _this.explanation = 'A connection error occurred during the call';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, GeneralErrors.ConnectionError.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return ConnectionError;\n  }(Error);\n\n  GeneralErrors.ConnectionError = ConnectionError;\n\n  var TransportError =\n  /** @class */\n  function (_super) {\n    __extends(TransportError, _super);\n\n    function TransportError(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 31009;\n      _this.description = 'Transport error';\n      _this.explanation = 'No transport available to send or receive messages';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, GeneralErrors.TransportError.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return TransportError;\n  }(Error);\n\n  GeneralErrors.TransportError = TransportError;\n})(GeneralErrors = exports.GeneralErrors || (exports.GeneralErrors = {}));\n\nvar SignalingErrors;\n\n(function (SignalingErrors) {\n  var ConnectionError =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionError, _super);\n\n    function ConnectionError(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = [];\n      _this.code = 53000;\n      _this.description = 'Signaling connection error';\n      _this.explanation = 'Raised whenever a signaling connection error occurs that is not covered by a more specific error code.';\n      _this.solutions = [];\n      Object.setPrototypeOf(_this, SignalingErrors.ConnectionError.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return ConnectionError;\n  }(Error);\n\n  SignalingErrors.ConnectionError = ConnectionError;\n\n  var ConnectionDisconnected =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionDisconnected, _super);\n\n    function ConnectionDisconnected(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = ['The device running your application lost its Internet connection.'];\n      _this.code = 53001;\n      _this.description = 'Signaling connection disconnected';\n      _this.explanation = 'Raised whenever the signaling connection is unexpectedly disconnected.';\n      _this.solutions = ['Ensure the device running your application has access to a stable Internet connection.'];\n      Object.setPrototypeOf(_this, SignalingErrors.ConnectionDisconnected.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return ConnectionDisconnected;\n  }(Error);\n\n  SignalingErrors.ConnectionDisconnected = ConnectionDisconnected;\n})(SignalingErrors = exports.SignalingErrors || (exports.SignalingErrors = {}));\n\nvar MediaErrors;\n\n(function (MediaErrors) {\n  var ClientLocalDescFailed =\n  /** @class */\n  function (_super) {\n    __extends(ClientLocalDescFailed, _super);\n\n    function ClientLocalDescFailed(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = ['The Client may not be using a supported WebRTC implementation.', 'The Client may not have the necessary resources to create or apply a new media description.'];\n      _this.code = 53400;\n      _this.description = 'Client is unable to create or apply a local media description';\n      _this.explanation = 'Raised whenever a Client is unable to create or apply a local media description.';\n      _this.solutions = ['If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation.'];\n      Object.setPrototypeOf(_this, MediaErrors.ClientLocalDescFailed.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return ClientLocalDescFailed;\n  }(Error);\n\n  MediaErrors.ClientLocalDescFailed = ClientLocalDescFailed;\n\n  var ClientRemoteDescFailed =\n  /** @class */\n  function (_super) {\n    __extends(ClientRemoteDescFailed, _super);\n\n    function ClientRemoteDescFailed(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = ['The Client may not be using a supported WebRTC implementation.', 'The Client may be connecting peer-to-peer with another Participant that is not using a supported WebRTC implementation.', 'The Client may not have the necessary resources to apply a new media description.'];\n      _this.code = 53402;\n      _this.description = 'Client is unable to apply a remote media description';\n      _this.explanation = 'Raised whenever the Client receives a remote media description but is unable to apply it.';\n      _this.solutions = ['If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation.'];\n      Object.setPrototypeOf(_this, MediaErrors.ClientRemoteDescFailed.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return ClientRemoteDescFailed;\n  }(Error);\n\n  MediaErrors.ClientRemoteDescFailed = ClientRemoteDescFailed;\n\n  var ConnectionError =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionError, _super);\n\n    function ConnectionError(messageOrError, originalError) {\n      var _this = _super.call(this, '') || this;\n\n      _this.causes = ['The Client was unable to establish a media connection.', 'A media connection which was active failed liveliness checks.'];\n      _this.code = 53405;\n      _this.description = 'Media connection failed';\n      _this.explanation = 'Raised by the Client or Server whenever a media connection fails.';\n      _this.solutions = ['If the problem persists, try connecting to another region.', 'Check your Client\\'s network connectivity.', 'If you\\'ve provided custom ICE Servers then ensure that the URLs and credentials are valid.'];\n      Object.setPrototypeOf(_this, MediaErrors.ConnectionError.prototype);\n      construct(_this, messageOrError, originalError);\n      return _this;\n    }\n\n    return ConnectionError;\n  }(Error);\n\n  MediaErrors.ConnectionError = ConnectionError;\n})(MediaErrors = exports.MediaErrors || (exports.MediaErrors = {}));\n/**\n * @private\n */\n\n\nexports.errorsByCode = new Map([[20101, AuthorizationErrors.AccessTokenInvalid], [20104, AuthorizationErrors.AccessTokenExpired], [20151, AuthorizationErrors.AuthenticationFailed], [31400, ClientErrors.BadRequest], [31000, GeneralErrors.UnknownError], [31005, GeneralErrors.ConnectionError], [31009, GeneralErrors.TransportError], [53000, SignalingErrors.ConnectionError], [53001, SignalingErrors.ConnectionDisconnected], [53400, MediaErrors.ClientLocalDescFailed], [53402, MediaErrors.ClientRemoteDescFailed], [53405, MediaErrors.ConnectionError]]);\nObject.freeze(exports.errorsByCode); //# sourceMappingURL=generated.js.map","map":null,"metadata":{},"sourceType":"script"}