{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Deferred Promise\n */\n\nvar Deferred =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   */\n  function Deferred() {\n    var _this = this;\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n\n  Object.defineProperty(Deferred.prototype, \"promise\", {\n    /**\n     * @returns The {@link Deferred} Promise\n     */\n    get: function () {\n      return this._promise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Rejects this promise\n   */\n\n  Deferred.prototype.reject = function (reason) {\n    this._reject(reason);\n  };\n  /**\n   * Resolves this promise\n   */\n\n\n  Deferred.prototype.resolve = function (value) {\n    this._resolve(value);\n  };\n\n  return Deferred;\n}();\n\nexports.default = Deferred;","map":{"version":3,"mappings":";AAAA;;;;;;;;;AAMA;;;;AAGA;AAAA;AAAA;EAgBE;;;EAGA;IAAA;;IACE,KAAKA,QAAL,GAAgB,IAAIC,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAgB;MAC/CC,KAAI,CAACC,QAAL,GAAgBH,OAAhB;MACAE,KAAI,CAACE,OAAL,GAAeH,MAAf;IACD,CAHe,CAAhB;EAID;;EAKDI,sBAAIC,kBAAJ,EAAI,SAAJ,EAAW;IAHX;;;SAGA;MACE,OAAO,KAAKR,QAAZ;IACD,CAFU;oBAAA;;EAAA,CAAX;EAIA;;;;EAGAQ,sCAAOC,MAAP,EAAmB;IACjB,KAAKH,OAAL,CAAaG,MAAb;EACD,CAFD;EAIA;;;;;EAGAD,uCAAQE,KAAR,EAAmB;IACjB,KAAKL,QAAL,CAAcK,KAAd;EACD,CAFD;;EAGF;AAAC,CA9CD","names":["_promise","Promise","resolve","reject","_this","_resolve","_reject","Object","Deferred","reason","value"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/twilio-client/lib/twilio/deferred.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n\n/**\n * Deferred Promise\n */\nexport default class Deferred {\n  /**\n   * This {@link Deferred} Promise\n   */\n  private readonly _promise: Promise<any>;\n\n  /**\n   * The Promise's reject method.\n   */\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The Promise's resolve method.\n   */\n  private _resolve: (value?: any) => void;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this._promise = new Promise<any>((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * @returns The {@link Deferred} Promise\n   */\n  get promise(): Promise<any> {\n    return this._promise;\n  }\n\n  /**\n   * Rejects this promise\n   */\n  reject(reason?: any): void {\n    this._reject(reason);\n  }\n\n  /**\n   * Resolves this promise\n   */\n  resolve(value?: any): void {\n    this._resolve(value);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}