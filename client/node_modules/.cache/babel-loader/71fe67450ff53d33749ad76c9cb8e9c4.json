{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Device } from 'twilio-client';\nimport utils from '../utils/phoneUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Phone(props) {\n  _s();\n\n  const [identity, setIdentity] = useState('');\n  const [status, setStatus] = useState('');\n  const [ready, setReady] = useState(false);\n  const [device, setDevice] = useState(null);\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      const twilioDevice = new Device();\n      setDevice(twilioDevice);\n      twilioDevice.on('incoming', connection => {\n        // immediately accepts incoming connection\n        connection.accept();\n        setStatus(connection.status());\n      });\n      twilioDevice.on('ready', device => {\n        setStatus(\"device ready\");\n        setReady(true);\n      });\n      twilioDevice.on('connect', connection => {\n        setStatus(connection.status());\n\n        if (\"phoneNumber\" in connection.message) {\n          setStatus(\"In call with \" + connection.message.phoneNumber);\n        } else {\n          // This is a call from a website user to a support agent\n          setStatus(\"In call with support\");\n        }\n      });\n      twilioDevice.on('disconnect', connection => {\n        setStatus(connection.status());\n      });\n      twilioDevice.on(\"error\", error => {\n        console.log(\"Twilio.Device Error: \" + error.message);\n        setStatus(\"ERROR: \" + error.message);\n      });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: identity,\n      placeholder: \"phone\",\n      onChange: e => setIdentity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"call\",\n      onClick: async () => {\n        let resp = await utils.generateToken('david');\n        device.setup(resp.token); // device.audio.incoming(false);\n        // device.audio.outgoing(false);\n        // device.audio.disconnect(false);\n\n        let connection = Device.connect({\n          phone: '972534217014'\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Phone, \"c+4FrySvZW77q4z7jd/fAefnBak=\");\n\n_c = Phone;\nexport default Phone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"names":["React","useState","useEffect","Device","utils","Phone","props","identity","setIdentity","status","setStatus","ready","setReady","device","setDevice","isMounted","twilioDevice","on","connection","accept","message","phoneNumber","error","console","log","e","target","value","resp","generateToken","setup","token","connect","phone"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Device } from 'twilio-client'\nimport utils from '../utils/phoneUtils';\n\nfunction Phone(props) {\n    const [identity, setIdentity] = useState('');\n    const [status, setStatus] = useState('');\n    const [ready, setReady] = useState(false);\n    const [device, setDevice] = useState(null);\n\n    useEffect(()=>{\n        let isMounted = true;\n\n        if (isMounted) {\n            const twilioDevice = new Device(); \n            setDevice(twilioDevice);\n\n            twilioDevice.on('incoming', connection => {\n                // immediately accepts incoming connection\n                connection.accept();\n                \n                setStatus(connection.status());\n            });\n                \n            twilioDevice.on('ready', device => {\n                setStatus(\"device ready\");\n                setReady(true);\n            });\n            \n            twilioDevice.on('connect', connection => {\n                setStatus(connection.status())\n                if (\"phoneNumber\" in connection.message) {\n                    setStatus(\"In call with \" + connection.message.phoneNumber);\n                } else {\n                    // This is a call from a website user to a support agent\n                    setStatus(\"In call with support\");\n                }\n            });\n            \n            twilioDevice.on('disconnect', connection => {\n                setStatus(connection.status())\n            });\n\n            twilioDevice.on(\"error\", (error) => {\n                console.log(\"Twilio.Device Error: \" + error.message);\n                setStatus(\"ERROR: \" + error.message);\n            });\n        }\n\n        return () => { isMounted = false };\n    },[]);\n    \n\n    return (\n        <div>\n                                <input \n                        type=\"text\" \n                        value={identity}\n                        placeholder=\"phone\"\n                        onChange={(e) => setIdentity(e.target.value)}\n                    />\n                    <input \n                        type=\"button\" \n                        value=\"call\" \n                        onClick={async () => {\n                            let resp = await utils.generateToken('david');\n                            device.setup(resp.token);\n                            // device.audio.incoming(false);\n                            // device.audio.outgoing(false);\n                            // device.audio.disconnect(false);\n                            let connection = Device.connect({\n                                phone: '972534217014'\n                            });\n                        }}\n                    />\n            <p>{ status }</p>\n        </div>\n    );\n}\n\nexport default Phone;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EAClB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;EAEAC,SAAS,CAAC,MAAI;IACV,IAAIa,SAAS,GAAG,IAAhB;;IAEA,IAAIA,SAAJ,EAAe;MACX,MAAMC,YAAY,GAAG,IAAIb,MAAJ,EAArB;MACAW,SAAS,CAACE,YAAD,CAAT;MAEAA,YAAY,CAACC,EAAb,CAAgB,UAAhB,EAA4BC,UAAU,IAAI;QACtC;QACAA,UAAU,CAACC,MAAX;QAEAT,SAAS,CAACQ,UAAU,CAACT,MAAX,EAAD,CAAT;MACH,CALD;MAOAO,YAAY,CAACC,EAAb,CAAgB,OAAhB,EAAyBJ,MAAM,IAAI;QAC/BH,SAAS,CAAC,cAAD,CAAT;QACAE,QAAQ,CAAC,IAAD,CAAR;MACH,CAHD;MAKAI,YAAY,CAACC,EAAb,CAAgB,SAAhB,EAA2BC,UAAU,IAAI;QACrCR,SAAS,CAACQ,UAAU,CAACT,MAAX,EAAD,CAAT;;QACA,IAAI,iBAAiBS,UAAU,CAACE,OAAhC,EAAyC;UACrCV,SAAS,CAAC,kBAAkBQ,UAAU,CAACE,OAAX,CAAmBC,WAAtC,CAAT;QACH,CAFD,MAEO;UACH;UACAX,SAAS,CAAC,sBAAD,CAAT;QACH;MACJ,CARD;MAUAM,YAAY,CAACC,EAAb,CAAgB,YAAhB,EAA8BC,UAAU,IAAI;QACxCR,SAAS,CAACQ,UAAU,CAACT,MAAX,EAAD,CAAT;MACH,CAFD;MAIAO,YAAY,CAACC,EAAb,CAAgB,OAAhB,EAA0BK,KAAD,IAAW;QAChCC,OAAO,CAACC,GAAR,CAAY,0BAA0BF,KAAK,CAACF,OAA5C;QACAV,SAAS,CAAC,YAAYY,KAAK,CAACF,OAAnB,CAAT;MACH,CAHD;IAIH;;IAED,OAAO,MAAM;MAAEL,SAAS,GAAG,KAAZ;IAAmB,CAAlC;EACH,CAxCQ,EAwCP,EAxCO,CAAT;EA2CA,oBACI;IAAA,wBACwB;MACR,IAAI,EAAC,MADG;MAER,KAAK,EAAER,QAFC;MAGR,WAAW,EAAC,OAHJ;MAIR,QAAQ,EAAGkB,CAAD,IAAOjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;IAJpB;MAAA;MAAA;MAAA;IAAA,QADxB,eAOY;MACI,IAAI,EAAC,QADT;MAEI,KAAK,EAAC,MAFV;MAGI,OAAO,EAAE,YAAY;QACjB,IAAIC,IAAI,GAAG,MAAMxB,KAAK,CAACyB,aAAN,CAAoB,OAApB,CAAjB;QACAhB,MAAM,CAACiB,KAAP,CAAaF,IAAI,CAACG,KAAlB,EAFiB,CAGjB;QACA;QACA;;QACA,IAAIb,UAAU,GAAGf,MAAM,CAAC6B,OAAP,CAAe;UAC5BC,KAAK,EAAE;QADqB,CAAf,CAAjB;MAGH;IAZL;MAAA;MAAA;MAAA;IAAA,QAPZ,eAqBI;MAAA,UAAKxB;IAAL;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH;;GA1EQJ,K;;KAAAA,K;AA4ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}