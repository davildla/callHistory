{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-inner-declarations */\nimport * as pegGrammar from \"./pegjs/dist/grammar.js\";\n/**\n * Grammar.\n * @internal\n */\n\nexport var Grammar;\n\n(function (Grammar) {\n  /**\n   * Parse.\n   * @param input -\n   * @param startRule -\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function parse(input, startRule) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = {\n      startRule\n    };\n\n    try {\n      pegGrammar.parse(input, options);\n    } catch (e) {\n      options.data = -1;\n    }\n\n    return options.data;\n  }\n\n  Grammar.parse = parse;\n  /**\n   * Parse the given string and returns a SIP.NameAddrHeader instance or undefined if\n   * it is an invalid NameAddrHeader.\n   * @param name_addr_header -\n   */\n\n  function nameAddrHeaderParse(nameAddrHeader) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parsedNameAddrHeader = Grammar.parse(nameAddrHeader, \"Name_Addr_Header\");\n    return parsedNameAddrHeader !== -1 ? parsedNameAddrHeader : undefined;\n  }\n\n  Grammar.nameAddrHeaderParse = nameAddrHeaderParse;\n  /**\n   * Parse the given string and returns a SIP.URI instance or undefined if\n   * it is an invalid URI.\n   * @param uri -\n   */\n\n  function URIParse(uri) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parsedUri = Grammar.parse(uri, \"SIP_URI\");\n    return parsedUri !== -1 ? parsedUri : undefined;\n  }\n\n  Grammar.URIParse = URIParse;\n})(Grammar = Grammar || (Grammar = {}));","map":null,"metadata":{},"sourceType":"module"}