{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/components/ModalComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DialogContentText, DialogTitle, Container } from '@mui/material';\nimport { Dialog, DialogActions, DialogContent, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalTemplate(props) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const body = props.body;\n  const title = props.title;\n  const content = props.content;\n  const makeTrigerBtn = props.makeTrigerBtn; // a func that get props json and create a component\n\n  const openController = props.openController; // in some case we want to have more control on open and setOpen therefore the parent comp can send them as well\n\n  const fullWidth = props.fullWidth || false;\n  const maxWidth = props.maxWidth || \"lg\";\n\n  const handleClickOpen = () => {\n    if (openController) {\n      // if we got open and set open from parent use them\n      openController.setOpen(true);\n    } else {\n      // use the default\n      setOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    if (openController) {\n      openController.setOpen(false);\n    } else {\n      setOpen(false);\n    }\n\n    if (props.closeCallBack) props.closeCallBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [makeTrigerBtn ? makeTrigerBtn({\n      onClick: handleClickOpen\n    }) : null, /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openController ? openController.open : open,\n      style: {\n        'direction': 'rtl'\n      },\n      fullWidth: fullWidth,\n      onClose: handleClose,\n      maxWidth: maxWidth,\n      children: [title ? /*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              float: 'right',\n              flexGrow: 1\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              visibility: 'hidden'\n            },\n            children: \"________\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            title: \"\\u05E1\\u05D2\\u05D5\\u05E8\",\n            style: {\n              float: 'left',\n              color: 'red',\n              cursor: 'pointer'\n            },\n            onClick: handleClose,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), content ? /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalTemplate, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = ModalTemplate;\nexport default ModalTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTemplate\");","map":{"version":3,"names":["React","useState","DialogContentText","DialogTitle","Container","Dialog","DialogActions","DialogContent","Divider","ModalTemplate","props","open","setOpen","body","title","content","makeTrigerBtn","openController","fullWidth","maxWidth","handleClickOpen","handleClose","closeCallBack","onClick","float","flexGrow","visibility","color","cursor"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/components/ModalComp.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {DialogContentText, DialogTitle, Container} from '@mui/material';\nimport {Dialog, DialogActions, DialogContent, Divider} from '@mui/material';\n\n\nfunction ModalTemplate(props) {\n    const [open, setOpen] = useState(false);\n    \n    const body = props.body;\n    const title = props.title;\n    const content = props.content;\n    const makeTrigerBtn = props.makeTrigerBtn; // a func that get props json and create a component\n    const openController = props.openController; // in some case we want to have more control on open and setOpen therefore the parent comp can send them as well\n    const fullWidth = props.fullWidth || false;\n    const maxWidth = props.maxWidth || \"lg\";\n\n    const handleClickOpen = () => {\n        if(openController){ // if we got open and set open from parent use them\n            openController.setOpen(true)\n        } else { // use the default\n            setOpen(true);\n        }\n    };\n\n    const handleClose = () => {\n        if(openController){\n            openController.setOpen(false)\n        } else {\n            setOpen(false);\n        }\n        if (props.closeCallBack) props.closeCallBack();\n    };\n    return (\n        <div>\n            {makeTrigerBtn ? makeTrigerBtn({onClick : handleClickOpen}) : null}\n        <Dialog\n            open={openController ? openController.open : open}\n            style ={{'direction' : 'rtl'}}\n            fullWidth={fullWidth}\n            onClose={handleClose}\n            maxWidth={maxWidth}\n        >\n            {\n                title ? (\n                    <DialogTitle id=\"alert-dialog-title\">\n                            <div>\n                                <b style={{float : 'right',  flexGrow: 1 }}>{title}</b>\n                                <b style={{visibility : 'hidden'}}>________</b> {/* space between title to close btn */}\n                                <b \n                                    title='סגור'\n                                    style={{float : 'left', color : 'red', cursor  : 'pointer'}}\n                                    onClick={handleClose}\n                                >\n                                    x\n                                </b>\n                            </div>\n                    </DialogTitle>\n                ) : null\n            }\n            <Divider/>\n            {\n                content ? (\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            {content}\n                        </DialogContentText>\n                    </DialogContent>\n                ) : null\n            }\n\n            <DialogActions> \n                <Container>\n                    {body}\n                </Container>\n            </DialogActions>\n        </Dialog>\n        </div>\n    );\n}\n\nexport default ModalTemplate;"],"mappings":"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"},"metadata":{},"sourceType":"module"}