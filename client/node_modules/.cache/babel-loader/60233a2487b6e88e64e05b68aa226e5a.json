{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js\";\nimport React, { useState, useEffect } from \"react\";\nimport JsSIP from \"jssip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIP_USERNAME = \"200-dataocean\";\nconst SIP_PASSWORD = \"RjH2TV2s9s8FHSpz\";\nconst SIP_DOMAIN = \"webrtc.1com.co.il\";\nconst SIP_SERVER = `wss://${SIP_DOMAIN}/ws`;\n\nfunction SipAudio() {\n  // const [ua, setUa] = useState(null);\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  // useEffect(() => {\n  //     const socket = new JsSIP.WebSocketInterface(SIP_SERVER);\n  //     const configuration = {\n  //         sockets: [socket],\n  //         uri: `sip:${SIP_USERNAME}@${SIP_DOMAIN}`,\n  //         password: SIP_PASSWORD,\n  //     };\n  //     const userAgent = new JsSIP.UA(configuration);\n  //     setUa(userAgent);\n  //     userAgent.on(\"registered\", (data) => {\n  //         console.log(\"SIP registered:\", data);\n  //     });\n  //     userAgent.on(\"unregistered\", (data) => {\n  //         console.log(\"SIP unregistered:\", data);\n  //     });\n  //     userAgent.on(\"registrationFailed\", (data) => {\n  //         console.log(\"SIP registration failed:\", data);\n  //     });\n  //     userAgent.on(\"newRTCSession\", (data) => {\n  //         const session = data.session;\n  //         const remoteAudio = new Audio();\n  //         remoteAudio.autoplay = true;\n  //         session.on(\"ended\", () => {\n  //             console.log(\"SIP call ended\");\n  //         });\n  //         session.on(\"peerconnection\", (data) => {\n  //             const pc = data.peerconnection;\n  //             const remoteStream = new MediaStream();\n  //             pc.getReceivers().forEach((receiver) => {\n  //                 const track = receiver.track;\n  //                 if (track) {\n  //                     remoteStream.addTrack(track);\n  //                 }\n  //             });\n  //             remoteAudio.srcObject = remoteStream;\n  //         });\n  //         // session.answer();\n  //     });\n  //     userAgent.start();\n  //     return () => {\n  //         userAgent.stop();\n  //     };\n  // }, []);\n  // const makeCall = () => {\n  //     const options = {\n  //         mediaConstraints: { audio: true, video: false },\n  //     };\n  //     const session = ua.call(`sip:${phoneNumber}@${SIP_DOMAIN}`, options);\n  //     session.on(\"accepted\", () => {\n  //         console.log(\"SIP call accepted\");\n  //     });\n  //     console.log(session);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SipAudio;\nexport default SipAudio;\n\nvar _c;\n\n$RefreshReg$(_c, \"SipAudio\");","map":{"version":3,"names":["React","useState","useEffect","JsSIP","SIP_USERNAME","SIP_PASSWORD","SIP_DOMAIN","SIP_SERVER","SipAudio"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/src/pages/Phone.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport JsSIP from \"jssip\";\n\nconst SIP_USERNAME = \"200-dataocean\";\nconst SIP_PASSWORD = \"RjH2TV2s9s8FHSpz\";\nconst SIP_DOMAIN = \"webrtc.1com.co.il\";\nconst SIP_SERVER = `wss://${SIP_DOMAIN}/ws`;\n\nfunction SipAudio() {\n    // const [ua, setUa] = useState(null);\n    // const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n    // useEffect(() => {\n    //     const socket = new JsSIP.WebSocketInterface(SIP_SERVER);\n    //     const configuration = {\n    //         sockets: [socket],\n    //         uri: `sip:${SIP_USERNAME}@${SIP_DOMAIN}`,\n    //         password: SIP_PASSWORD,\n    //     };\n    //     const userAgent = new JsSIP.UA(configuration);\n\n    //     setUa(userAgent);\n\n    //     userAgent.on(\"registered\", (data) => {\n    //         console.log(\"SIP registered:\", data);\n    //     });\n\n    //     userAgent.on(\"unregistered\", (data) => {\n    //         console.log(\"SIP unregistered:\", data);\n    //     });\n\n    //     userAgent.on(\"registrationFailed\", (data) => {\n    //         console.log(\"SIP registration failed:\", data);\n    //     });\n\n    //     userAgent.on(\"newRTCSession\", (data) => {\n    //         const session = data.session;\n    //         const remoteAudio = new Audio();\n    //         remoteAudio.autoplay = true;\n\n    //         session.on(\"ended\", () => {\n    //             console.log(\"SIP call ended\");\n    //         });\n\n    //         session.on(\"peerconnection\", (data) => {\n    //             const pc = data.peerconnection;\n    //             const remoteStream = new MediaStream();\n    //             pc.getReceivers().forEach((receiver) => {\n    //                 const track = receiver.track;\n    //                 if (track) {\n    //                     remoteStream.addTrack(track);\n    //                 }\n    //             });\n    //             remoteAudio.srcObject = remoteStream;\n    //         });\n\n    //         // session.answer();\n    //     });\n\n    //     userAgent.start();\n\n    //     return () => {\n    //         userAgent.stop();\n    //     };\n    // }, []);\n\n    // const makeCall = () => {\n    //     const options = {\n    //         mediaConstraints: { audio: true, video: false },\n    //     };\n    //     const session = ua.call(`sip:${phoneNumber}@${SIP_DOMAIN}`, options);\n    //     session.on(\"accepted\", () => {\n    //         console.log(\"SIP call accepted\");\n    //     });\n    //     console.log(session);\n    // };\n\n    return (\n        <div>\n            {/* <div>SIP audio call</div>\n            <input\n                type=\"text\"\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n            />\n            <button onClick={makeCall}>Call</button> */}\n        </div>\n    );\n}\n\nexport default SipAudio;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,eAArB;AACA,MAAMC,YAAY,GAAG,kBAArB;AACA,MAAMC,UAAU,GAAG,mBAAnB;AACA,MAAMC,UAAU,GAAI,SAAQD,UAAW,KAAvC;;AAEA,SAASE,QAAT,GAAoB;EAChB;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;KAhFQA,Q;AAkFT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}