{"ast":null,"code":"/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\nvar util = require('util');\n\nvar errors = module.exports = require('./errors');\n\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\n  messageFormat = messageFormat || '';\n  var message = util.format.apply(this, [messageFormat].concat(formatArgs));\n  var error = new ExceptionConstructor(message);\n  Error.captureStackTrace(error, callee);\n  throw error;\n}\n\nfunction failArgumentCheck(callee, message, formatArgs) {\n  failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\n}\n\nfunction failStateCheck(callee, message, formatArgs) {\n  failCheck(errors.IllegalStateError, callee, message, formatArgs);\n}\n\nmodule.exports.checkArgument = function (value, message) {\n  if (!value) {\n    failArgumentCheck(arguments.callee, message, Array.prototype.slice.call(arguments, 2));\n  }\n};\n\nmodule.exports.checkState = function (value, message) {\n  if (!value) {\n    failStateCheck(arguments.callee, message, Array.prototype.slice.call(arguments, 2));\n  }\n};\n\nmodule.exports.checkIsDef = function (value, message) {\n  if (value !== undefined) {\n    return value;\n  }\n\n  failArgumentCheck(arguments.callee, message || 'Expected value to be defined but was undefined.', Array.prototype.slice.call(arguments, 2));\n};\n\nmodule.exports.checkIsDefAndNotNull = function (value, message) {\n  // Note that undefined == null.\n  if (value != null) {\n    return value;\n  }\n\n  failArgumentCheck(arguments.callee, message || 'Expected value to be defined and not null but got \"' + typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\n}; // Fixed version of the typeOf operator which returns 'null' for null values\n// and 'array' for arrays.\n\n\nfunction typeOf(value) {\n  var s = typeof value;\n\n  if (s == 'object') {\n    if (!value) {\n      return 'null';\n    } else if (value instanceof Array) {\n      return 'array';\n    }\n  }\n\n  return s;\n}\n\nfunction typeCheck(expect) {\n  return function (value, message) {\n    var type = typeOf(value);\n\n    if (type == expect) {\n      return value;\n    }\n\n    failArgumentCheck(arguments.callee, message || 'Expected \"' + expect + '\" but got \"' + type + '\".', Array.prototype.slice.call(arguments, 2));\n  };\n}\n\nmodule.exports.checkIsString = typeCheck('string');\nmodule.exports.checkIsArray = typeCheck('array');\nmodule.exports.checkIsNumber = typeCheck('number');\nmodule.exports.checkIsBoolean = typeCheck('boolean');\nmodule.exports.checkIsFunction = typeCheck('function');\nmodule.exports.checkIsObject = typeCheck('object');","map":{"version":3,"names":["util","require","errors","module","exports","failCheck","ExceptionConstructor","callee","messageFormat","formatArgs","message","format","apply","concat","error","Error","captureStackTrace","failArgumentCheck","IllegalArgumentError","failStateCheck","IllegalStateError","checkArgument","value","arguments","Array","prototype","slice","call","checkState","checkIsDef","undefined","checkIsDefAndNotNull","typeOf","s","typeCheck","expect","type","checkIsString","checkIsArray","checkIsNumber","checkIsBoolean","checkIsFunction","checkIsObject"],"sources":["/home/david/Desktop/workSpace/bots-dashboard/node_modules/precond/lib/checks.js"],"sourcesContent":["/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = require('util');\n\nvar errors = module.exports = require('./errors');\n\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\n    messageFormat = messageFormat || '';\n    var message = util.format.apply(this, [messageFormat].concat(formatArgs));\n    var error = new ExceptionConstructor(message);\n    Error.captureStackTrace(error, callee);\n    throw error;\n}\n\nfunction failArgumentCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\n}\n\nfunction failStateCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalStateError, callee, message, formatArgs);\n}\n\nmodule.exports.checkArgument = function(value, message) {\n    if (!value) {\n        failArgumentCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkState = function(value, message) {\n    if (!value) {\n        failStateCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkIsDef = function(value, message) {\n    if (value !== undefined) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined but was undefined.',\n        Array.prototype.slice.call(arguments, 2));\n};\n\nmodule.exports.checkIsDefAndNotNull = function(value, message) {\n    // Note that undefined == null.\n    if (value != null) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined and not null but got \"' +\n        typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\n};\n\n// Fixed version of the typeOf operator which returns 'null' for null values\n// and 'array' for arrays.\nfunction typeOf(value) {\n    var s = typeof value;\n    if (s == 'object') {\n        if (!value) {\n            return 'null';\n        } else if (value instanceof Array) {\n            return 'array';\n        }\n    }\n    return s;\n}\n\nfunction typeCheck(expect) {\n    return function(value, message) {\n        var type = typeOf(value);\n\n        if (type == expect) {\n            return value;\n        }\n\n        failArgumentCheck(arguments.callee, message ||\n            'Expected \"' + expect + '\" but got \"' + type + '\".',\n            Array.prototype.slice.call(arguments, 2));\n    };\n}\n\nmodule.exports.checkIsString = typeCheck('string');\nmodule.exports.checkIsArray = typeCheck('array');\nmodule.exports.checkIsNumber = typeCheck('number');\nmodule.exports.checkIsBoolean = typeCheck('boolean');\nmodule.exports.checkIsFunction = typeCheck('function');\nmodule.exports.checkIsObject = typeCheck('object');\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}